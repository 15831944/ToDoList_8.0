; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\_code\RTFContentCtrl\StdAfx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?_Min@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Min
PUBLIC	?_Max@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Max
PUBLIC	?_Min@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Min
PUBLIC	?_Max@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Max
PUBLIC	?_Min@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Min
PUBLIC	?_Max@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Max
PUBLIC	?_Min@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Min
PUBLIC	?_Max@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Max
PUBLIC	?_Min@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Max
PUBLIC	?_Min@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Max
PUBLIC	?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA ; ATL::CNoUIAssertHook::s_pfnPrevHook
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?VT@?$_CVarTypeInfo@D@ATL@@2GB			; ATL::_CVarTypeInfo<char>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::_CVarTypeInfo<char>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@E@ATL@@2GB			; ATL::_CVarTypeInfo<unsigned char>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::_CVarTypeInfo<unsigned char>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAD@ATL@@2GB		; ATL::_CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::_CVarTypeInfo<char *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAE@ATL@@2GB		; ATL::_CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::_CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@F@ATL@@2GB			; ATL::_CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::_CVarTypeInfo<short>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAF@ATL@@2GB		; ATL::_CVarTypeInfo<short *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::_CVarTypeInfo<short *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@G@ATL@@2GB			; ATL::_CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::_CVarTypeInfo<unsigned short>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAG@ATL@@2GB		; ATL::_CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::_CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@H@ATL@@2GB			; ATL::_CVarTypeInfo<int>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::_CVarTypeInfo<int>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAH@ATL@@2GB		; ATL::_CVarTypeInfo<int *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::_CVarTypeInfo<int *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@I@ATL@@2GB			; ATL::_CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::_CVarTypeInfo<unsigned int>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAI@ATL@@2GB		; ATL::_CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::_CVarTypeInfo<unsigned int *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@J@ATL@@2GB			; ATL::_CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::_CVarTypeInfo<long>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAJ@ATL@@2GB		; ATL::_CVarTypeInfo<long *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::_CVarTypeInfo<long *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@K@ATL@@2GB			; ATL::_CVarTypeInfo<unsigned long>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::_CVarTypeInfo<unsigned long>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAK@ATL@@2GB		; ATL::_CVarTypeInfo<unsigned long *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::_CVarTypeInfo<unsigned long *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@_J@ATL@@2GB			; ATL::_CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::_CVarTypeInfo<__int64>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PA_J@ATL@@2GB		; ATL::_CVarTypeInfo<__int64 *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::_CVarTypeInfo<__int64 *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@_K@ATL@@2GB			; ATL::_CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::_CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PA_K@ATL@@2GB		; ATL::_CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::_CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@M@ATL@@2GB			; ATL::_CVarTypeInfo<float>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::_CVarTypeInfo<float>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAM@ATL@@2GB		; ATL::_CVarTypeInfo<float *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::_CVarTypeInfo<float *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@N@ATL@@2GB			; ATL::_CVarTypeInfo<double>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::_CVarTypeInfo<double>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAN@ATL@@2GB		; ATL::_CVarTypeInfo<double *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::_CVarTypeInfo<double *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB	; ATL::_CVarTypeInfo<tagVARIANT *>::VT
PUBLIC	?VT@?$_CVarTypeInfo@PA_W@ATL@@2GB		; ATL::_CVarTypeInfo<wchar_t *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ ; ATL::_CVarTypeInfo<wchar_t *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAPA_W@ATL@@2GB		; ATL::_CVarTypeInfo<wchar_t * *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ ; ATL::_CVarTypeInfo<wchar_t * *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::_CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::_CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::_CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::_CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::_CVarTypeInfo<IDispatch *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::_CVarTypeInfo<IDispatch *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::_CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::_CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::_CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::_CVarTypeInfo<tagCY>::pmField
PUBLIC	?VT@?$_CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::_CVarTypeInfo<tagCY *>::VT
PUBLIC	?pmField@?$_CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::_CVarTypeInfo<tagCY *>::pmField
PUBLIC	?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A ; ATL::CFixedStringMgr::s_pLog
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,StrTraitMFC_DLL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
PUBLIC	?generic@CArchiveException@@2HB			; CArchiveException::generic
PUBLIC	?generic@CFileException@@2HB			; CFileException::generic
PUBLIC	?Millisecond@CFileTime@ATL@@2_KB		; ATL::CFileTime::Millisecond
PUBLIC	?Second@CFileTime@ATL@@2_KB			; ATL::CFileTime::Second
PUBLIC	?Minute@CFileTime@ATL@@2_KB			; ATL::CFileTime::Minute
PUBLIC	?Hour@CFileTime@ATL@@2_KB			; ATL::CFileTime::Hour
PUBLIC	?Day@CFileTime@ATL@@2_KB			; ATL::CFileTime::Day
PUBLIC	?Week@CFileTime@ATL@@2_KB			; ATL::CFileTime::Week
PUBLIC	?szInvalidDateTime@ATL@@3QB_WB			; ATL::szInvalidDateTime
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QB_WB		; ATL::szInvalidDateTimeSpan
PUBLIC	__pIncludeInitManaged
PUBLIC	_LIBID_ATLLib
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IInternalConnection
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?MAX_VALUE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_VALUE
PUBLIC	?MAX_TYPE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_TYPE
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?cbNeverDelete@CRegParser@ATL@@1HB		; ATL::CRegParser::cbNeverDelete
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
PUBLIC	?sc_redShift@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_redShift
PUBLIC	?sc_greenShift@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_greenShift
PUBLIC	?sc_blueShift@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_blueShift
PUBLIC	?sc_redMask@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_redMask
PUBLIC	?sc_greenMask@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_greenMask
PUBLIC	?sc_blueMask@ColorF@D2D1@@0IB			; D2D1::ColorF::sc_blueMask
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	_g_pfnGetSystemMetrics
PUBLIC	_g_pfnMonitorFromWindow
PUBLIC	_g_pfnMonitorFromRect
PUBLIC	_g_pfnMonitorFromPoint
PUBLIC	_g_pfnGetMonitorInfo
PUBLIC	_g_pfnEnumDisplayMonitors
PUBLIC	_g_pfnEnumDisplayDevices
PUBLIC	_g_fMultiMonInitDone
PUBLIC	_g_fMultimonPlatformNT
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA
_BSS	SEGMENT
?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA DD 01H DUP (?) ; ATL::CNoUIAssertHook::s_pfnPrevHook
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_BSS	SEGMENT
?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A DD 01H DUP (?) ; ATL::CFixedStringMgr::s_pLog
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
_g_pfnGetSystemMetrics DD 01H DUP (?)
_g_pfnMonitorFromWindow DD 01H DUP (?)
_g_pfnMonitorFromRect DD 01H DUP (?)
_g_pfnMonitorFromPoint DD 01H DUP (?)
_g_pfnGetMonitorInfo DD 01H DUP (?)
_g_pfnEnumDisplayMonitors DD 01H DUP (?)
_g_pfnEnumDisplayDevices DD 01H DUP (?)
_g_fMultiMonInitDone DD 01H DUP (?)
_g_fMultimonPlatformNT DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ?sc_blueMask@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_blueMask@ColorF@D2D1@@0IB DD 0ffH			; D2D1::ColorF::sc_blueMask
CONST	ENDS
;	COMDAT ?sc_greenMask@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_greenMask@ColorF@D2D1@@0IB DD 0ff00H		; D2D1::ColorF::sc_greenMask
CONST	ENDS
;	COMDAT ?sc_redMask@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_redMask@ColorF@D2D1@@0IB DD 0ff0000H		; D2D1::ColorF::sc_redMask
CONST	ENDS
;	COMDAT ?sc_blueShift@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_blueShift@ColorF@D2D1@@0IB DD 00H			; D2D1::ColorF::sc_blueShift
CONST	ENDS
;	COMDAT ?sc_greenShift@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_greenShift@ColorF@D2D1@@0IB DD 08H			; D2D1::ColorF::sc_greenShift
CONST	ENDS
;	COMDAT ?sc_redShift@ColorF@D2D1@@0IB
CONST	SEGMENT
?sc_redShift@ColorF@D2D1@@0IB DD 010H			; D2D1::ColorF::sc_redShift
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT
?cbNeverDelete@CRegParser@ATL@@1HB DD 0cH		; ATL::CRegParser::cbNeverDelete
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB DD FLAT:$SG91745 ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:$SG91746
	DD	FLAT:$SG91747
	DD	FLAT:$SG91748
	DD	FLAT:$SG91749
	DD	FLAT:$SG91750
	DD	FLAT:$SG91751
	DD	FLAT:$SG91752
	DD	FLAT:$SG91753
	DD	FLAT:$SG91754
	DD	FLAT:$SG91755
	DD	FLAT:$SG91756
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_TYPE@CRegParser@ATL@@1HB DD 01000H			; ATL::CRegParser::MAX_TYPE
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_VALUE@CRegParser@ATL@@1HB DD 01000H		; ATL::CRegParser::MAX_VALUE
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QB_WB DD FLAT:$SG68187	; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QB_WB DD FLAT:$SG68185		; ATL::szInvalidDateTime
CONST	ENDS
CONST	SEGMENT
$SG68185 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T'
	DB	00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG68187 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T'
	DB	00H, 'i', 00H, 'm', 00H, 'e', 00H, 'S', 00H, 'p', 00H, 'a', 00H
	DB	'n', 00H, 00H, 00H
	ORG $+2
$SG91011 DB	'S', 00H, 00H, 00H
_szStringVal DD	FLAT:$SG91011
$SG91013 DB	'M', 00H, 00H, 00H
_multiszStringVal DD FLAT:$SG91013
$SG91015 DB	'D', 00H, 00H, 00H
_szDwordVal DD	FLAT:$SG91015
$SG91017 DB	'B', 00H, 00H, 00H
_szBinaryVal DD	FLAT:$SG91017
$SG91019 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
_szValToken DD	FLAT:$SG91019
$SG91021 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
_szForceRemove DD FLAT:$SG91021
$SG91023 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
_szNoRemove DD	FLAT:$SG91023
$SG91025 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
_szDelete DD	FLAT:$SG91025
$SG91745 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG91746 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG91747 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG91748 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG91749 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG91750 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG91751 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG91752 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG91753 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG91754 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG91755 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG91756 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG92928 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG169884 DB	' elements', 00H
	ORG $+2
$SG92929 DB	'c', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H
	DB	'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H
$SG169830 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG169883 DB	'with ', 00H
	ORG $+2
$SG169892 DB	0aH, 00H
	ORG $+2
$SG169839 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG169900 DB	0aH, 00H
	ORG $+2
$SG169856 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG169980 DB	'with ', 00H
	ORG $+2
$SG169981 DB	' elements', 00H
	ORG $+2
$SG169910 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG169983 DB	0aH, 00H
	ORG $+2
$SG169912 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG169991 DB	0aH, 00H
	ORG $+2
$SG169916 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG170091 DB	'with ', 00H
	ORG $+2
$SG170092 DB	' elements', 00H
	ORG $+2
$SG169919 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG170100 DB	0aH, 00H
	ORG $+2
$SG169945 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG170108 DB	0aH, 00H
	ORG $+2
$SG169961 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171166 DB	'U', 00H, 'S', 00H, 'E', 00H, 'R', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG171175 DB	'GetSystemMetrics', 00H
	ORG $+3
$SG170001 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171176 DB	'MonitorFromWindow', 00H
	ORG $+2
$SG170003 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171177 DB	'MonitorFromRect', 00H
$SG171178 DB	'MonitorFromPoint', 00H
	ORG $+3
$SG170006 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171179 DB	'EnumDisplayMonitors', 00H
$SG170008 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171180 DB	'EnumDisplayDevicesW', 00H
$SG170010 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171181 DB	'GetMonitorInfoW', 00H
	ORG $+4
$SG170013 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170038 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170047 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170064 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170118 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170120 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170124 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170127 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170202 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170214 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170247 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170252 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170279 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170284 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170294 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170296 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170311 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170318 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170354 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170358 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170370 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170389 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170394 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170421 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170426 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170471 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170483 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170515 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170520 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170547 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170552 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170589 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170593 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170622 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG170626 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG171182 DB	'GetMonitorInfoA', 00H
$SG171243 DB	'DISPLAY', 00H
$SG171282 DB	'DISPLAY', 00H
$SG171284 DB	'DISPLAY', 00H
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Week@CFileTime@ATL@@2_KB DQ 0000058028e44000H		; ATL::CFileTime::Week
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Day@CFileTime@ATL@@2_KB DQ 000000c92a69c000H		; ATL::CFileTime::Day
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Hour@CFileTime@ATL@@2_KB DQ 0000000861c46800H		; ATL::CFileTime::Hour
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Minute@CFileTime@ATL@@2_KB DQ 0000000023c34600H	; ATL::CFileTime::Minute
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Second@CFileTime@ATL@@2_KB DQ 0000000000989680H	; ATL::CFileTime::Second
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Millisecond@CFileTime@ATL@@2_KB DQ 0000000000002710H	; ATL::CFileTime::Millisecond
CONST	ENDS
;	COMDAT ?generic@CFileException@@2HB
CONST	SEGMENT
?generic@CFileException@@2HB DD 01H			; CFileException::generic
CONST	ENDS
;	COMDAT ?generic@CArchiveException@@2HB
CONST	SEGMENT
?generic@CArchiveException@@2HB DD 01H			; CArchiveException::generic
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB DB 01H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,StrTraitMFC_DLL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB DB 01H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,StrTraitMFC_DLL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::_CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::_CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::_CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::_CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::_CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::_CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::_CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::_CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::_CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::_CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::_CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::_CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ DD 08H ; ATL::_CVarTypeInfo<wchar_t * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAPA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAPA_W@ATL@@2GB DW 04008H		; ATL::_CVarTypeInfo<wchar_t * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ DD 08H ; ATL::_CVarTypeInfo<wchar_t *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PA_W@ATL@@2GB DW 08H		; ATL::_CVarTypeInfo<wchar_t *>::VT
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB DW 0400cH	; ATL::_CVarTypeInfo<tagVARIANT *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::_CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::_CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::_CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::_CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::_CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::_CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::_CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::_CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::_CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::_CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::_CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::_CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::_CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::_CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::_CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::_CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::_CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::_CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::_CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::_CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::_CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::_CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::_CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::_CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::_CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::_CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAG@ATL@@2GB DW 04012H		; ATL::_CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::_CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::_CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::_CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::_CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::_CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::_CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::_CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::_CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::_CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::_CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$_CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$_CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::_CVarTypeInfo<char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$_CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$_CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::_CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Max@?$AtlLimits@_K@ATL@@2_KB DQ ffffffffffffffffH	; ATL::AtlLimits<unsigned __int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Min@?$AtlLimits@_K@ATL@@2_KB DQ 0000000000000000H	; ATL::AtlLimits<unsigned __int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Max@?$AtlLimits@_J@ATL@@2_JB DQ 7fffffffffffffffH	; ATL::AtlLimits<__int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Min@?$AtlLimits@_J@ATL@@2_JB DQ 8000000000000000H	; ATL::AtlLimits<__int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Max@?$AtlLimits@K@ATL@@2KB DD 0ffffffffH		; ATL::AtlLimits<unsigned long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Min@?$AtlLimits@K@ATL@@2KB DD 00H			; ATL::AtlLimits<unsigned long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Max@?$AtlLimits@J@ATL@@2JB DD 07fffffffH		; ATL::AtlLimits<long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Min@?$AtlLimits@J@ATL@@2JB DD 080000000H		; ATL::AtlLimits<long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Max@?$AtlLimits@I@ATL@@2IB DD 0ffffffffH		; ATL::AtlLimits<unsigned int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Min@?$AtlLimits@I@ATL@@2IB DD 00H			; ATL::AtlLimits<unsigned int>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Max@?$AtlLimits@H@ATL@@2HB DD 07fffffffH		; ATL::AtlLimits<int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Min@?$AtlLimits@H@ATL@@2HB DD 080000000H		; ATL::AtlLimits<int>::_Min
CONST	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_IsPlatformNT
EXTRN	__imp__GetVersionExA@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	_memset:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\multimon.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT _IsPlatformNT
_TEXT	SEGMENT
_osvi$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
_IsPlatformNT PROC					; COMDAT

; 177  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 178  :     OSVERSIONINFOA osvi = {0};

	mov	DWORD PTR _osvi$[ebp], 0
	push	144					; 00000090H
	push	0
	lea	eax, DWORD PTR _osvi$[ebp+4]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 179  :     osvi.dwOSVersionInfoSize = sizeof(osvi);

	mov	DWORD PTR _osvi$[ebp], 148		; 00000094H

; 180  :     GetVersionExA((OSVERSIONINFOA*)&osvi);

	mov	esi, esp
	lea	ecx, DWORD PTR _osvi$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 181  :     return (VER_PLATFORM_WIN32_NT == osvi.dwPlatformId);    

	xor	eax, eax
	cmp	DWORD PTR _osvi$[ebp+16], 2
	sete	al

; 182  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@IsPlatform
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@IsPlatform:
	DD	1
	DD	$LN4@IsPlatform
$LN4@IsPlatform:
	DD	-156					; ffffff64H
	DD	148					; 00000094H
	DD	$LN3@IsPlatform
$LN3@IsPlatform:
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	0
_IsPlatformNT ENDP
_TEXT	ENDS
PUBLIC	_InitMultipleMonitorStubs
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _InitMultipleMonitorStubs
_TEXT	SEGMENT
tv134 = -8						; size = 4
_hUser32$ = -4						; size = 4
_InitMultipleMonitorStubs PROC				; COMDAT

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 186  :     HMODULE hUser32;
; 187  :     if (g_fMultiMonInitDone)

	cmp	DWORD PTR _g_fMultiMonInitDone, 0
	je	SHORT $LN3@InitMultip

; 188  :     {
; 189  :         return g_pfnGetMonitorInfo != NULL;

	xor	eax, eax
	cmp	DWORD PTR _g_pfnGetMonitorInfo, 0
	setne	al
	jmp	$LN4@InitMultip
$LN3@InitMultip:

; 190  :     }
; 191  : 
; 192  :     g_fMultimonPlatformNT = IsPlatformNT();

	call	_IsPlatformNT
	mov	DWORD PTR _g_fMultimonPlatformNT, eax

; 193  :     hUser32 = GetModuleHandle(TEXT("USER32"));

	mov	esi, esp
	push	OFFSET $SG171166
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hUser32$[ebp], eax

; 194  :     if (hUser32 &&
; 195  :         (*(FARPROC*)&g_pfnGetSystemMetrics    = GetProcAddress(hUser32,"GetSystemMetrics")) != NULL &&
; 196  :         (*(FARPROC*)&g_pfnMonitorFromWindow   = GetProcAddress(hUser32,"MonitorFromWindow")) != NULL &&
; 197  :         (*(FARPROC*)&g_pfnMonitorFromRect     = GetProcAddress(hUser32,"MonitorFromRect")) != NULL &&
; 198  :         (*(FARPROC*)&g_pfnMonitorFromPoint    = GetProcAddress(hUser32,"MonitorFromPoint")) != NULL &&
; 199  :         (*(FARPROC*)&g_pfnEnumDisplayMonitors = GetProcAddress(hUser32,"EnumDisplayMonitors")) != NULL &&
; 200  : #ifdef UNICODE
; 201  :         (*(FARPROC*)&g_pfnEnumDisplayDevices  = GetProcAddress(hUser32,"EnumDisplayDevicesW")) != NULL &&
; 202  :         (*(FARPROC*)&g_pfnGetMonitorInfo      = g_fMultimonPlatformNT ? GetProcAddress(hUser32,"GetMonitorInfoW") : 
; 203  :                                                 GetProcAddress(hUser32,"GetMonitorInfoA")) != NULL
; 204  : #else
; 205  :         (*(FARPROC*)&g_pfnGetMonitorInfo      = GetProcAddress(hUser32,"GetMonitorInfoA")) != NULL &&
; 206  :         (*(FARPROC*)&g_pfnEnumDisplayDevices  = GetProcAddress(hUser32,"EnumDisplayDevicesA")) != NULL
; 207  : #endif
; 208  :     ) {

	cmp	DWORD PTR _hUser32$[ebp], 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171175
	mov	eax, DWORD PTR _hUser32$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnGetSystemMetrics, eax
	cmp	DWORD PTR _g_pfnGetSystemMetrics, 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171176
	mov	ecx, DWORD PTR _hUser32$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnMonitorFromWindow, eax
	cmp	DWORD PTR _g_pfnMonitorFromWindow, 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171177
	mov	edx, DWORD PTR _hUser32$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnMonitorFromRect, eax
	cmp	DWORD PTR _g_pfnMonitorFromRect, 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171178
	mov	eax, DWORD PTR _hUser32$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnMonitorFromPoint, eax
	cmp	DWORD PTR _g_pfnMonitorFromPoint, 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171179
	mov	ecx, DWORD PTR _hUser32$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnEnumDisplayMonitors, eax
	cmp	DWORD PTR _g_pfnEnumDisplayMonitors, 0
	je	$LN2@InitMultip
	mov	esi, esp
	push	OFFSET $SG171180
	mov	edx, DWORD PTR _hUser32$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_pfnEnumDisplayDevices, eax
	cmp	DWORD PTR _g_pfnEnumDisplayDevices, 0
	je	SHORT $LN2@InitMultip
	cmp	DWORD PTR _g_fMultimonPlatformNT, 0
	je	SHORT $LN6@InitMultip
	mov	esi, esp
	push	OFFSET $SG171181
	mov	eax, DWORD PTR _hUser32$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN7@InitMultip
$LN6@InitMultip:
	mov	esi, esp
	push	OFFSET $SG171182
	mov	ecx, DWORD PTR _hUser32$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
$LN7@InitMultip:
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR _g_pfnGetMonitorInfo, edx
	cmp	DWORD PTR _g_pfnGetMonitorInfo, 0
	je	SHORT $LN2@InitMultip

; 209  :         g_fMultiMonInitDone = TRUE;

	mov	DWORD PTR _g_fMultiMonInitDone, 1

; 210  :         return TRUE;

	mov	eax, 1
	jmp	SHORT $LN4@InitMultip

; 211  :     }
; 212  :     else

	jmp	SHORT $LN4@InitMultip
$LN2@InitMultip:

; 213  :     {
; 214  :         g_pfnGetSystemMetrics    = NULL;

	mov	DWORD PTR _g_pfnGetSystemMetrics, 0

; 215  :         g_pfnMonitorFromWindow   = NULL;

	mov	DWORD PTR _g_pfnMonitorFromWindow, 0

; 216  :         g_pfnMonitorFromRect     = NULL;

	mov	DWORD PTR _g_pfnMonitorFromRect, 0

; 217  :         g_pfnMonitorFromPoint    = NULL;

	mov	DWORD PTR _g_pfnMonitorFromPoint, 0

; 218  :         g_pfnGetMonitorInfo      = NULL;

	mov	DWORD PTR _g_pfnGetMonitorInfo, 0

; 219  :         g_pfnEnumDisplayMonitors = NULL;

	mov	DWORD PTR _g_pfnEnumDisplayMonitors, 0

; 220  :         g_pfnEnumDisplayDevices  = NULL;

	mov	DWORD PTR _g_pfnEnumDisplayDevices, 0

; 221  : 
; 222  :         g_fMultiMonInitDone = TRUE;

	mov	DWORD PTR _g_fMultiMonInitDone, 1

; 223  :         return FALSE;

	xor	eax, eax
$LN4@InitMultip:

; 224  :     }
; 225  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InitMultipleMonitorStubs ENDP
_TEXT	ENDS
PUBLIC	_xGetSystemMetrics@4
EXTRN	__imp__GetSystemMetrics@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xGetSystemMetrics@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_nIndex$ = 8						; size = 4
_xGetSystemMetrics@4 PROC				; COMDAT

; 236  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 237  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN7@xGetSystem

; 238  :         return g_pfnGetSystemMetrics(nIndex);

	mov	esi, esp
	mov	eax, DWORD PTR _nIndex$[ebp]
	push	eax
	call	DWORD PTR _g_pfnGetSystemMetrics
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN8@xGetSystem
$LN7@xGetSystem:

; 239  : 
; 240  :     switch (nIndex)

	mov	ecx, DWORD PTR _nIndex$[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 76					; 0000004cH
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 5
	ja	SHORT $LN5@xGetSystem
	mov	eax, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN10@xGetSystem[eax*4]
$LN4@xGetSystem:

; 241  :     {
; 242  :     case SM_CMONITORS:
; 243  :     case SM_SAMEDISPLAYFORMAT:
; 244  :         return 1;

	mov	eax, 1
	jmp	SHORT $LN8@xGetSystem
$LN3@xGetSystem:

; 245  : 
; 246  :     case SM_XVIRTUALSCREEN:
; 247  :     case SM_YVIRTUALSCREEN:
; 248  :         return 0;

	xor	eax, eax
	jmp	SHORT $LN8@xGetSystem
$LN2@xGetSystem:

; 249  : 
; 250  :     case SM_CXVIRTUALSCREEN:
; 251  :         nIndex = SM_CXSCREEN;

	mov	DWORD PTR _nIndex$[ebp], 0

; 252  :         break;

	jmp	SHORT $LN5@xGetSystem
$LN1@xGetSystem:

; 253  : 
; 254  :     case SM_CYVIRTUALSCREEN:
; 255  :         nIndex = SM_CYSCREEN;

	mov	DWORD PTR _nIndex$[ebp], 1
$LN5@xGetSystem:

; 256  :         break;
; 257  :     }
; 258  : 
; 259  :     return GetSystemMetrics(nIndex);

	mov	esi, esp
	mov	ecx, DWORD PTR _nIndex$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@xGetSystem:

; 260  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@xGetSystem:
	DD	$LN3@xGetSystem
	DD	$LN3@xGetSystem
	DD	$LN2@xGetSystem
	DD	$LN1@xGetSystem
	DD	$LN4@xGetSystem
	DD	$LN4@xGetSystem
_xGetSystemMetrics@4 ENDP
_TEXT	ENDS
PUBLIC	_xMonitorFromPoint@12
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xMonitorFromPoint@12
_TEXT	SEGMENT
_ptScreenCoords$ = 8					; size = 8
_dwFlags$ = 16						; size = 4
_xMonitorFromPoint@12 PROC				; COMDAT

; 266  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 267  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN3@xMonitorFr

; 268  :         return g_pfnMonitorFromPoint(ptScreenCoords, dwFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _dwFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptScreenCoords$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _ptScreenCoords$[ebp]
	push	edx
	call	DWORD PTR _g_pfnMonitorFromPoint
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@xMonitorFr
$LN3@xMonitorFr:

; 269  : 
; 270  :     if ((dwFlags & (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST)) ||
; 271  :         ((ptScreenCoords.x >= 0) &&
; 272  :         (ptScreenCoords.x < GetSystemMetrics(SM_CXSCREEN)) &&
; 273  :         (ptScreenCoords.y >= 0) &&
; 274  :         (ptScreenCoords.y < GetSystemMetrics(SM_CYSCREEN))))

	mov	eax, DWORD PTR _dwFlags$[ebp]
	and	eax, 3
	jne	SHORT $LN1@xMonitorFr
	cmp	DWORD PTR _ptScreenCoords$[ebp], 0
	jl	SHORT $LN2@xMonitorFr
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _ptScreenCoords$[ebp], eax
	jge	SHORT $LN2@xMonitorFr
	cmp	DWORD PTR _ptScreenCoords$[ebp+4], 0
	jl	SHORT $LN2@xMonitorFr
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _ptScreenCoords$[ebp+4], eax
	jge	SHORT $LN2@xMonitorFr
$LN1@xMonitorFr:

; 275  :     {
; 276  :         return xPRIMARY_MONITOR;

	mov	eax, 305397826				; 12340042H
	jmp	SHORT $LN4@xMonitorFr
$LN2@xMonitorFr:

; 277  :     }
; 278  : 
; 279  :     return NULL;

	xor	eax, eax
$LN4@xMonitorFr:

; 280  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
_xMonitorFromPoint@12 ENDP
_TEXT	ENDS
PUBLIC	_xMonitorFromRect@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xMonitorFromRect@8
_TEXT	SEGMENT
_lprcScreenCoords$ = 8					; size = 4
_dwFlags$ = 12						; size = 4
_xMonitorFromRect@8 PROC				; COMDAT

; 284  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 285  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN3@xMonitorFr@2

; 286  :         return g_pfnMonitorFromRect(lprcScreenCoords, dwFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _dwFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lprcScreenCoords$[ebp]
	push	ecx
	call	DWORD PTR _g_pfnMonitorFromRect
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@xMonitorFr@2
$LN3@xMonitorFr@2:

; 287  : 
; 288  :     if ((dwFlags & (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST)) ||
; 289  :         ((lprcScreenCoords->right > 0) &&
; 290  :         (lprcScreenCoords->bottom > 0) &&
; 291  :         (lprcScreenCoords->left < GetSystemMetrics(SM_CXSCREEN)) &&
; 292  :         (lprcScreenCoords->top < GetSystemMetrics(SM_CYSCREEN))))

	mov	edx, DWORD PTR _dwFlags$[ebp]
	and	edx, 3
	jne	SHORT $LN1@xMonitorFr@2
	mov	eax, DWORD PTR _lprcScreenCoords$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jle	SHORT $LN2@xMonitorFr@2
	mov	ecx, DWORD PTR _lprcScreenCoords$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jle	SHORT $LN2@xMonitorFr@2
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _lprcScreenCoords$[ebp]
	cmp	DWORD PTR [edx], eax
	jge	SHORT $LN2@xMonitorFr@2
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lprcScreenCoords$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jge	SHORT $LN2@xMonitorFr@2
$LN1@xMonitorFr@2:

; 293  :     {
; 294  :         return xPRIMARY_MONITOR;

	mov	eax, 305397826				; 12340042H
	jmp	SHORT $LN4@xMonitorFr@2
$LN2@xMonitorFr@2:

; 295  :     }
; 296  : 
; 297  :     return NULL;

	xor	eax, eax
$LN4@xMonitorFr@2:

; 298  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_xMonitorFromRect@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_xMonitorFromWindow@8
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetWindowPlacement@8:PROC
EXTRN	__imp__IsIconic@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xMonitorFromWindow@8
_TEXT	SEGMENT
tv80 = -60						; size = 4
_wp$ = -52						; size = 44
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_xMonitorFromWindow@8 PROC				; COMDAT

; 302  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 303  :     WINDOWPLACEMENT wp;
; 304  : 
; 305  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN3@xMonitorFr@3

; 306  :         return g_pfnMonitorFromWindow(hWnd, dwFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _dwFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR _g_pfnMonitorFromWindow
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@xMonitorFr@3
$LN3@xMonitorFr@3:

; 307  : 
; 308  :     if (dwFlags & (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST))

	mov	edx, DWORD PTR _dwFlags$[ebp]
	and	edx, 3
	je	SHORT $LN2@xMonitorFr@3

; 309  :         return xPRIMARY_MONITOR;

	mov	eax, 305397826				; 12340042H
	jmp	SHORT $LN4@xMonitorFr@3
$LN2@xMonitorFr@3:

; 310  : 
; 311  :     if (IsIconic(hWnd) ?
; 312  :             GetWindowPlacement(hWnd, &wp) :
; 313  :             GetWindowRect(hWnd, &wp.rcNormalPosition)) {

	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN6@xMonitorFr@3
	mov	esi, esp
	lea	ecx, DWORD PTR _wp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowPlacement@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN7@xMonitorFr@3
$LN6@xMonitorFr@3:
	mov	esi, esp
	lea	eax, DWORD PTR _wp$[ebp+28]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
$LN7@xMonitorFr@3:
	cmp	DWORD PTR tv80[ebp], 0
	je	SHORT $LN1@xMonitorFr@3

; 314  : 
; 315  :         return xMonitorFromRect(&wp.rcNormalPosition, dwFlags);

	mov	edx, DWORD PTR _dwFlags$[ebp]
	push	edx
	lea	eax, DWORD PTR _wp$[ebp+28]
	push	eax
	call	_xMonitorFromRect@8
	jmp	SHORT $LN4@xMonitorFr@3
$LN1@xMonitorFr@3:

; 316  :     }
; 317  : 
; 318  :     return NULL;

	xor	eax, eax
$LN4@xMonitorFr@3:

; 319  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@xMonitorFr@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@xMonitorFr@3:
	DD	1
	DD	$LN9@xMonitorFr@3
$LN9@xMonitorFr@3:
	DD	-52					; ffffffccH
	DD	44					; 0000002cH
	DD	$LN8@xMonitorFr@3
$LN8@xMonitorFr@3:
	DB	119					; 00000077H
	DB	112					; 00000070H
	DB	0
_xMonitorFromWindow@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_xGetMonitorInfo@8
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xGetMonitorInfo@8
_TEXT	SEGMENT
_f$171227 = -32						; size = 4
_rcWork$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_hMonitor$ = 8						; size = 4
_lpMonitorInfo$ = 12					; size = 4
_xGetMonitorInfo@8 PROC					; COMDAT

; 323  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 324  :     RECT rcWork;
; 325  : 
; 326  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN4@xGetMonito

; 327  :     {
; 328  :         BOOL f = g_pfnGetMonitorInfo(hMonitor, lpMonitorInfo);

	mov	esi, esp
	mov	eax, DWORD PTR _lpMonitorInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMonitor$[ebp]
	push	ecx
	call	DWORD PTR _g_pfnGetMonitorInfo
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _f$171227[ebp], eax

; 329  : #ifdef UNICODE
; 330  :         if (f && !g_fMultimonPlatformNT && (lpMonitorInfo->cbSize >= sizeof(MONITORINFOEX)))

	cmp	DWORD PTR _f$171227[ebp], 0
	je	SHORT $LN3@xGetMonito
	cmp	DWORD PTR _g_fMultimonPlatformNT, 0
	jne	SHORT $LN3@xGetMonito
	mov	edx, DWORD PTR _lpMonitorInfo$[ebp]
	cmp	DWORD PTR [edx], 104			; 00000068H
	jb	SHORT $LN3@xGetMonito

; 331  :         { 
; 332  :             MultiByteToWideChar(CP_ACP, 0,
; 333  :                 (LPSTR)((MONITORINFOEX*)lpMonitorInfo)->szDevice, -1,
; 334  :                 ((MONITORINFOEX*)lpMonitorInfo)->szDevice, (sizeof(((MONITORINFOEX*)lpMonitorInfo)->szDevice)/sizeof(TCHAR)));

	mov	esi, esp
	push	32					; 00000020H
	mov	eax, DWORD PTR _lpMonitorInfo$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	push	-1
	mov	ecx, DWORD PTR _lpMonitorInfo$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@xGetMonito:

; 335  :         }
; 336  : #endif
; 337  :         return f;

	mov	eax, DWORD PTR _f$171227[ebp]
	jmp	$LN5@xGetMonito
$LN4@xGetMonito:

; 338  :     }
; 339  : 
; 340  :     if ((hMonitor == xPRIMARY_MONITOR) &&
; 341  :         lpMonitorInfo &&
; 342  :         (lpMonitorInfo->cbSize >= sizeof(MONITORINFO)) &&
; 343  :         SystemParametersInfoA(SPI_GETWORKAREA, 0, &rcWork, 0))

	cmp	DWORD PTR _hMonitor$[ebp], 305397826	; 12340042H
	jne	$LN2@xGetMonito
	cmp	DWORD PTR _lpMonitorInfo$[ebp], 0
	je	$LN2@xGetMonito
	mov	edx, DWORD PTR _lpMonitorInfo$[ebp]
	cmp	DWORD PTR [edx], 40			; 00000028H
	jb	$LN2@xGetMonito
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _rcWork$[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN2@xGetMonito

; 344  :     {
; 345  :         lpMonitorInfo->rcMonitor.left = 0;

	mov	ecx, DWORD PTR _lpMonitorInfo$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 346  :         lpMonitorInfo->rcMonitor.top  = 0;

	mov	edx, DWORD PTR _lpMonitorInfo$[ebp]
	mov	DWORD PTR [edx+8], 0

; 347  :         lpMonitorInfo->rcMonitor.right  = GetSystemMetrics(SM_CXSCREEN);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lpMonitorInfo$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 348  :         lpMonitorInfo->rcMonitor.bottom = GetSystemMetrics(SM_CYSCREEN);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _lpMonitorInfo$[ebp]
	mov	DWORD PTR [edx+16], eax

; 349  :         lpMonitorInfo->rcWork = rcWork;

	mov	eax, DWORD PTR _lpMonitorInfo$[ebp]
	add	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _rcWork$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rcWork$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rcWork$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rcWork$[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 350  :         lpMonitorInfo->dwFlags = MONITORINFOF_PRIMARY;

	mov	eax, DWORD PTR _lpMonitorInfo$[ebp]
	mov	DWORD PTR [eax+36], 1

; 351  : 
; 352  :         if (lpMonitorInfo->cbSize >= sizeof(MONITORINFOEX))

	mov	ecx, DWORD PTR _lpMonitorInfo$[ebp]
	cmp	DWORD PTR [ecx], 104			; 00000068H
	jb	SHORT $LN1@xGetMonito

; 353  :         {
; 354  : #ifdef UNICODE
; 355  :             MultiByteToWideChar(CP_ACP, 0, "DISPLAY", -1, ((MONITORINFOEX*)lpMonitorInfo)->szDevice, (sizeof(((MONITORINFOEX*)lpMonitorInfo)->szDevice)/sizeof(TCHAR)));

	mov	esi, esp
	push	32					; 00000020H
	mov	edx, DWORD PTR _lpMonitorInfo$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	push	-1
	push	OFFSET $SG171243
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@xGetMonito:

; 356  : #else // UNICODE
; 357  : #if _MULTIMON_USE_SECURE_CRT
; 358  :             strncpy_s(((MONITORINFOEX*)lpMonitorInfo)->szDevice, (sizeof(((MONITORINFOEX*)lpMonitorInfo)->szDevice)/sizeof(TCHAR)), TEXT("DISPLAY"), (sizeof(((MONITORINFOEX*)lpMonitorInfo)->szDevice)/sizeof(TCHAR)) - 1);
; 359  : #else
; 360  :             lstrcpyn(((MONITORINFOEX*)lpMonitorInfo)->szDevice, TEXT("DISPLAY"), (sizeof(((MONITORINFOEX*)lpMonitorInfo)->szDevice)/sizeof(TCHAR)));
; 361  : #endif // _MULTIMON_USE_SECURE_CRT
; 362  : #endif // UNICODE
; 363  :         }
; 364  : 
; 365  :         return TRUE;

	mov	eax, 1
	jmp	SHORT $LN5@xGetMonito
$LN2@xGetMonito:

; 366  :     }
; 367  : 
; 368  :     return FALSE;

	xor	eax, eax
$LN5@xGetMonito:

; 369  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@xGetMonito
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@xGetMonito:
	DD	1
	DD	$LN8@xGetMonito
$LN8@xGetMonito:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN7@xGetMonito
$LN7@xGetMonito:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	0
_xGetMonitorInfo@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_xEnumDisplayMonitors@16
EXTRN	__imp__IntersectRect@12:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp__GetDCOrgEx@8:PROC
EXTRN	__imp__GetClipBox@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xEnumDisplayMonitors@16
_TEXT	SEGMENT
tv80 = -72						; size = 4
_ptOrg$171255 = -64					; size = 8
_rcClip$171254 = -48					; size = 16
_rcLimit$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_hdcOptionalForPainting$ = 8				; size = 4
_lprcEnumMonitorsThatIntersect$ = 12			; size = 4
_lpfnEnumProc$ = 16					; size = 4
_dwData$ = 20						; size = 4
_xEnumDisplayMonitors@16 PROC				; COMDAT

; 377  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 378  :     RECT rcLimit;
; 379  : 
; 380  :     if (InitMultipleMonitorStubs()) {

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN13@xEnumDispl

; 381  :         return g_pfnEnumDisplayMonitors(
; 382  :                 hdcOptionalForPainting,
; 383  :                 lprcEnumMonitorsThatIntersect,
; 384  :                 lpfnEnumProc,
; 385  :                 dwData);

	mov	esi, esp
	mov	eax, DWORD PTR _dwData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpfnEnumProc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lprcEnumMonitorsThatIntersect$[ebp]
	push	edx
	mov	eax, DWORD PTR _hdcOptionalForPainting$[ebp]
	push	eax
	call	DWORD PTR _g_pfnEnumDisplayMonitors
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN14@xEnumDispl
$LN13@xEnumDispl:

; 386  :     }
; 387  : 
; 388  :     if (!lpfnEnumProc)

	cmp	DWORD PTR _lpfnEnumProc$[ebp], 0
	jne	SHORT $LN12@xEnumDispl

; 389  :         return FALSE;

	xor	eax, eax
	jmp	$LN14@xEnumDispl
$LN12@xEnumDispl:

; 390  : 
; 391  :     rcLimit.left   = 0;

	mov	DWORD PTR _rcLimit$[ebp], 0

; 392  :     rcLimit.top    = 0;

	mov	DWORD PTR _rcLimit$[ebp+4], 0

; 393  :     rcLimit.right  = GetSystemMetrics(SM_CXSCREEN);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rcLimit$[ebp+8], eax

; 394  :     rcLimit.bottom = GetSystemMetrics(SM_CYSCREEN);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rcLimit$[ebp+12], eax

; 395  : 
; 396  :     if (hdcOptionalForPainting)

	cmp	DWORD PTR _hdcOptionalForPainting$[ebp], 0
	je	$LN11@xEnumDispl

; 397  :     {
; 398  :         RECT    rcClip;
; 399  :         POINT   ptOrg;
; 400  : 
; 401  :         switch (GetClipBox(hdcOptionalForPainting, &rcClip))

	mov	esi, esp
	lea	ecx, DWORD PTR _rcClip$171254[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdcOptionalForPainting$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClipBox@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 0
	je	$LN3@xEnumDispl
	cmp	DWORD PTR tv80[ebp], 1
	je	$LN4@xEnumDispl

; 402  :         {
; 403  :         default:
; 404  :             if (!GetDCOrgEx(hdcOptionalForPainting, &ptOrg))

	mov	esi, esp
	lea	eax, DWORD PTR _ptOrg$171255[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcOptionalForPainting$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDCOrgEx@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN7@xEnumDispl

; 405  :                 return FALSE;

	xor	eax, eax
	jmp	$LN14@xEnumDispl
$LN7@xEnumDispl:

; 406  : 
; 407  :             OffsetRect(&rcLimit, -ptOrg.x, -ptOrg.y);

	mov	edx, DWORD PTR _ptOrg$171255[ebp+4]
	neg	edx
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _ptOrg$171255[ebp]
	neg	eax
	push	eax
	lea	ecx, DWORD PTR _rcLimit$[ebp]
	push	ecx
	call	DWORD PTR __imp__OffsetRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 408  :             if (IntersectRect(&rcLimit, &rcLimit, &rcClip) &&
; 409  :                 (!lprcEnumMonitorsThatIntersect ||
; 410  :                      IntersectRect(&rcLimit, &rcLimit, lprcEnumMonitorsThatIntersect))) {

	mov	esi, esp
	lea	edx, DWORD PTR _rcClip$171254[ebp]
	push	edx
	lea	eax, DWORD PTR _rcLimit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcLimit$[ebp]
	push	ecx
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@xEnumDispl
	cmp	DWORD PTR _lprcEnumMonitorsThatIntersect$[ebp], 0
	je	SHORT $LN5@xEnumDispl
	mov	esi, esp
	mov	edx, DWORD PTR _lprcEnumMonitorsThatIntersect$[ebp]
	push	edx
	lea	eax, DWORD PTR _rcLimit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcLimit$[ebp]
	push	ecx
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@xEnumDispl
$LN5@xEnumDispl:

; 411  : 
; 412  :                 break;

	jmp	SHORT $LN9@xEnumDispl
$LN4@xEnumDispl:

; 413  :             }
; 414  :             //fall thru
; 415  :         case NULLREGION:
; 416  :              return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@xEnumDispl
$LN3@xEnumDispl:

; 417  :         case ERROR:
; 418  :              return FALSE;

	xor	eax, eax
	jmp	SHORT $LN14@xEnumDispl
$LN9@xEnumDispl:

; 419  :         }
; 420  :     } else {

	jmp	SHORT $LN2@xEnumDispl
$LN11@xEnumDispl:

; 421  :         if (    lprcEnumMonitorsThatIntersect &&
; 422  :                 !IntersectRect(&rcLimit, &rcLimit, lprcEnumMonitorsThatIntersect)) {

	cmp	DWORD PTR _lprcEnumMonitorsThatIntersect$[ebp], 0
	je	SHORT $LN2@xEnumDispl
	mov	esi, esp
	mov	edx, DWORD PTR _lprcEnumMonitorsThatIntersect$[ebp]
	push	edx
	lea	eax, DWORD PTR _rcLimit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcLimit$[ebp]
	push	ecx
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@xEnumDispl

; 423  : 
; 424  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN14@xEnumDispl
$LN2@xEnumDispl:

; 425  :         }
; 426  :     }
; 427  : 
; 428  :     return lpfnEnumProc(
; 429  :             xPRIMARY_MONITOR,
; 430  :             hdcOptionalForPainting,
; 431  :             &rcLimit,
; 432  :             dwData);

	mov	esi, esp
	mov	edx, DWORD PTR _dwData$[ebp]
	push	edx
	lea	eax, DWORD PTR _rcLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcOptionalForPainting$[ebp]
	push	ecx
	push	305397826				; 12340042H
	call	DWORD PTR _lpfnEnumProc$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@xEnumDispl:

; 433  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@xEnumDispl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN20@xEnumDispl:
	DD	3
	DD	$LN19@xEnumDispl
$LN19@xEnumDispl:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN16@xEnumDispl
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN17@xEnumDispl
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN18@xEnumDispl
$LN18@xEnumDispl:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
$LN17@xEnumDispl:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	0
$LN16@xEnumDispl:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_xEnumDisplayMonitors@16 ENDP
_TEXT	ENDS
PUBLIC	_xEnumDisplayDevices@16
; Function compile flags: /Odtp /RTCsu
;	COMDAT _xEnumDisplayDevices@16
_TEXT	SEGMENT
_Unused$ = 8						; size = 4
_iDevNum$ = 12						; size = 4
_lpDisplayDevice$ = 16					; size = 4
_dwFlags$ = 20						; size = 4
_xEnumDisplayDevices@16 PROC				; COMDAT

; 441  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 442  :     if (InitMultipleMonitorStubs())

	call	_InitMultipleMonitorStubs
	test	eax, eax
	je	SHORT $LN5@xEnumDispl@2

; 443  :         return g_pfnEnumDisplayDevices(Unused, iDevNum, lpDisplayDevice, dwFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _dwFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDisplayDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iDevNum$[ebp]
	push	edx
	mov	eax, DWORD PTR _Unused$[ebp]
	push	eax
	call	DWORD PTR _g_pfnEnumDisplayDevices
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN6@xEnumDispl@2
$LN5@xEnumDispl@2:

; 444  : 
; 445  :     if (Unused != NULL)

	cmp	DWORD PTR _Unused$[ebp], 0
	je	SHORT $LN4@xEnumDispl@2

; 446  :         return FALSE;

	xor	eax, eax
	jmp	SHORT $LN6@xEnumDispl@2
$LN4@xEnumDispl@2:

; 447  : 
; 448  :     if (iDevNum != 0)

	cmp	DWORD PTR _iDevNum$[ebp], 0
	je	SHORT $LN3@xEnumDispl@2

; 449  :         return FALSE;

	xor	eax, eax
	jmp	SHORT $LN6@xEnumDispl@2
$LN3@xEnumDispl@2:

; 450  : 
; 451  :     if (lpDisplayDevice == NULL || lpDisplayDevice->cb < sizeof(DISPLAY_DEVICE))

	cmp	DWORD PTR _lpDisplayDevice$[ebp], 0
	je	SHORT $LN1@xEnumDispl@2
	mov	ecx, DWORD PTR _lpDisplayDevice$[ebp]
	cmp	DWORD PTR [ecx], 840			; 00000348H
	jae	SHORT $LN2@xEnumDispl@2
$LN1@xEnumDispl@2:

; 452  :         return FALSE;

	xor	eax, eax
	jmp	SHORT $LN6@xEnumDispl@2
$LN2@xEnumDispl@2:

; 453  : 
; 454  : #ifdef UNICODE
; 455  :     MultiByteToWideChar(CP_ACP, 0, "DISPLAY", -1, lpDisplayDevice->DeviceName, (sizeof(lpDisplayDevice->DeviceName)/sizeof(TCHAR)));

	mov	esi, esp
	push	32					; 00000020H
	mov	edx, DWORD PTR _lpDisplayDevice$[ebp]
	add	edx, 4
	push	edx
	push	-1
	push	OFFSET $SG171282
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 456  :     MultiByteToWideChar(CP_ACP, 0, "DISPLAY", -1, lpDisplayDevice->DeviceString, (sizeof(lpDisplayDevice->DeviceString)/sizeof(TCHAR)));

	mov	esi, esp
	push	128					; 00000080H
	mov	eax, DWORD PTR _lpDisplayDevice$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	push	-1
	push	OFFSET $SG171284
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 457  : #else // UNICODE
; 458  : #if _MULTIMON_USE_SECURE_CRT
; 459  :     strncpy_s((LPTSTR)lpDisplayDevice->DeviceName, (sizeof(lpDisplayDevice->DeviceName)/sizeof(TCHAR)), TEXT("DISPLAY"), (sizeof(lpDisplayDevice->DeviceName)/sizeof(TCHAR)) - 1);
; 460  :     strncpy_s((LPTSTR)lpDisplayDevice->DeviceString, (sizeof(lpDisplayDevice->DeviceString)/sizeof(TCHAR)), TEXT("DISPLAY"), (sizeof(lpDisplayDevice->DeviceName)/sizeof(TCHAR)) - 1);
; 461  : #else
; 462  :     lstrcpyn((LPTSTR)lpDisplayDevice->DeviceName,   TEXT("DISPLAY"), (sizeof(lpDisplayDevice->DeviceName)/sizeof(TCHAR)));
; 463  :     lstrcpyn((LPTSTR)lpDisplayDevice->DeviceString, TEXT("DISPLAY"), (sizeof(lpDisplayDevice->DeviceString)/sizeof(TCHAR)));
; 464  : #endif // _MULTIMON_USE_SECURE_CRT
; 465  : #endif // UNICODE
; 466  : 
; 467  :     lpDisplayDevice->StateFlags = DISPLAY_DEVICE_ATTACHED_TO_DESKTOP | DISPLAY_DEVICE_PRIMARY_DEVICE;

	mov	ecx, DWORD PTR _lpDisplayDevice$[ebp]
	mov	DWORD PTR [ecx+324], 5

; 468  : 
; 469  :     return TRUE;

	mov	eax, 1
$LN6@xEnumDispl@2:

; 470  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
_xEnumDisplayDevices@16 ENDP
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp

; 77   : 	return 0;

	xor	eax, eax

; 78   : }

	pop	ebp
	ret	0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atldef.h
_TEXT	ENDS
;	COMDAT ??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ
text$yc	SEGMENT
$T174446 = -1						; size = 1
??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ PROC ; Inconsistent_definition_of_symbol__ATL_MIXED::`dynamic initializer for 'clash'', COMDAT

; 65   : 	__declspec(selectany) _Please_define_it_the_same_throughout_your_project clash = _Please_define_it_the_same_throughout_your_project ();

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T174446[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ ENDP ; Inconsistent_definition_of_symbol__ATL_MIXED::`dynamic initializer for 'clash''
text$yc	ENDS
PUBLIC	??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ
text$yc	SEGMENT
??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ PROC	; Define_the_symbol__ATL_MIXED::`dynamic initializer for 'clash'', COMDAT

; 81   : 	__declspec(selectany) Thank_you clash = Thank_you();

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A ; Define_the_symbol__ATL_MIXED::clash
	call	??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ ENDP	; Define_the_symbol__ATL_MIXED::`dynamic initializer for 'clash''
text$yc	ENDS
PUBLIC	??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@	; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
PUBLIC	??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
PUBLIC	??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ; Define_the_symbol__ATL_MIXED::Thank_you::one
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8 DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
_DATA	SEGMENT
??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 DD FLAT:??_7type_info@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUThank_you@Define_the_symbol__ATL_MIXED@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@
rdata$r	SEGMENT
??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
CONST	SEGMENT
??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD FLAT:??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
	DD	FLAT:?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ PROC	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ENDP	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ PROC ; Define_the_symbol__ATL_MIXED::Thank_you::one, COMDAT
; _this$ = ecx

; 79   : 	struct Thank_you { virtual void one(){} };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ENDP ; Define_the_symbol__ATL_MIXED::Thank_you::one
_TEXT	ENDS
PUBLIC	?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A ; Define_the_symbol__ATL_MIXED::clash
PUBLIC	?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
;	COMDAT ?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A
_BSS	SEGMENT
?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A DD 01H DUP (?) ; Define_the_symbol__ATL_MIXED::clash
_BSS	ENDS
;	COMDAT ?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A
_BSS	SEGMENT
?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A DB 01H DUP (?) ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_clash$initializer$ DD FLAT:??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_clash$initializer$ DD FLAT:??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ
CRT$XCU	ENDS
END
