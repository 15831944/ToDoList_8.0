; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\_code\RTFContentCtrl\RRECToolbar.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_THIS_FILE DB	'RRECToolbar.cpp', 00H
_DATA	ENDS
PUBLIC	??_7CRRECToolBar@@6B@				; CRRECToolBar::`vftable'
PUBLIC	??0CRRECToolBar@@QAE@XZ				; CRRECToolBar::CRRECToolBar
PUBLIC	??_R4CRRECToolBar@@6B@				; CRRECToolBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRRECToolBar@@@8			; CRRECToolBar `RTTI Type Descriptor'
PUBLIC	??_R3CRRECToolBar@@8				; CRRECToolBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRRECToolBar@@8				; CRRECToolBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRRECToolBar@@8			; CRRECToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEnToolBar@@8			; CEnToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEnToolBar@@@8				; CEnToolBar `RTTI Type Descriptor'
PUBLIC	??_R3CEnToolBar@@8				; CEnToolBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEnToolBar@@8				; CEnToolBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CToolBar@@8			; CToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCToolBar@@@8				; CToolBar `RTTI Type Descriptor'
PUBLIC	??_R3CToolBar@@8				; CToolBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CToolBar@@8				; CToolBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CControlBar@@8			; CControlBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCControlBar@@@8				; CControlBar `RTTI Type Descriptor'
PUBLIC	??_R3CControlBar@@8				; CControlBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CControlBar@@8				; CControlBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	?GetMessageMap@CRRECToolBar@@MBEPBUAFX_MSGMAP@@XZ ; CRRECToolBar::GetMessageMap
PUBLIC	?OnItemPrePaint@CEnToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z ; CEnToolBar::OnItemPrePaint
PUBLIC	?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z ; CRRECToolBar::OnItemPostPaint
EXTRN	??1CFontComboBox@@UAE@XZ:PROC			; CFontComboBox::~CFontComboBox
EXTRN	??1CEnToolBar@@UAE@XZ:PROC			; CEnToolBar::~CEnToolBar
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	??0CSizeComboBox@@QAE@XZ:PROC			; CSizeComboBox::CSizeComboBox
EXTRN	??0CFontComboBox@@QAE@XZ:PROC			; CFontComboBox::CFontComboBox
EXTRN	??0CEnToolBar@@QAE@XZ:PROC			; CEnToolBar::CEnToolBar
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?GetRuntimeClass@CToolBar@@UBEPAUCRuntimeClass@@XZ:PROC ; CToolBar::GetRuntimeClass
EXTRN	??_ECRRECToolBar@@UAEPAXI@Z:PROC		; CRRECToolBar::`vector deleting destructor'
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CToolBar@@UBEXXZ:PROC		; CToolBar::AssertValid
EXTRN	?Dump@CToolBar@@UBEXAAVCDumpContext@@@Z:PROC	; CToolBar::Dump
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CControlBar@@UAEHXZ:PROC		; CControlBar::DestroyWindow
EXTRN	?PreCreateWindow@CControlBar@@UAEHAAUtagCREATESTRUCTW@@@Z:PROC ; CControlBar::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CToolBar@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z:PROC ; CToolBar::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpW
EXTRN	?HtmlHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpW
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CToolBar@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CToolBar::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CControlBar@@UAEHPAUtagMSG@@@Z:PROC ; CControlBar::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CControlBar@@UAEJIIJ@Z:PROC		; CControlBar::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcW@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcW
EXTRN	?PostNcDestroy@CControlBar@@UAEXXZ:PROC		; CControlBar::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?CalcFixedLayout@CToolBar@@UAE?AVCSize@@HH@Z:PROC ; CToolBar::CalcFixedLayout
EXTRN	?CalcDynamicLayout@CToolBar@@UAE?AVCSize@@HK@Z:PROC ; CToolBar::CalcDynamicLayout
EXTRN	?OnUpdateCmdUI@CToolBar@@UAEXPAVCFrameWnd@@H@Z:PROC ; CToolBar::OnUpdateCmdUI
EXTRN	?CalcInsideRect@CControlBar@@UBEXAAVCRect@@H@Z:PROC ; CControlBar::CalcInsideRect
EXTRN	?DoPaint@CControlBar@@UAEXPAVCDC@@@Z:PROC	; CControlBar::DoPaint
EXTRN	?DrawBorders@CControlBar@@UAEXPAVCDC@@AAVCRect@@@Z:PROC ; CControlBar::DrawBorders
EXTRN	?DrawGripper@CControlBar@@UAEXPAVCDC@@ABVCRect@@@Z:PROC ; CControlBar::DrawGripper
EXTRN	?DrawNCGripper@CControlBar@@UAEXPAVCDC@@ABVCRect@@@Z:PROC ; CControlBar::DrawNCGripper
EXTRN	?DrawThemedGripper@CControlBar@@UAEHPAVCDC@@ABVCRect@@H@Z:PROC ; CControlBar::DrawThemedGripper
EXTRN	?DrawNonThemedGripper@CControlBar@@UAEHPAVCDC@@ABVCRect@@@Z:PROC ; CControlBar::DrawNonThemedGripper
EXTRN	?DelayShow@CControlBar@@UAEXH@Z:PROC		; CControlBar::DelayShow
EXTRN	?IsVisible@CControlBar@@UBEHXZ:PROC		; CControlBar::IsVisible
EXTRN	?RecalcDelayShow@CControlBar@@UAEKPAUAFX_SIZEPARENTPARAMS@@@Z:PROC ; CControlBar::RecalcDelayShow
EXTRN	?IsDockBar@CControlBar@@UBEHXZ:PROC		; CControlBar::IsDockBar
EXTRN	?OnBarStyleChange@CToolBar@@UAEXKK@Z:PROC	; CToolBar::OnBarStyleChange
EXTRN	?SetStatusText@CControlBar@@UAEHH@Z:PROC	; CControlBar::SetStatusText
EXTRN	?Create@CToolBar@@UAEHPAVCWnd@@KI@Z:PROC	; CToolBar::Create
EXTRN	?CreateEx@CToolBar@@UAEHPAVCWnd@@KKVCRect@@I@Z:PROC ; CToolBar::CreateEx
EXTRN	?GetItemRect@CToolBar@@UBEXHPAUtagRECT@@@Z:PROC	; CToolBar::GetItemRect
;	COMDAT ??_R2CObject@@8
; File d:\_code\rtfcontentctrl\rrectoolbar.cpp
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CControlBar@@8
rdata$r	SEGMENT
??_R2CControlBar@@8 DD FLAT:??_R1A@?0A@EA@CControlBar@@8 ; CControlBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CControlBar@@8
rdata$r	SEGMENT
??_R3CControlBar@@8 DD 00H				; CControlBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CControlBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCControlBar@@@8
_DATA	SEGMENT
??_R0?AVCControlBar@@@8 DD FLAT:??_7type_info@@6B@	; CControlBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCControlBar@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CControlBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CControlBar@@8 DD FLAT:??_R0?AVCControlBar@@@8 ; CControlBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CControlBar@@8
rdata$r	ENDS
;	COMDAT ??_R2CToolBar@@8
rdata$r	SEGMENT
??_R2CToolBar@@8 DD FLAT:??_R1A@?0A@EA@CToolBar@@8	; CToolBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CControlBar@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CToolBar@@8
rdata$r	SEGMENT
??_R3CToolBar@@8 DD 00H					; CToolBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCToolBar@@@8
_DATA	SEGMENT
??_R0?AVCToolBar@@@8 DD FLAT:??_7type_info@@6B@		; CToolBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCToolBar@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CToolBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CToolBar@@8 DD FLAT:??_R0?AVCToolBar@@@8	; CToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R2CEnToolBar@@8
rdata$r	SEGMENT
??_R2CEnToolBar@@8 DD FLAT:??_R1A@?0A@EA@CEnToolBar@@8	; CEnToolBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CToolBar@@8
	DD	FLAT:??_R1A@?0A@EA@CControlBar@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CEnToolBar@@8
rdata$r	SEGMENT
??_R3CEnToolBar@@8 DD 00H				; CEnToolBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CEnToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEnToolBar@@@8
_DATA	SEGMENT
??_R0?AVCEnToolBar@@@8 DD FLAT:??_7type_info@@6B@	; CEnToolBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEnToolBar@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CEnToolBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEnToolBar@@8 DD FLAT:??_R0?AVCEnToolBar@@@8 ; CEnToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEnToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRRECToolBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRRECToolBar@@8 DD FLAT:??_R0?AVCRRECToolBar@@@8 ; CRRECToolBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRRECToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R2CRRECToolBar@@8
rdata$r	SEGMENT
??_R2CRRECToolBar@@8 DD FLAT:??_R1A@?0A@EA@CRRECToolBar@@8 ; CRRECToolBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEnToolBar@@8
	DD	FLAT:??_R1A@?0A@EA@CToolBar@@8
	DD	FLAT:??_R1A@?0A@EA@CControlBar@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRRECToolBar@@8
rdata$r	SEGMENT
??_R3CRRECToolBar@@8 DD 00H				; CRRECToolBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	07H
	DD	FLAT:??_R2CRRECToolBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRRECToolBar@@@8
_DATA	SEGMENT
??_R0?AVCRRECToolBar@@@8 DD FLAT:??_7type_info@@6B@	; CRRECToolBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRRECToolBar@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRRECToolBar@@6B@
rdata$r	SEGMENT
??_R4CRRECToolBar@@6B@ DD 00H				; CRRECToolBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRRECToolBar@@@8
	DD	FLAT:??_R3CRRECToolBar@@8
rdata$r	ENDS
;	COMDAT ??_7CRRECToolBar@@6B@
CONST	SEGMENT
??_7CRRECToolBar@@6B@ DD FLAT:??_R4CRRECToolBar@@6B@	; CRRECToolBar::`vftable'
	DD	FLAT:?GetRuntimeClass@CToolBar@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECRRECToolBar@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CToolBar@@UBEXXZ
	DD	FLAT:?Dump@CToolBar@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CRRECToolBar@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CControlBar@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CControlBar@@UAEHAAUtagCREATESTRUCTW@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CToolBar@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CToolBar@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CControlBar@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CControlBar@@UAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcW@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CControlBar@@UAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?CalcFixedLayout@CToolBar@@UAE?AVCSize@@HH@Z
	DD	FLAT:?CalcDynamicLayout@CToolBar@@UAE?AVCSize@@HK@Z
	DD	FLAT:?OnUpdateCmdUI@CToolBar@@UAEXPAVCFrameWnd@@H@Z
	DD	FLAT:?CalcInsideRect@CControlBar@@UBEXAAVCRect@@H@Z
	DD	FLAT:?DoPaint@CControlBar@@UAEXPAVCDC@@@Z
	DD	FLAT:?DrawBorders@CControlBar@@UAEXPAVCDC@@AAVCRect@@@Z
	DD	FLAT:?DrawGripper@CControlBar@@UAEXPAVCDC@@ABVCRect@@@Z
	DD	FLAT:?DrawNCGripper@CControlBar@@UAEXPAVCDC@@ABVCRect@@@Z
	DD	FLAT:?DrawThemedGripper@CControlBar@@UAEHPAVCDC@@ABVCRect@@H@Z
	DD	FLAT:?DrawNonThemedGripper@CControlBar@@UAEHPAVCDC@@ABVCRect@@@Z
	DD	FLAT:?DelayShow@CControlBar@@UAEXH@Z
	DD	FLAT:?IsVisible@CControlBar@@UBEHXZ
	DD	FLAT:?RecalcDelayShow@CControlBar@@UAEKPAUAFX_SIZEPARENTPARAMS@@@Z
	DD	FLAT:?IsDockBar@CControlBar@@UBEHXZ
	DD	FLAT:?OnBarStyleChange@CToolBar@@UAEXKK@Z
	DD	FLAT:?SetStatusText@CControlBar@@UAEHH@Z
	DD	FLAT:?Create@CToolBar@@UAEHPAVCWnd@@KI@Z
	DD	FLAT:?CreateEx@CToolBar@@UAEHPAVCWnd@@KKVCRect@@I@Z
	DD	FLAT:?GetItemRect@CToolBar@@UBEXHPAUtagRECT@@@Z
	DD	FLAT:?OnItemPrePaint@CEnToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
	DD	FLAT:?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRRECToolBar@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRRECToolBar@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CRRECToolBar@@QAE@XZ$1
__ehfuncinfo$??0CRRECToolBar@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CRRECToolBar@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CRRECToolBar@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CRRECToolBar@@QAE@XZ PROC				; CRRECToolBar::CRRECToolBar, COMDAT
; _this$ = ecx

; 54   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRRECToolBar@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CEnToolBar@@QAE@XZ			; CEnToolBar::CEnToolBar
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRRECToolBar@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	??0CFontComboBox@@QAE@XZ		; CFontComboBox::CFontComboBox
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??0CSizeComboBox@@QAE@XZ		; CSizeComboBox::CSizeComboBox
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+508], eax
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+512], eax

; 55   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRRECToolBar@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CEnToolBar@@UAE@XZ			; CEnToolBar::~CEnToolBar
__unwindfunclet$??0CRRECToolBar@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	jmp	??1CFontComboBox@@UAE@XZ		; CFontComboBox::~CFontComboBox
__ehhandler$??0CRRECToolBar@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CRRECToolBar@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CRRECToolBar@@QAE@XZ ENDP				; CRRECToolBar::CRRECToolBar
; Function compile flags: /Odtp /RTCsu
; File d:\_code\shared\entoolbar.h
;	COMDAT ?OnItemPrePaint@CEnToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnItemPrePaint@CEnToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z PROC ; CEnToolBar::OnItemPrePaint, COMDAT
; _this$ = ecx

; 65   : 	virtual LRESULT OnItemPrePaint(LPNMTBCUSTOMDRAW /*lpNMCustomDraw*/) { return CDRF_DODEFAULT; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?OnItemPrePaint@CEnToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z ENDP ; CEnToolBar::OnItemPrePaint
_TEXT	ENDS
PUBLIC	??1CRRECToolBar@@UAE@XZ				; CRRECToolBar::~CRRECToolBar
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCRRECToolBar@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRRECToolBar@@UAEPAXI@Z PROC			; CRRECToolBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRRECToolBar@@UAE@XZ			; CRRECToolBar::~CRRECToolBar
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRRECToolBar@@UAEPAXI@Z ENDP			; CRRECToolBar::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSizeComboBox@@UAE@XZ:PROC			; CSizeComboBox::~CSizeComboBox
;	COMDAT xdata$x
; File d:\_code\rtfcontentctrl\rrectoolbar.cpp
xdata$x	SEGMENT
__unwindtable$??1CRRECToolBar@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRRECToolBar@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CRRECToolBar@@UAE@XZ$1
__ehfuncinfo$??1CRRECToolBar@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CRRECToolBar@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CRRECToolBar@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CRRECToolBar@@UAE@XZ PROC				; CRRECToolBar::~CRRECToolBar, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CRRECToolBar@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRRECToolBar@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 59   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	??1CSizeComboBox@@UAE@XZ		; CSizeComboBox::~CSizeComboBox
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	??1CFontComboBox@@UAE@XZ		; CFontComboBox::~CFontComboBox
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEnToolBar@@UAE@XZ			; CEnToolBar::~CEnToolBar
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRRECToolBar@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CEnToolBar@@UAE@XZ			; CEnToolBar::~CEnToolBar
__unwindfunclet$??1CRRECToolBar@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	jmp	??1CFontComboBox@@UAE@XZ		; CFontComboBox::~CFontComboBox
__ehhandler$??1CRRECToolBar@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CRRECToolBar@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CRRECToolBar@@UAE@XZ ENDP				; CRRECToolBar::~CRRECToolBar
PUBLIC	?GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ ; CRRECToolBar::GetThisMessageMap
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMessageMap@CRRECToolBar@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CRRECToolBar@@MBEPBUAFX_MSGMAP@@XZ PROC	; CRRECToolBar::GetMessageMap, COMDAT
; _this$ = ecx

; 61   : BEGIN_MESSAGE_MAP(CRRECToolBar, CEnToolBar)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ ; CRRECToolBar::GetThisMessageMap
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CRRECToolBar@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CRRECToolBar::GetMessageMap
_TEXT	ENDS
PUBLIC	?OnSelchangeFont@CRRECToolBar@@IAEXXZ		; CRRECToolBar::OnSelchangeFont
PUBLIC	?OnSelchangeSize@CRRECToolBar@@IAEXXZ		; CRRECToolBar::OnSelchangeSize
PUBLIC	?OnKillFocusCombo@CRRECToolBar@@IAEXXZ		; CRRECToolBar::OnKillFocusCombo
PUBLIC	?OnColorButton@CRRECToolBar@@IAEJIJ@Z		; CRRECToolBar::OnColorButton
PUBLIC	?OnEnable@CRRECToolBar@@IAEXH@Z			; CRRECToolBar::OnEnable
PUBLIC	?OnSize@CRRECToolBar@@IAEXIHH@Z			; CRRECToolBar::OnSize
PUBLIC	?OnSetFont@CRRECToolBar@@IAEJIJ@Z		; CRRECToolBar::OnSetFont
PUBLIC	?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z ; CRRECToolBar::OnColorDropDown
EXTRN	?GetThisMessageMap@CEnToolBar@@KGPBUAFX_MSGMAP@@XZ:PROC ; CEnToolBar::GetThisMessageMap
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CRRECToolBar::GetThisMessageMap'::`2'::_messageEntries
	DD	01H
	DD	029H
	DD	029H
	DD	039H
	DD	FLAT:?OnSelchangeFont@CRRECToolBar@@IAEXXZ
	DD	0111H
	DD	01H
	DD	02aH
	DD	02aH
	DD	039H
	DD	FLAT:?OnSelchangeSize@CRRECToolBar@@IAEXXZ
	DD	0111H
	DD	04H
	DD	029H
	DD	029H
	DD	039H
	DD	FLAT:?OnKillFocusCombo@CRRECToolBar@@IAEXXZ
	DD	0111H
	DD	04H
	DD	02aH
	DD	02aH
	DD	039H
	DD	FLAT:?OnKillFocusCombo@CRRECToolBar@@IAEXXZ
	DD	07ecH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnColorButton@CRRECToolBar@@IAEJIJ@Z
	DD	0aH
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	FLAT:?OnEnable@CRRECToolBar@@IAEXH@Z
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	019H
	DD	FLAT:?OnSize@CRRECToolBar@@IAEXIHH@Z
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnSetFont@CRRECToolBar@@IAEJIJ@Z
	DD	0bc4eH
	DD	0fd3aH
	DD	00H
	DD	00H
	DD	03dH
	DD	FLAT:?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CEnToolBar@@KGPBUAFX_MSGMAP@@XZ ; `CRRECToolBar::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ PROC ; CRRECToolBar::GetThisMessageMap, COMDAT

; 61   : BEGIN_MESSAGE_MAP(CRRECToolBar, CEnToolBar)

	push	ebp
	mov	ebp, esp

; 62   : 	//{{AFX_MSG_MAP(CRRECToolBar)
; 63   : 	ON_CBN_SELCHANGE(DROPDOWN_FONT, OnSelchangeFont)
; 64   : 	ON_CBN_SELCHANGE(DROPDOWN_SIZE, OnSelchangeSize)
; 65   : 	ON_CBN_KILLFOCUS(DROPDOWN_FONT, OnKillFocusCombo)
; 66   : 	ON_CBN_KILLFOCUS(DROPDOWN_SIZE, OnKillFocusCombo)
; 67   : 	ON_MESSAGE(CPN_SELENDOK, OnColorButton)
; 68   : 	ON_WM_ENABLE()
; 69   : 	ON_WM_SIZE()
; 70   : 	//}}AFX_MSG_MAP
; 71   : 	ON_MESSAGE(WM_SETFONT, OnSetFont)
; 72   : 	ON_NOTIFY_REFLECT(TBN_DROPDOWN, OnColorDropDown)
; 73   : END_MESSAGE_MAP()

	mov	eax, OFFSET ?messageMap@?1??GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ@4U3@B
	pop	ebp
	ret	0
?GetThisMessageMap@CRRECToolBar@@KGPBUAFX_MSGMAP@@XZ ENDP ; CRRECToolBar::GetThisMessageMap
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z	; CRRECToolBar::Create
EXTRN	?SetBorders@CControlBar@@QAEXHHHH@Z:PROC	; CControlBar::SetBorders
EXTRN	?FillCombo@CSizeComboBox@@QAEXXZ:PROC		; CSizeComboBox::FillCombo
EXTRN	?FillCombo@CFontComboBox@@QAEXXZ:PROC		; CFontComboBox::FillCombo
EXTRN	?SetFont@CWnd@@QAEXPAVCFont@@H@Z:PROC		; CWnd::SetFont
EXTRN	?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z:PROC	; CFont::FromHandle
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	?SetButtonInfo@CToolBarCtrl@@QAEHHPAUTBBUTTONINFOW@@@Z:PROC ; CToolBarCtrl::SetButtonInfo
EXTRN	??0CRect@@QAE@XZ:PROC				; CRect::CRect
EXTRN	?InsertButton@CToolBarCtrl@@QAEHHPAU_TBBUTTON@@@Z:PROC ; CToolBarCtrl::InsertButton
EXTRN	?SetButtonStyle@CToolBar@@QAEXHI@Z:PROC		; CToolBar::SetButtonStyle
EXTRN	?GetButtonStyle@CToolBar@@QBEIH@Z:PROC		; CToolBar::GetButtonStyle
EXTRN	?CommandToIndex@CToolBar@@QBEHI@Z:PROC		; CToolBar::CommandToIndex
EXTRN	?SetExtendedStyle@CToolBarCtrl@@QAEKK@Z:PROC	; CToolBarCtrl::SetExtendedStyle
EXTRN	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ:PROC ; CToolBar::GetToolBarCtrl
EXTRN	?SetOwner@CToolBar@@QAEXPAVCWnd@@@Z:PROC	; CToolBar::SetOwner
EXTRN	?SetBarStyle@CControlBar@@QAEXK@Z:PROC		; CControlBar::SetBarStyle
EXTRN	?GetBarStyle@CControlBar@@QAEKXZ:PROC		; CControlBar::GetBarStyle
EXTRN	?SetImage@CEnToolBar@@QAEHIK@Z:PROC		; CEnToolBar::SetImage
EXTRN	__imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	?SetImage@CEnToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@K@Z:PROC ; CEnToolBar::SetImage
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z:PROC
EXTRN	?LoadToolBar@CEnToolBar@@QAEHIPB_WK@Z:PROC	; CEnToolBar::LoadToolBar
EXTRN	??0CRect@@QAE@HHHH@Z:PROC			; CRect::CRect
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z$0
__ehfuncinfo$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z
_TEXT	SEGMENT
$T173537 = -208						; size = 4
_tbi$173093 = -200					; size = 32
_rect$173092 = -160					; size = 16
_nBtn$173088 = -140					; size = 4
_BTNCOUNT$173086 = -136					; size = 4
_buttons$173085 = -128					; size = 80
_nIndex$173084 = -44					; size = 4
_nStyle$173083 = -40					; size = 4
$T173072 = -36						; size = 16
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_parent$ = 8						; size = 4
_szImageFile$ = 12					; size = 4
_crMask$ = 16						; size = 4
?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z PROC		; CRRECToolBar::Create, COMDAT
; _this$ = ecx

; 77   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 196				; 000000c4H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 78   : 	if (CreateEx(parent, TBSTYLE_FLAT | TBSTYLE_WRAPABLE, WS_CHILD | WS_VISIBLE | CBRS_ALIGN_TOP | CBRS_SIZE_DYNAMIC/* | WS_CLIPCHILDREN*/, 
; 79   : 				CRect(0, 0, 0, 0), TOOLBAR_CONTROL) && LoadToolBar(TOOLBAR_CONTROL))

	mov	esi, esp
	push	10					; 0000000aH
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR $T173072[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	push	1342185476				; 50002004H
	push	2560					; 00000a00H
	mov	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+428]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN8@Create
	push	-1
	push	0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadToolBar@CEnToolBar@@QAEHIPB_WK@Z	; CEnToolBar::LoadToolBar
	test	eax, eax
	je	$LN8@Create

; 80   : 	{
; 81   : 		if (szImageFile)

	cmp	DWORD PTR _szImageFile$[ebp], 0
	je	SHORT $LN7@Create

; 82   : 			SetImage(szImageFile, crMask);

	mov	esi, esp
	mov	eax, DWORD PTR _szImageFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T173537[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _crMask$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T173537[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetImage@CEnToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@K@Z ; CEnToolBar::SetImage
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T173537[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 83   : 		else 

	jmp	SHORT $LN6@Create
$LN7@Create:

; 84   : 			SetImage(IDB_TOOLBAR, RGB(255, 0, 255));

	push	16711935				; 00ff00ffH
	push	16003					; 00003e83H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetImage@CEnToolBar@@QAEHIK@Z		; CEnToolBar::SetImage
$LN6@Create:

; 85   : 
; 86   : 		UINT nStyle = GetBarStyle();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBarStyle@CControlBar@@QAEKXZ	; CControlBar::GetBarStyle
	mov	DWORD PTR _nStyle$173083[ebp], eax

; 87   : 		nStyle |= (CBRS_TOOLTIPS | CBRS_FLYBY);

	mov	eax, DWORD PTR _nStyle$173083[ebp]
	or	eax, 48					; 00000030H
	mov	DWORD PTR _nStyle$173083[ebp], eax

; 88   : 		SetBarStyle(nStyle);

	mov	ecx, DWORD PTR _nStyle$173083[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBarStyle@CControlBar@@QAEXK@Z	; CControlBar::SetBarStyle

; 89   : 
; 90   : 		SetOwner(parent);

	mov	edx, DWORD PTR _parent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetOwner@CToolBar@@QAEXPAVCWnd@@@Z	; CToolBar::SetOwner

; 91   : 		GetToolBarCtrl().SetExtendedStyle(TBSTYLE_EX_DRAWDDARROWS);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetExtendedStyle@CToolBarCtrl@@QAEKK@Z	; CToolBarCtrl::SetExtendedStyle

; 92   : 
; 93   : 		// colour drop buttons
; 94   : 		int nIndex = CommandToIndex(ID_EDIT_BACKCOLOR);

	push	32800					; 00008020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommandToIndex@CToolBar@@QBEHI@Z	; CToolBar::CommandToIndex
	mov	DWORD PTR _nIndex$173084[ebp], eax

; 95   : 		SetButtonStyle(nIndex, GetButtonStyle(nIndex) | TBSTYLE_DROPDOWN);

	mov	eax, DWORD PTR _nIndex$173084[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonStyle@CToolBar@@QBEIH@Z	; CToolBar::GetButtonStyle
	or	eax, 8
	push	eax
	mov	ecx, DWORD PTR _nIndex$173084[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetButtonStyle@CToolBar@@QAEXHI@Z	; CToolBar::SetButtonStyle

; 96   : 
; 97   : 		nIndex = CommandToIndex(ID_EDIT_TEXTCOLOR);

	push	32797					; 0000801dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommandToIndex@CToolBar@@QBEHI@Z	; CToolBar::CommandToIndex
	mov	DWORD PTR _nIndex$173084[ebp], eax

; 98   : 		SetButtonStyle(nIndex, GetButtonStyle(nIndex) | TBSTYLE_DROPDOWN);

	mov	edx, DWORD PTR _nIndex$173084[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonStyle@CToolBar@@QBEIH@Z	; CToolBar::GetButtonStyle
	or	eax, 8
	push	eax
	mov	eax, DWORD PTR _nIndex$173084[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetButtonStyle@CToolBar@@QAEXHI@Z	; CToolBar::SetButtonStyle

; 99   : 
; 100  : 		/////////////////////////////////////
; 101  : 		// Map in combo boxes
; 102  : 
; 103  : 		TBBUTTON buttons[] = 
; 104  : 		{
; 105  : 			{ 0, FONT_NAME_ID, 0, TBSTYLE_SEP, 0, NULL },

	mov	DWORD PTR _buttons$173085[ebp], 0
	mov	DWORD PTR _buttons$173085[ebp+4], 1
	mov	BYTE PTR _buttons$173085[ebp+8], 0
	mov	BYTE PTR _buttons$173085[ebp+9], 1
	mov	BYTE PTR _buttons$173085[ebp+10], 0
	mov	BYTE PTR _buttons$173085[ebp+11], 0
	xor	ecx, ecx
	mov	DWORD PTR _buttons$173085[ebp+12], ecx
	mov	DWORD PTR _buttons$173085[ebp+16], ecx

; 106  : 			{ 0, -1, 0, TBSTYLE_SEP, 0, NULL },

	mov	DWORD PTR _buttons$173085[ebp+20], 0
	mov	DWORD PTR _buttons$173085[ebp+24], -1
	mov	BYTE PTR _buttons$173085[ebp+28], 0
	mov	BYTE PTR _buttons$173085[ebp+29], 1
	mov	BYTE PTR _buttons$173085[ebp+30], 0
	mov	BYTE PTR _buttons$173085[ebp+31], 0
	xor	edx, edx
	mov	DWORD PTR _buttons$173085[ebp+32], edx
	mov	DWORD PTR _buttons$173085[ebp+36], edx

; 107  : 			{ 0, FONT_SIZE_ID, 0, TBSTYLE_SEP, 0, NULL },

	mov	DWORD PTR _buttons$173085[ebp+40], 0
	mov	DWORD PTR _buttons$173085[ebp+44], 2
	mov	BYTE PTR _buttons$173085[ebp+48], 0
	mov	BYTE PTR _buttons$173085[ebp+49], 1
	mov	BYTE PTR _buttons$173085[ebp+50], 0
	mov	BYTE PTR _buttons$173085[ebp+51], 0
	xor	eax, eax
	mov	DWORD PTR _buttons$173085[ebp+52], eax
	mov	DWORD PTR _buttons$173085[ebp+56], eax

; 108  : 			{ 0, -1, 0, TBSTYLE_SEP, 0, NULL },

	mov	DWORD PTR _buttons$173085[ebp+60], 0
	mov	DWORD PTR _buttons$173085[ebp+64], -1
	mov	BYTE PTR _buttons$173085[ebp+68], 0
	mov	BYTE PTR _buttons$173085[ebp+69], 1
	mov	BYTE PTR _buttons$173085[ebp+70], 0
	mov	BYTE PTR _buttons$173085[ebp+71], 0
	xor	ecx, ecx
	mov	DWORD PTR _buttons$173085[ebp+72], ecx
	mov	DWORD PTR _buttons$173085[ebp+76], ecx

; 109  : 		};
; 110  : 		const int BTNCOUNT = sizeof(buttons) / sizeof(TBBUTTON);

	mov	DWORD PTR _BTNCOUNT$173086[ebp], 4

; 111  : 
; 112  : 		for (int nBtn = 0; nBtn < BTNCOUNT; nBtn++)

	mov	DWORD PTR _nBtn$173088[ebp], 0
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	edx, DWORD PTR _nBtn$173088[ebp]
	add	edx, 1
	mov	DWORD PTR _nBtn$173088[ebp], edx
$LN5@Create:
	cmp	DWORD PTR _nBtn$173088[ebp], 4
	jge	SHORT $LN3@Create

; 113  : 			GetToolBarCtrl().InsertButton(nBtn, &buttons[nBtn]);

	mov	eax, DWORD PTR _nBtn$173088[ebp]
	imul	eax, 20					; 00000014H
	lea	ecx, DWORD PTR _buttons$173085[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _nBtn$173088[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?InsertButton@CToolBarCtrl@@QAEHHPAU_TBBUTTON@@@Z ; CToolBarCtrl::InsertButton
	jmp	SHORT $LN4@Create
$LN3@Create:

; 114  : 
; 115  : 		CRect rect;

	lea	ecx, DWORD PTR _rect$173092[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 116  : 
; 117  : 		TBBUTTONINFO tbi;
; 118  : 		tbi.cbSize = sizeof(TBBUTTONINFO);

	mov	DWORD PTR _tbi$173093[ebp], 32		; 00000020H

; 119  : 		tbi.cx = FONT_COMBO_WIDTH;

	mov	eax, 128				; 00000080H
	mov	WORD PTR _tbi$173093[ebp+18], ax

; 120  : 		tbi.dwMask = TBIF_SIZE;  // By index

	mov	DWORD PTR _tbi$173093[ebp+4], 64	; 00000040H

; 121  : 
; 122  : 		// The font name combo
; 123  : 		GetToolBarCtrl().SetButtonInfo(FONT_NAME_ID, &tbi);

	lea	ecx, DWORD PTR _tbi$173093[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetButtonInfo@CToolBarCtrl@@QAEHHPAUTBBUTTONINFOW@@@Z ; CToolBarCtrl::SetButtonInfo

; 124  : 		GetItemRect(FONT_NAME_POS, &rect);

	mov	esi, esp
	lea	edx, DWORD PTR _rect$173092[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+432]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 125  : 
; 126  : 		rect.left++;

	mov	ecx, DWORD PTR _rect$173092[ebp]
	add	ecx, 1
	mov	DWORD PTR _rect$173092[ebp], ecx

; 127  : 		rect.top++;		

	mov	edx, DWORD PTR _rect$173092[ebp+4]
	add	edx, 1
	mov	DWORD PTR _rect$173092[ebp+4], edx

; 128  : 		rect.bottom += COMBO_HEIGHT;

	mov	eax, DWORD PTR _rect$173092[ebp+12]
	add	eax, 256				; 00000100H
	mov	DWORD PTR _rect$173092[ebp+12], eax

; 129  : 
; 130  : 		if (!m_font.Create(WS_CHILD | WS_VSCROLL |	WS_VISIBLE | CBS_AUTOHSCROLL | 
; 131  : 							CBS_DROPDOWNLIST | CBS_SORT, rect, this, DROPDOWN_FONT))

	mov	esi, esp
	push	41					; 00000029H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rect$173092[ebp]
	push	edx
	push	1344274755				; 50200143H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+272]
	mov	eax, DWORD PTR [edx+360]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Create

; 132  : 			return FALSE;

	xor	eax, eax
	jmp	$LN9@Create
$LN2@Create:

; 133  : 
; 134  : 		m_font.SetFont(CFont::FromHandle((HFONT) ::GetStockObject(DEFAULT_GUI_FONT)));

	push	1
	mov	esi, esp
	push	17					; 00000011H
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z ; CFont::FromHandle
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?SetFont@CWnd@@QAEXPAVCFont@@H@Z	; CWnd::SetFont

; 135  : 		m_font.FillCombo();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?FillCombo@CFontComboBox@@QAEXXZ	; CFontComboBox::FillCombo

; 136  : 
; 137  : 		// The font size combo
; 138  : 		tbi.cx = COMBO_WIDTH;

	mov	ecx, 40					; 00000028H
	mov	WORD PTR _tbi$173093[ebp+18], cx

; 139  : 		GetToolBarCtrl().SetButtonInfo(FONT_SIZE_ID, &tbi);

	lea	edx, DWORD PTR _tbi$173093[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetButtonInfo@CToolBarCtrl@@QAEHHPAUTBBUTTONINFOW@@@Z ; CToolBarCtrl::SetButtonInfo

; 140  : 		GetItemRect(FONT_SIZE_POS, &rect);

	mov	esi, esp
	lea	eax, DWORD PTR _rect$173092[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+432]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 141  : 
; 142  : 		rect.top++;		

	mov	ecx, DWORD PTR _rect$173092[ebp+4]
	add	ecx, 1
	mov	DWORD PTR _rect$173092[ebp+4], ecx

; 143  : 		rect.bottom += COMBO_HEIGHT;

	mov	edx, DWORD PTR _rect$173092[ebp+12]
	add	edx, 256				; 00000100H
	mov	DWORD PTR _rect$173092[ebp+12], edx

; 144  : 		
; 145  : 		if (!m_size.Create(WS_CHILD | WS_VISIBLE | CBS_AUTOHSCROLL | CBS_DROPDOWNLIST | 
; 146  : 							CBS_HASSTRINGS, rect, this, DROPDOWN_SIZE))

	mov	esi, esp
	push	42					; 0000002aH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rect$173092[ebp]
	push	ecx
	push	1342177859				; 50000243H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+392]
	mov	edx, DWORD PTR [eax+360]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@Create

; 147  : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $LN9@Create
$LN1@Create:

; 148  : 
; 149  : 		m_size.SetFont(CFont::FromHandle((HFONT) ::GetStockObject(DEFAULT_GUI_FONT)));

	push	1
	mov	esi, esp
	push	17					; 00000011H
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z ; CFont::FromHandle
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?SetFont@CWnd@@QAEXPAVCFont@@H@Z	; CWnd::SetFont

; 150  : 		m_size.FillCombo();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?FillCombo@CSizeComboBox@@QAEXXZ	; CSizeComboBox::FillCombo

; 151  : 
; 152  : 		SetBorders(4, 4, 0, 0);

	push	0
	push	0
	push	4
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBorders@CControlBar@@QAEXHHHH@Z	; CControlBar::SetBorders

; 153  : 
; 154  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN9@Create
$LN8@Create:

; 155  : 	}
; 156  : 	
; 157  : 	return FALSE;

	xor	eax, eax
$LN9@Create:

; 158  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Create
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN17@Create:
	DD	3
	DD	$LN16@Create
$LN16@Create:
	DD	-128					; ffffff80H
	DD	80					; 00000050H
	DD	$LN12@Create
	DD	-160					; ffffff60H
	DD	16					; 00000010H
	DD	$LN13@Create
	DD	-200					; ffffff38H
	DD	32					; 00000020H
	DD	$LN14@Create
$LN14@Create:
	DB	116					; 00000074H
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	0
$LN13@Create:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN12@Create:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T173537[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z ENDP		; CRRECToolBar::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSetFont@CRRECToolBar@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnSetFont@CRRECToolBar@@IAEJIJ@Z PROC			; CRRECToolBar::OnSetFont, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 	// eat this
; 167  : 	return 0L;

	xor	eax, eax

; 168  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?OnSetFont@CRRECToolBar@@IAEJIJ@Z ENDP			; CRRECToolBar::OnSetFont
_TEXT	ENDS
PUBLIC	?GetDroppedState@CRRECToolBar@@QBEHXZ		; CRRECToolBar::GetDroppedState
EXTRN	?GetDroppedState@CComboBox@@QBEHXZ:PROC		; CComboBox::GetDroppedState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDroppedState@CRRECToolBar@@QBEHXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?GetDroppedState@CRRECToolBar@@QBEHXZ PROC		; CRRECToolBar::GetDroppedState, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 172  : 	return m_font.GetDroppedState() ||
; 173  : 			m_size.GetDroppedState();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?GetDroppedState@CComboBox@@QBEHXZ	; CComboBox::GetDroppedState
	test	eax, eax
	jne	SHORT $LN3@GetDropped
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?GetDroppedState@CComboBox@@QBEHXZ	; CComboBox::GetDroppedState
	test	eax, eax
	jne	SHORT $LN3@GetDropped
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN4@GetDropped
$LN3@GetDropped:
	mov	DWORD PTR tv80[ebp], 1
$LN4@GetDropped:
	mov	eax, DWORD PTR tv80[ebp]

; 174  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDroppedState@CRRECToolBar@@QBEHXZ ENDP		; CRRECToolBar::GetDroppedState
_TEXT	ENDS
PUBLIC	?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ ; CRRECToolBar::GetFontName
EXTRN	?SendMessageW@CWnd@@QBEJIIJ@Z:PROC		; CWnd::SendMessageW
EXTRN	?GetParent@CWnd@@QBEPAV1@XZ:PROC		; CWnd::GetParent
EXTRN	?urm_SETCURRENTFONTNAME@@3IA:DWORD		; urm_SETCURRENTFONTNAME
EXTRN	__imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ:PROC
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSelchangeFont@CRRECToolBar@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSelchangeFont@CRRECToolBar@@IAEXXZ$0
__ehfuncinfo$?OnSelchangeFont@CRRECToolBar@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnSelchangeFont@CRRECToolBar@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnSelchangeFont@CRRECToolBar@@IAEXXZ
_TEXT	SEGMENT
_font$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnSelchangeFont@CRRECToolBar@@IAEXXZ PROC		; CRRECToolBar::OnSelchangeFont, COMDAT
; _this$ = ecx

; 177  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSelchangeFont@CRRECToolBar@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 	CString font = GetFontName();

	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ ; CRRECToolBar::GetFontName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 179  : 
; 180  : 	if (!font.IsEmpty())

	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@OnSelchang

; 181  : 		GetParent()->SendMessage(urm_SETCURRENTFONTNAME, (WPARAM) (LPCTSTR) font, 0);

	push	0
	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR ?urm_SETCURRENTFONTNAME@@3IA ; urm_SETCURRENTFONTNAME
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParent@CWnd@@QBEPAV1@XZ		; CWnd::GetParent
	mov	ecx, eax
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW
$LN1@OnSelchang:

; 182  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@OnSelchang
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@OnSelchang:
	DD	1
	DD	$LN7@OnSelchang
$LN7@OnSelchang:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@OnSelchang
$LN5@OnSelchang:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSelchangeFont@CRRECToolBar@@IAEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?OnSelchangeFont@CRRECToolBar@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnSelchangeFont@CRRECToolBar@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnSelchangeFont@CRRECToolBar@@IAEXXZ ENDP		; CRRECToolBar::OnSelchangeFont
PUBLIC	?GetFontSize@CRRECToolBar@@QBEHXZ		; CRRECToolBar::GetFontSize
EXTRN	?urm_SETCURRENTFONTSIZE@@3IA:DWORD		; urm_SETCURRENTFONTSIZE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSelchangeSize@CRRECToolBar@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnSelchangeSize@CRRECToolBar@@IAEXXZ PROC		; CRRECToolBar::OnSelchangeSize, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	GetParent()->SendMessage(urm_SETCURRENTFONTSIZE, 0, (LPARAM) GetFontSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFontSize@CRRECToolBar@@QBEHXZ	; CRRECToolBar::GetFontSize
	push	eax
	push	0
	mov	eax, DWORD PTR ?urm_SETCURRENTFONTSIZE@@3IA ; urm_SETCURRENTFONTSIZE
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParent@CWnd@@QBEPAV1@XZ		; CWnd::GetParent
	mov	ecx, eax
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 187  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnSelchangeSize@CRRECToolBar@@IAEXXZ ENDP		; CRRECToolBar::OnSelchangeSize
_TEXT	ENDS
EXTRN	?GetDlgCtrlID@CWnd@@QBEHXZ:PROC			; CWnd::GetDlgCtrlID
EXTRN	??BCWnd@@QBEPAUHWND__@@XZ:PROC			; CWnd::operator HWND__ *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnKillFocusCombo@CRRECToolBar@@IAEXXZ
_TEXT	SEGMENT
_nmhdr$ = -20						; size = 12
_this$ = -4						; size = 4
?OnKillFocusCombo@CRRECToolBar@@IAEXXZ PROC		; CRRECToolBar::OnKillFocusCombo, COMDAT
; _this$ = ecx

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	// send a kill foxus message to our parent
; 192  : 	NMHDR nmhdr = { *this, GetDlgCtrlID(), NM_KILLFOCUS };

	mov	ecx, DWORD PTR _this$[ebp]
	call	??BCWnd@@QBEPAUHWND__@@XZ		; CWnd::operator HWND__ *
	mov	DWORD PTR _nmhdr$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDlgCtrlID@CWnd@@QBEHXZ		; CWnd::GetDlgCtrlID
	mov	DWORD PTR _nmhdr$[ebp+4], eax
	mov	DWORD PTR _nmhdr$[ebp+8], -8		; fffffff8H

; 193  : 
; 194  : 	GetParent()->SendMessage(WM_NOTIFY, GetDlgCtrlID(), (LPARAM)&nmhdr);

	lea	eax, DWORD PTR _nmhdr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDlgCtrlID@CWnd@@QBEHXZ		; CWnd::GetDlgCtrlID
	push	eax
	push	78					; 0000004eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParent@CWnd@@QBEPAV1@XZ		; CWnd::GetParent
	mov	ecx, eax
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 195  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnKillFocu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@OnKillFocu:
	DD	1
	DD	$LN4@OnKillFocu
$LN4@OnKillFocu:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@OnKillFocu
$LN3@OnKillFocu:
	DB	110					; 0000006eH
	DB	109					; 0000006dH
	DB	104					; 00000068H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	0
?OnKillFocusCombo@CRRECToolBar@@IAEXXZ ENDP		; CRRECToolBar::OnKillFocusCombo
_TEXT	ENDS
EXTRN	?urm_SETCURRENTFONTCOLOR@@3IA:DWORD		; urm_SETCURRENTFONTCOLOR
EXTRN	?UpdateWindow@CWnd@@QAEXXZ:PROC			; CWnd::UpdateWindow
EXTRN	?Invalidate@CWnd@@QAEXH@Z:PROC			; CWnd::Invalidate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnColorButton@CRRECToolBar@@IAEJIJ@Z
_TEXT	SEGMENT
_bForeground$ = -8					; size = 4
_this$ = -4						; size = 4
_color$ = 8						; size = 4
_nCtrlID$ = 12						; size = 4
?OnColorButton@CRRECToolBar@@IAEJIJ@Z PROC		; CRRECToolBar::OnColorButton, COMDAT
; _this$ = ecx

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 	BOOL bForeground = (nCtrlID == ID_EDIT_TEXTCOLOR);

	xor	eax, eax
	cmp	DWORD PTR _nCtrlID$[ebp], 32797		; 0000801dH
	sete	al
	mov	DWORD PTR _bForeground$[ebp], eax

; 200  : 
; 201  : 	if (bForeground)

	cmp	DWORD PTR _bForeground$[ebp], 0
	je	SHORT $LN2@OnColorBut

; 202  : 		m_crText = color;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [ecx+508], edx

; 203  : 	else

	jmp	SHORT $LN1@OnColorBut
$LN2@OnColorBut:

; 204  : 		m_crBack = color;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+512], ecx
$LN1@OnColorBut:

; 205  : 
; 206  : 	Invalidate();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 207  : 	UpdateWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow

; 208  : 
; 209  : 	GetParent()->SendMessage(urm_SETCURRENTFONTCOLOR, bForeground, (LPARAM) color);

	mov	edx, DWORD PTR _color$[ebp]
	push	edx
	mov	eax, DWORD PTR _bForeground$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?urm_SETCURRENTFONTCOLOR@@3IA ; urm_SETCURRENTFONTCOLOR
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParent@CWnd@@QBEPAV1@XZ		; CWnd::GetParent
	mov	ecx, eax
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 210  : 	
; 211  : 	return 0;

	xor	eax, eax

; 212  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnColorButton@CRRECToolBar@@IAEJIJ@Z ENDP		; CRRECToolBar::OnColorButton
_TEXT	ENDS
PUBLIC	?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRRECToolBar::SetFontName
EXTRN	?SelectFontName@CFontComboBox@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; CFontComboBox::SelectFontName
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_font$ = 8						; size = 4
?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; CRRECToolBar::SetFontName, COMDAT
; _this$ = ecx

; 218  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 	if(m_font.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+304], 0
	je	SHORT $LN1@SetFontNam

; 220  : 		return m_font.SelectFontName(font);

	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?SelectFontName@CFontComboBox@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CFontComboBox::SelectFontName
	jmp	SHORT $LN2@SetFontNam
$LN1@SetFontNam:

; 221  : 
; 222  : 	return FALSE;

	xor	eax, eax
$LN2@SetFontNam:

; 223  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; CRRECToolBar::SetFontName
_TEXT	ENDS
PUBLIC	?SetFontSize@CRRECToolBar@@QAEHH@Z		; CRRECToolBar::SetFontSize
EXTRN	?SelectSize@CSizeComboBox@@QAEHH@Z:PROC		; CSizeComboBox::SelectSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFontSize@CRRECToolBar@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?SetFontSize@CRRECToolBar@@QAEHH@Z PROC			; CRRECToolBar::SetFontSize, COMDAT
; _this$ = ecx

; 226  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 	if(m_size.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+424], 0
	je	SHORT $LN1@SetFontSiz

; 228  : 		return m_size.SelectSize(size);

	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?SelectSize@CSizeComboBox@@QAEHH@Z	; CSizeComboBox::SelectSize
	jmp	SHORT $LN2@SetFontSiz
$LN1@SetFontSiz:

; 229  : 
; 230  : 	return FALSE;

	xor	eax, eax
$LN2@SetFontSiz:

; 231  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFontSize@CRRECToolBar@@QAEHH@Z ENDP			; CRRECToolBar::SetFontSize
_TEXT	ENDS
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	?GetLBText@CComboBox@@QBEXHAAV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; CComboBox::GetLBText
EXTRN	?GetCurSel@CComboBox@@QBEHXZ:PROC		; CComboBox::GetCurSel
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ$0
__ehfuncinfo$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ
_TEXT	SEGMENT
$T173586 = -36						; size = 4
_index$ = -32						; size = 4
_font$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ PROC ; CRRECToolBar::GetFontName, COMDAT
; _this$ = ecx

; 234  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T173586[ebp], 0

; 235  : 	CString font;

	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 236  : 	int index = m_font.GetCurSel();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?GetCurSel@CComboBox@@QBEHXZ		; CComboBox::GetCurSel
	mov	DWORD PTR _index$[ebp], eax

; 237  : 
; 238  : 	if(index != CB_ERR)

	cmp	DWORD PTR _index$[ebp], -1
	je	SHORT $LN1@GetFontNam

; 239  : 		m_font.GetLBText(index, font);

	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?GetLBText@CComboBox@@QBEXHAAV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CComboBox::GetLBText
$LN1@GetFontNam:

; 240  : 
; 241  : 	return font;

	mov	esi, esp
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T173586[ebp]
	or	eax, 1
	mov	DWORD PTR $T173586[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 242  : }	

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetFontNam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@GetFontNam:
	DD	1
	DD	$LN9@GetFontNam
$LN9@GetFontNam:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@GetFontNam
$LN7@GetFontNam:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFontName@CRRECToolBar@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ ENDP ; CRRECToolBar::GetFontName
EXTRN	__imp___wtoi:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFontSize@CRRECToolBar@@QBEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFontSize@CRRECToolBar@@QBEHXZ$0
__ehfuncinfo$?GetFontSize@CRRECToolBar@@QBEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFontSize@CRRECToolBar@@QBEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetFontSize@CRRECToolBar@@QBEHXZ
_TEXT	SEGMENT
$T173599 = -36						; size = 4
_sz$173156 = -28					; size = 4
_index$173154 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetFontSize@CRRECToolBar@@QBEHXZ PROC			; CRRECToolBar::GetFontSize, COMDAT
; _this$ = ecx

; 245  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFontSize@CRRECToolBar@@QBEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 	if(m_size.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+424], 0
	je	$LN2@GetFontSiz

; 247  : 	{
; 248  : 		int index = m_size.GetCurSel();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?GetCurSel@CComboBox@@QBEHXZ		; CComboBox::GetCurSel
	mov	DWORD PTR _index$173154[ebp], eax

; 249  : 
; 250  : 		if(index != CB_ERR)

	cmp	DWORD PTR _index$173154[ebp], -1
	je	SHORT $LN2@GetFontSiz

; 251  : 		{
; 252  : 			CString sz;

	mov	esi, esp
	lea	ecx, DWORD PTR _sz$173156[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 253  : 			m_size.GetLBText(index, sz);

	lea	ecx, DWORD PTR _sz$173156[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$173154[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?GetLBText@CComboBox@@QBEXHAAV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CComboBox::GetLBText

; 254  : 			return _ttoi(sz);

	mov	esi, esp
	lea	ecx, DWORD PTR _sz$173156[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T173599[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sz$173156[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T173599[ebp]
	jmp	SHORT $LN3@GetFontSiz
$LN2@GetFontSiz:

; 255  : 		}
; 256  : 	}
; 257  : 
; 258  : 	// else
; 259  : 	return 11;

	mov	eax, 11					; 0000000bH
$LN3@GetFontSiz:

; 260  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetFontSiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GetFontSiz:
	DD	1
	DD	$LN8@GetFontSiz
$LN8@GetFontSiz:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN6@GetFontSiz
$LN6@GetFontSiz:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFontSize@CRRECToolBar@@QBEHXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _sz$173156[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?GetFontSize@CRRECToolBar@@QBEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFontSize@CRRECToolBar@@QBEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFontSize@CRRECToolBar@@QBEHXZ ENDP			; CRRECToolBar::GetFontSize
PUBLIC	?IncrementFontSize@CRRECToolBar@@QAEHH@Z	; CRRECToolBar::IncrementFontSize
EXTRN	?IncrementSize@CSizeComboBox@@QAEHH@Z:PROC	; CSizeComboBox::IncrementSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IncrementFontSize@CRRECToolBar@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBy$ = 8						; size = 4
?IncrementFontSize@CRRECToolBar@@QAEHH@Z PROC		; CRRECToolBar::IncrementFontSize, COMDAT
; _this$ = ecx

; 263  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 264  : 	if(m_size.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+424], 0
	je	SHORT $LN1@IncrementF

; 265  : 		return m_size.IncrementSize(nBy);

	mov	ecx, DWORD PTR _nBy$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?IncrementSize@CSizeComboBox@@QAEHH@Z	; CSizeComboBox::IncrementSize
	jmp	SHORT $LN2@IncrementF
$LN1@IncrementF:

; 266  : 
; 267  : 	return FALSE;

	xor	eax, eax
$LN2@IncrementF:

; 268  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IncrementFontSize@CRRECToolBar@@QAEHH@Z ENDP		; CRRECToolBar::IncrementFontSize
_TEXT	ENDS
PUBLIC	?SetFontColor@CRRECToolBar@@QAEXKH@Z		; CRRECToolBar::SetFontColor
EXTRN	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ:PROC	; CWnd::GetSafeHwnd
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFontColor@CRRECToolBar@@QAEXKH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
_bForeground$ = 12					; size = 4
?SetFontColor@CRRECToolBar@@QAEXKH@Z PROC		; CRRECToolBar::SetFontColor, COMDAT
; _this$ = ecx

; 271  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 272  : 	if (bForeground)

	cmp	DWORD PTR _bForeground$[ebp], 0
	je	SHORT $LN5@SetFontCol

; 273  : 	{
; 274  : 		if (m_crText == color)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+508]
	cmp	ecx, DWORD PTR _color$[ebp]
	jne	SHORT $LN4@SetFontCol

; 275  : 			return;

	jmp	SHORT $LN6@SetFontCol
$LN4@SetFontCol:

; 276  : 
; 277  : 		m_crText = color;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _color$[ebp]
	mov	DWORD PTR [edx+508], eax

; 278  : 	}
; 279  : 	else

	jmp	SHORT $LN3@SetFontCol
$LN5@SetFontCol:

; 280  : 	{
; 281  : 		if (m_crBack == color)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+512]
	cmp	edx, DWORD PTR _color$[ebp]
	jne	SHORT $LN2@SetFontCol

; 282  : 			return;

	jmp	SHORT $LN6@SetFontCol
$LN2@SetFontCol:

; 283  : 
; 284  : 		m_crBack = color;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+512], ecx
$LN3@SetFontCol:

; 285  : 	}
; 286  : 
; 287  : 	if (GetSafeHwnd())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	test	eax, eax
	je	SHORT $LN6@SetFontCol

; 288  : 		Invalidate();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate
$LN6@SetFontCol:

; 289  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetFontColor@CRRECToolBar@@QAEXKH@Z ENDP		; CRRECToolBar::SetFontColor
_TEXT	ENDS
PUBLIC	?GetFontColor@CRRECToolBar@@QBEKHH@Z		; CRRECToolBar::GetFontColor
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFontColor@CRRECToolBar@@QBEKHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bForeground$ = 8					; size = 4
_bTranslateDefault$ = 12				; size = 4
?GetFontColor@CRRECToolBar@@QBEKHH@Z PROC		; CRRECToolBar::GetFontColor, COMDAT
; _this$ = ecx

; 292  : { 

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	if (bForeground)

	cmp	DWORD PTR _bForeground$[ebp], 0
	je	SHORT $LN4@GetFontCol

; 294  : 	{
; 295  : 		if (m_crText == CLR_DEFAULT && bTranslateDefault)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+508], -16777216		; ff000000H
	jne	SHORT $LN3@GetFontCol
	cmp	DWORD PTR _bTranslateDefault$[ebp], 0
	je	SHORT $LN3@GetFontCol

; 296  : 			return GetSysColor(COLOR_WINDOWTEXT);

	mov	esi, esp
	push	8
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@GetFontCol
$LN3@GetFontCol:

; 297  : 		
; 298  : 		// else
; 299  : 		return m_crText;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+508]
	jmp	SHORT $LN5@GetFontCol

; 300  : 	}
; 301  : 	else // background

	jmp	SHORT $LN5@GetFontCol
$LN4@GetFontCol:

; 302  : 	{
; 303  : 		if (m_crBack == CLR_DEFAULT && bTranslateDefault)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+512], -16777216		; ff000000H
	jne	SHORT $LN1@GetFontCol
	cmp	DWORD PTR _bTranslateDefault$[ebp], 0
	je	SHORT $LN1@GetFontCol

; 304  : 			return GetSysColor(COLOR_WINDOW);

	mov	esi, esp
	push	5
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@GetFontCol
$LN1@GetFontCol:

; 305  : 		
; 306  : 		// else
; 307  : 		return m_crBack;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+512]
$LN5@GetFontCol:

; 308  : 	}
; 309  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFontColor@CRRECToolBar@@QBEKHH@Z ENDP		; CRRECToolBar::GetFontColor
_TEXT	ENDS
PUBLIC	?SetButtonState@CRRECToolBar@@QAEHHI@Z		; CRRECToolBar::SetButtonState
EXTRN	?SetState@CToolBarCtrl@@QAEHHI@Z:PROC		; CToolBarCtrl::SetState
EXTRN	?IsWindowEnabled@CWnd@@QBEHXZ:PROC		; CWnd::IsWindowEnabled
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetButtonState@CRRECToolBar@@QAEHHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
_nState$ = 12						; size = 4
?SetButtonState@CRRECToolBar@@QAEHHI@Z PROC		; CRRECToolBar::SetButtonState, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	if (!IsWindowEnabled())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWindowEnabled@CWnd@@QBEHXZ		; CWnd::IsWindowEnabled
	test	eax, eax
	jne	SHORT $LN2@SetButtonS

; 314  : 		nState &= ~TBSTATE_ENABLED;

	mov	eax, DWORD PTR _nState$[ebp]
	and	eax, -5					; fffffffbH
	mov	DWORD PTR _nState$[ebp], eax

; 315  : 	else

	jmp	SHORT $LN1@SetButtonS
$LN2@SetButtonS:

; 316  : 		nState |= TBSTATE_ENABLED;

	mov	ecx, DWORD PTR _nState$[ebp]
	or	ecx, 4
	mov	DWORD PTR _nState$[ebp], ecx
$LN1@SetButtonS:

; 317  : 
; 318  : 	return GetToolBarCtrl().SetState(nID, nState);

	mov	edx, DWORD PTR _nState$[ebp]
	push	edx
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetState@CToolBarCtrl@@QAEHHI@Z	; CToolBarCtrl::SetState

; 319  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetButtonState@CRRECToolBar@@QAEHHI@Z ENDP		; CRRECToolBar::SetButtonState
_TEXT	ENDS
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?OnEnable@CWnd@@IAEXH@Z:PROC			; CWnd::OnEnable
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEnable@CRRECToolBar@@IAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnable$ = 8						; size = 4
?OnEnable@CRRECToolBar@@IAEXH@Z PROC			; CRRECToolBar::OnEnable, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	CEnToolBar::OnEnable(bEnable);

	mov	eax, DWORD PTR _bEnable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnEnable@CWnd@@IAEXH@Z			; CWnd::OnEnable

; 324  : 	
; 325  : 	m_font.EnableWindow(bEnable);

	mov	ecx, DWORD PTR _bEnable$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?EnableWindow@CWnd@@QAEHH@Z		; CWnd::EnableWindow

; 326  : 	m_size.EnableWindow(bEnable);

	mov	edx, DWORD PTR _bEnable$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?EnableWindow@CWnd@@QAEHH@Z		; CWnd::EnableWindow

; 327  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnEnable@CRRECToolBar@@IAEXH@Z ENDP			; CRRECToolBar::OnEnable
_TEXT	ENDS
PUBLIC	?IsButtonChecked@CRRECToolBar@@QBEHH@Z		; CRRECToolBar::IsButtonChecked
EXTRN	?GetState@CToolBarCtrl@@QBEHH@Z:PROC		; CToolBarCtrl::GetState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsButtonChecked@CRRECToolBar@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
?IsButtonChecked@CRRECToolBar@@QBEHH@Z PROC		; CRRECToolBar::IsButtonChecked, COMDAT
; _this$ = ecx

; 330  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 331  : 	return (GetToolBarCtrl().GetState(nID) & TBSTATE_CHECKED);

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?GetState@CToolBarCtrl@@QBEHH@Z		; CToolBarCtrl::GetState
	and	eax, 1

; 332  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsButtonChecked@CRRECToolBar@@QBEHH@Z ENDP		; CRRECToolBar::IsButtonChecked
_TEXT	ENDS
PUBLIC	?CheckButton@CRRECToolBar@@QAEHHH@Z		; CRRECToolBar::CheckButton
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckButton@CRRECToolBar@@QAEHHH@Z
_TEXT	SEGMENT
_nState$ = -8						; size = 4
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
_bChecked$ = 12						; size = 4
?CheckButton@CRRECToolBar@@QAEHHH@Z PROC		; CRRECToolBar::CheckButton, COMDAT
; _this$ = ecx

; 335  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 336  : 	UINT nState = GetToolBarCtrl().GetState(nID);

	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?GetState@CToolBarCtrl@@QBEHH@Z		; CToolBarCtrl::GetState
	mov	DWORD PTR _nState$[ebp], eax

; 337  : 
; 338  : 	if (!bChecked)

	cmp	DWORD PTR _bChecked$[ebp], 0
	jne	SHORT $LN2@CheckButto

; 339  : 		nState &= ~TBSTATE_CHECKED;

	mov	ecx, DWORD PTR _nState$[ebp]
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR _nState$[ebp], ecx

; 340  : 	else

	jmp	SHORT $LN1@CheckButto
$LN2@CheckButto:

; 341  : 		nState |= TBSTATE_CHECKED;

	mov	edx, DWORD PTR _nState$[ebp]
	or	edx, 1
	mov	DWORD PTR _nState$[ebp], edx
$LN1@CheckButto:

; 342  : 
; 343  : 	return SetButtonState(nID, nState);

	mov	eax, DWORD PTR _nState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetButtonState@CRRECToolBar@@QAEHHI@Z	; CRRECToolBar::SetButtonState

; 344  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckButton@CRRECToolBar@@QAEHHH@Z ENDP		; CRRECToolBar::CheckButton
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z:PROC	; CWnd::MoveWindow
EXTRN	??BCRect@@QAEPAUtagRECT@@XZ:PROC		; CRect::operator tagRECT *
EXTRN	?Width@CRect@@QBEHXZ:PROC			; CRect::Width
EXTRN	??0CSize@@QAE@K@Z:PROC				; CSize::CSize
EXTRN	?GetButtonSize@CToolBarCtrl@@QBEKXZ:PROC	; CToolBarCtrl::GetButtonSize
EXTRN	?OnSize@CWnd@@IAEXIHH@Z:PROC			; CWnd::OnSize
EXTRN	?SetButtonSize@CToolBarCtrl@@QAEHVCSize@@@Z:PROC ; CToolBarCtrl::SetButtonSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSize@CRRECToolBar@@IAEXIHH@Z
_TEXT	SEGMENT
tv195 = -128						; size = 4
tv192 = -124						; size = 4
_nNewWidth$173218 = -120				; size = 4
_rect$173217 = -112					; size = 16
_tbi$173215 = -88					; size = 32
_DEFCTRLSWIDTH$173214 = -52				; size = 4
_rDiv$173213 = -44					; size = 16
_size$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CRRECToolBar@@IAEXIHH@Z PROC			; CRRECToolBar::OnSize, COMDAT
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	GetToolBarCtrl().SetButtonSize(m_sizeButton);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	push	ecx
	mov	edx, DWORD PTR [eax+208]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetButtonSize@CToolBarCtrl@@QAEHVCSize@@@Z ; CToolBarCtrl::SetButtonSize

; 349  : 	
; 350  : 	CEnToolBar::OnSize(nType, cx, cy);

	mov	eax, DWORD PTR _cy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSize@CWnd@@IAEXIHH@Z			; CWnd::OnSize

; 351  : 	
; 352  : 	CSize size(GetToolBarCtrl().GetButtonSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?GetButtonSize@CToolBarCtrl@@QBEKXZ	; CToolBarCtrl::GetButtonSize
	push	eax
	lea	ecx, DWORD PTR _size$[ebp]
	call	??0CSize@@QAE@K@Z			; CSize::CSize

; 353  : 
; 354  : 	if (m_font.GetSafeHwnd())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	test	eax, eax
	je	$LN3@OnSize

; 355  : 	{
; 356  : 		CRect rDiv;

	lea	ecx, DWORD PTR _rDiv$173213[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 357  : 
; 358  : 		// calc length after which we want to start shortening ctrls
; 359  : 		GetItemRect(1, &rDiv); // divider

	mov	esi, esp
	lea	eax, DWORD PTR _rDiv$173213[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+432]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 360  : 		const int DEFCTRLSWIDTH = FONT_COMBO_WIDTH + SIZE_COMBO_WIDTH + 
; 361  : 									(5 * rDiv.Width()) / 2; // 2.5 separators

	lea	ecx, DWORD PTR _rDiv$173213[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	imul	eax, 5
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, 176				; 000000b0H
	mov	DWORD PTR _DEFCTRLSWIDTH$173214[ebp], eax

; 362  : 
; 363  : 		// if the toolbar length is less than the default
; 364  : 		// width of the embedded widgets we reduce the 
; 365  : 		// font combo as far as we can.
; 366  : 		TBBUTTONINFO tbi;
; 367  : 		tbi.cbSize = sizeof(TBBUTTONINFO);

	mov	DWORD PTR _tbi$173215[ebp], 32		; 00000020H

; 368  : 		tbi.dwMask = TBIF_SIZE;  // By index

	mov	DWORD PTR _tbi$173215[ebp+4], 64	; 00000040H

; 369  : 		
; 370  :  		CRect rect;

	lea	ecx, DWORD PTR _rect$173217[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 371  : 		GetItemRect(FONT_NAME_POS, &rect);

	mov	esi, esp
	lea	ecx, DWORD PTR _rect$173217[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+432]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 372  : 
; 373  : 		rect.left++;

	mov	eax, DWORD PTR _rect$173217[ebp]
	add	eax, 1
	mov	DWORD PTR _rect$173217[ebp], eax

; 374  : 		rect.top++;		

	mov	ecx, DWORD PTR _rect$173217[ebp+4]
	add	ecx, 1
	mov	DWORD PTR _rect$173217[ebp+4], ecx

; 375  : 		rect.bottom += COMBO_HEIGHT;

	mov	edx, DWORD PTR _rect$173217[ebp+12]
	add	edx, 256				; 00000100H
	mov	DWORD PTR _rect$173217[ebp+12], edx

; 376  : 
; 377  : 		int nNewWidth = FONT_COMBO_WIDTH - max(0, DEFCTRLSWIDTH - cx);

	mov	eax, DWORD PTR _DEFCTRLSWIDTH$173214[ebp]
	sub	eax, DWORD PTR _cx$[ebp]
	jns	SHORT $LN5@OnSize
	mov	DWORD PTR tv192[ebp], 0
	jmp	SHORT $LN6@OnSize
$LN5@OnSize:
	mov	ecx, DWORD PTR _DEFCTRLSWIDTH$173214[ebp]
	sub	ecx, DWORD PTR _cx$[ebp]
	mov	DWORD PTR tv192[ebp], ecx
$LN6@OnSize:
	mov	edx, 128				; 00000080H
	sub	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR _nNewWidth$173218[ebp], edx

; 378  : 		nNewWidth = max(nNewWidth, MIN_FONT_COMBO_WIDTH);

	cmp	DWORD PTR _nNewWidth$173218[ebp], 60	; 0000003cH
	jle	SHORT $LN7@OnSize
	mov	eax, DWORD PTR _nNewWidth$173218[ebp]
	mov	DWORD PTR tv195[ebp], eax
	jmp	SHORT $LN8@OnSize
$LN7@OnSize:
	mov	DWORD PTR tv195[ebp], 60		; 0000003cH
$LN8@OnSize:
	mov	ecx, DWORD PTR tv195[ebp]
	mov	DWORD PTR _nNewWidth$173218[ebp], ecx

; 379  : 
; 380  : 		if (nNewWidth != rect.Width())

	lea	ecx, DWORD PTR _rect$173217[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	cmp	DWORD PTR _nNewWidth$173218[ebp], eax
	je	$LN3@OnSize

; 381  : 		{
; 382  : 			rect.right = rect.left + nNewWidth;

	mov	edx, DWORD PTR _rect$173217[ebp]
	add	edx, DWORD PTR _nNewWidth$173218[ebp]
	mov	DWORD PTR _rect$173217[ebp+8], edx

; 383  : 			rect.bottom += COMBO_HEIGHT;

	mov	eax, DWORD PTR _rect$173217[ebp+12]
	add	eax, 256				; 00000100H
	mov	DWORD PTR _rect$173217[ebp+12], eax

; 384  : 			m_font.MoveWindow(rect);

	push	1
	lea	ecx, DWORD PTR _rect$173217[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z	; CWnd::MoveWindow

; 385  : 			
; 386  : 			// update toolbar item size also
; 387  : 			tbi.cx = (WORD)rect.Width();

	lea	ecx, DWORD PTR _rect$173217[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	mov	WORD PTR _tbi$173215[ebp+18], ax

; 388  : 			GetToolBarCtrl().SetButtonInfo(FONT_NAME_ID, &tbi);

	lea	ecx, DWORD PTR _tbi$173215[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?SetButtonInfo@CToolBarCtrl@@QAEHHPAUTBBUTTONINFOW@@@Z ; CToolBarCtrl::SetButtonInfo

; 389  : 			
; 390  : 			// move the other two items to suit their toolbar rects
; 391  : 			GetItemRect(FONT_SIZE_POS, &rect);

	mov	esi, esp
	lea	edx, DWORD PTR _rect$173217[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+432]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 392  : 			rect.top++;		

	mov	ecx, DWORD PTR _rect$173217[ebp+4]
	add	ecx, 1
	mov	DWORD PTR _rect$173217[ebp+4], ecx

; 393  : 			rect.bottom += COMBO_HEIGHT;

	mov	edx, DWORD PTR _rect$173217[ebp+12]
	add	edx, 256				; 00000100H
	mov	DWORD PTR _rect$173217[ebp+12], edx

; 394  : 			m_size.MoveWindow(rect);

	push	1
	lea	ecx, DWORD PTR _rect$173217[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z	; CWnd::MoveWindow
$LN3@OnSize:

; 395  : 		}
; 396  : 	}
; 397  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OnSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN14@OnSize:
	DD	4
	DD	$LN13@OnSize
$LN13@OnSize:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN9@OnSize
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN10@OnSize
	DD	-88					; ffffffa8H
	DD	32					; 00000020H
	DD	$LN11@OnSize
	DD	-112					; ffffff90H
	DD	16					; 00000010H
	DD	$LN12@OnSize
$LN12@OnSize:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN11@OnSize:
	DB	116					; 00000074H
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	0
$LN10@OnSize:
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	0
$LN9@OnSize:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?OnSize@CRRECToolBar@@IAEXIHH@Z ENDP			; CRRECToolBar::OnSize
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??3CObject@@SGXPAXPBDH@Z:PROC			; CObject::operator delete
EXTRN	??0CColourPopup@@QAE@VCPoint@@KPAVCWnd@@IPB_W2H@Z:PROC ; CColourPopup::CColourPopup
EXTRN	??0CPoint@@QAE@HH@Z:PROC			; CPoint::CPoint
EXTRN	??2CObject@@SGPAXIPBDH@Z:PROC			; CObject::operator new
EXTRN	__imp_?LoadStringW@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z:PROC
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ClientToScreen
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$2
__ehfuncinfo$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
tv190 = -104						; size = 4
tv65 = -100						; size = 4
$T173642 = -96						; size = 8
$T173641 = -88						; size = 4
$T173640 = -84						; size = 4
_customText$173237 = -76				; size = 4
_defaultText$173236 = -64				; size = 4
_color$173235 = -56					; size = 4
_rButton$173234 = -48					; size = 16
_nBtnID$ = -28						; size = 4
_pNMTB$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CRRECToolBar::OnColorDropDown, COMDAT
; _this$ = ecx

; 400  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 401  : 	LPNMTOOLBAR pNMTB = (LPNMTOOLBAR)pNMHDR;

	mov	eax, DWORD PTR _pNMHDR$[ebp]
	mov	DWORD PTR _pNMTB$[ebp], eax

; 402  : 	UINT nBtnID = pNMTB->iItem;

	mov	ecx, DWORD PTR _pNMTB$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _nBtnID$[ebp], edx

; 403  : 
; 404  : 	switch (nBtnID)

	mov	eax, DWORD PTR _nBtnID$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 32797		; 0000801dH
	je	SHORT $LN1@OnColorDro
	cmp	DWORD PTR tv65[ebp], 32800		; 00008020H
	je	SHORT $LN1@OnColorDro
	jmp	$LN2@OnColorDro
$LN1@OnColorDro:

; 405  : 	{
; 406  : 	case ID_EDIT_BACKCOLOR:
; 407  : 	case ID_EDIT_TEXTCOLOR:
; 408  : 		{
; 409  : 			CRect rButton;

	lea	ecx, DWORD PTR _rButton$173234[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 410  : 			GetItemRect(CommandToIndex(pNMTB->iItem), rButton);

	lea	ecx, DWORD PTR _rButton$173234[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pNMTB$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommandToIndex@CToolBar@@QBEHI@Z	; CToolBar::CommandToIndex
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+432]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 411  : 			ClientToScreen(rButton);

	lea	ecx, DWORD PTR _rButton$173234[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 412  : 
; 413  : 			COLORREF color = GetFontColor(nBtnID == ID_EDIT_TEXTCOLOR);

	push	0
	xor	ecx, ecx
	cmp	DWORD PTR _nBtnID$[ebp], 32797		; 0000801dH
	sete	cl
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFontColor@CRRECToolBar@@QBEKHH@Z	; CRRECToolBar::GetFontColor
	mov	DWORD PTR _color$173235[ebp], eax

; 414  : 			CString defaultText, customText;

	mov	esi, esp
	lea	ecx, DWORD PTR _defaultText$173236[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _customText$173237[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 415  : 
; 416  : 			defaultText.LoadString(STRING_DEFAULT);

	mov	esi, esp
	push	54					; 00000036H
	lea	ecx, DWORD PTR _defaultText$173236[ebp]
	call	DWORD PTR __imp_?LoadStringW@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 417  : 			customText.LoadString(STRING_CUSTOM);

	mov	esi, esp
	push	55					; 00000037H
	lea	ecx, DWORD PTR _customText$173237[ebp]
	call	DWORD PTR __imp_?LoadStringW@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 418  : 
; 419  : 			new CColourPopup(CPoint(rButton.left, rButton.bottom), color, 
; 420  : 							 this, nBtnID, defaultText, customText, TRUE);

	push	419					; 000001a3H
	push	OFFSET _THIS_FILE
	push	420					; 000001a4H
	call	??2CObject@@SGPAXIPBDH@Z		; CObject::operator new
	mov	DWORD PTR $T173641[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T173641[ebp], 0
	je	SHORT $LN6@OnColorDro
	push	1
	mov	esi, esp
	lea	ecx, DWORD PTR _customText$173237[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _defaultText$173236[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR _nBtnID$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _color$173235[ebp]
	push	ecx
	mov	edx, DWORD PTR _rButton$173234[ebp+12]
	push	edx
	mov	eax, DWORD PTR _rButton$173234[ebp]
	push	eax
	lea	ecx, DWORD PTR $T173642[ebp]
	call	??0CPoint@@QAE@HH@Z			; CPoint::CPoint
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T173641[ebp]
	call	??0CColourPopup@@QAE@VCPoint@@KPAVCWnd@@IPB_W2H@Z ; CColourPopup::CColourPopup
	mov	DWORD PTR tv190[ebp], eax
	jmp	SHORT $LN7@OnColorDro
$LN6@OnColorDro:
	mov	DWORD PTR tv190[ebp], 0
$LN7@OnColorDro:
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR $T173640[ebp], eax

; 421  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _customText$173237[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _defaultText$173236[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@OnColorDro:

; 422  : 		break;
; 423  : 	}
; 424  : 
; 425  : 	*pResult = 0;

	mov	ecx, DWORD PTR _pResult$[ebp]
	mov	DWORD PTR [ecx], 0

; 426  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@OnColorDro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN16@OnColorDro:
	DD	3
	DD	$LN15@OnColorDro
$LN15@OnColorDro:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN11@OnColorDro
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN12@OnColorDro
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN13@OnColorDro
$LN13@OnColorDro:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN12@OnColorDro:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN11@OnColorDro:
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _defaultText$173236[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _customText$173237[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z$2:
	push	419					; 000001a3H
	push	OFFSET _THIS_FILE
	mov	eax, DWORD PTR $T173641[ebp]
	push	eax
	call	??3CObject@@SGXPAXPBDH@Z		; CObject::operator delete
	ret	0
__ehhandler$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnColorDropDown@CRRECToolBar@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CRRECToolBar::OnColorDropDown
PUBLIC	__$ArrayPad$
EXTRN	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z:PROC	; CDC::FillSolidRect
EXTRN	?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z:PROC	; CDC::FromHandle
EXTRN	?DeflateRect@CRect@@QAEXHH@Z:PROC		; CRect::DeflateRect
EXTRN	??1CThemed@@UAE@XZ:PROC				; CThemed::~CThemed
EXTRN	?AreControlsThemed@CThemed@@SAHXZ:PROC		; CThemed::AreControlsThemed
EXTRN	??0CThemed@@QAE@PBVCWnd@@PB_W@Z:PROC		; CThemed::CThemed
EXTRN	??0CRect@@QAE@ABUtagRECT@@@Z:PROC		; CRect::CRect
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z$0
__ehfuncinfo$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
_TEXT	SEGMENT
tv65 = -76						; size = 4
$T173663 = -72						; size = 12
$T173662 = -60						; size = 4
_color$173261 = -56					; size = 4
_pDC$173260 = -52					; size = 4
_rColor$173255 = -44					; size = 16
_nBtnID$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lpNMCustomDraw$ = 8					; size = 4
?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z PROC ; CRRECToolBar::OnItemPostPaint, COMDAT
; _this$ = ecx

; 429  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 430  : 	UINT nBtnID = lpNMCustomDraw->nmcd.dwItemSpec;

	mov	eax, DWORD PTR _lpNMCustomDraw$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _nBtnID$[ebp], ecx

; 431  : 
; 432  : 	switch (nBtnID)

	mov	edx, DWORD PTR _nBtnID$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 32797		; 0000801dH
	je	SHORT $LN3@OnItemPost
	cmp	DWORD PTR tv65[ebp], 32800		; 00008020H
	je	SHORT $LN3@OnItemPost
	jmp	$LN4@OnItemPost
$LN3@OnItemPost:

; 433  : 	{
; 434  : 	case ID_EDIT_BACKCOLOR:
; 435  : 	case ID_EDIT_TEXTCOLOR:
; 436  : 		{
; 437  : 			// paint the lowest 3 lines with the appropriate colour
; 438  : 			// but only as far as the beginning of the drop button
; 439  : 			CRect rColor(lpNMCustomDraw->nmcd.rc);

	mov	eax, DWORD PTR _lpNMCustomDraw$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _rColor$173255[ebp]
	call	??0CRect@@QAE@ABUtagRECT@@@Z		; CRect::CRect

; 440  : 
; 441  : 			if (CThemed().AreControlsThemed())

	push	0
	push	0
	lea	ecx, DWORD PTR $T173663[ebp]
	call	??0CThemed@@QAE@PBVCWnd@@PB_W@Z		; CThemed::CThemed
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?AreControlsThemed@CThemed@@SAHXZ	; CThemed::AreControlsThemed
	mov	DWORD PTR $T173662[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T173663[ebp]
	call	??1CThemed@@UAE@XZ			; CThemed::~CThemed
	cmp	DWORD PTR $T173662[ebp], 0
	je	SHORT $LN2@OnItemPost

; 442  : 				rColor.bottom++;

	mov	ecx, DWORD PTR _rColor$173255[ebp+12]
	add	ecx, 1
	mov	DWORD PTR _rColor$173255[ebp+12], ecx

; 443  : 			else

	jmp	SHORT $LN1@OnItemPost
$LN2@OnItemPost:

; 444  : 				rColor.DeflateRect(2, 2);

	push	2
	push	2
	lea	ecx, DWORD PTR _rColor$173255[ebp]
	call	?DeflateRect@CRect@@QAEXHH@Z		; CRect::DeflateRect
$LN1@OnItemPost:

; 445  : 
; 446  : 			rColor.top = rColor.bottom - 3;

	mov	edx, DWORD PTR _rColor$173255[ebp+12]
	sub	edx, 3
	mov	DWORD PTR _rColor$173255[ebp+4], edx

; 447  : 			rColor.right = rColor.left + m_sizeImage.cx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rColor$173255[ebp]
	add	ecx, DWORD PTR [eax+200]
	mov	DWORD PTR _rColor$173255[ebp+8], ecx

; 448  : 
; 449  : 			CDC* pDC = CDC::FromHandle(lpNMCustomDraw->nmcd.hdc);

	mov	edx, DWORD PTR _lpNMCustomDraw$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z	; CDC::FromHandle
	mov	DWORD PTR _pDC$173260[ebp], eax

; 450  : 			COLORREF color = GetFontColor(nBtnID == ID_EDIT_TEXTCOLOR, TRUE);

	push	1
	xor	ecx, ecx
	cmp	DWORD PTR _nBtnID$[ebp], 32797		; 0000801dH
	sete	cl
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFontColor@CRRECToolBar@@QBEKHH@Z	; CRRECToolBar::GetFontColor
	mov	DWORD PTR _color$173261[ebp], eax

; 451  : 
; 452  : 			pDC->FillSolidRect(rColor, color);

	mov	edx, DWORD PTR _color$173261[ebp]
	push	edx
	lea	ecx, DWORD PTR _rColor$173255[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _pDC$173260[ebp]
	call	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z	; CDC::FillSolidRect
$LN4@OnItemPost:

; 453  : 		}
; 454  : 		break;
; 455  : 	}
; 456  : 
; 457  : 	return CDRF_DODEFAULT;

	xor	eax, eax

; 458  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@OnItemPost
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@OnItemPost:
	DD	1
	DD	$LN11@OnItemPost
$LN11@OnItemPost:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN9@OnItemPost
$LN9@OnItemPost:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z$0:
	lea	ecx, DWORD PTR $T173663[ebp]
	jmp	??1CThemed@@UAE@XZ			; CThemed::~CThemed
__ehhandler$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnItemPostPaint@CRRECToolBar@@MAEJPAU_NMTBCUSTOMDRAW@@@Z ENDP ; CRRECToolBar::OnItemPostPaint
END
