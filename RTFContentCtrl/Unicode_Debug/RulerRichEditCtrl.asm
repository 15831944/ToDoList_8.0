; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\_code\RTFContentCtrl\RulerRichEditCtrl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_THIS_FILE DB	'RulerRichEditCtrl.cpp', 00H
_DATA	ENDS
CONST	SEGMENT
$SG171746 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'R', 00H, 'E', 00H
	DB	'N', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'S', 00H, 'T', 00H, 'O'
	DB	00H, 'M', 00H, 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG171751 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'R', 00H, 'E', 00H
	DB	'N', 00H, '_', 00H, 'F', 00H, 'A', 00H, 'I', 00H, 'L', 00H, 'E'
	DB	00H, 'D', 00H, 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG175520 DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ':', 00H, '/', 00H
	DB	'/', 00H, 00H, 00H
$SG175525 DB	'_', 00H, 'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	'R', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'E', 00H, 'D', 00H, 'I'
	DB	00H, 'T', 00H, 'C', 00H, 'T', 00H, 'R', 00H, 'L', 00H, '_', 00H
	DB	'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H, '_', 00H, 'T'
	DB	00H, 'R', 00H, 'A', 00H, 'C', 00H, 'K', 00H, '_', 00H, 00H, 00H
$SG175529 DB	'_', 00H, 'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	'R', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'E', 00H, 'D', 00H, 'I'
	DB	00H, 'T', 00H, 'C', 00H, 'T', 00H, 'R', 00H, 'L', 00H, '_', 00H
	DB	'G', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'S', 00H, 'C', 00H, 'R'
	DB	00H, 'O', 00H, 'L', 00H, 'L', 00H, '_', 00H, 'P', 00H, 'O', 00H
	DB	'S', 00H, '_', 00H, 00H, 00H
	ORG $+2
$SG175534 DB	'_', 00H, 'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	'R', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'E', 00H, 'D', 00H, 'I'
	DB	00H, 'T', 00H, 'C', 00H, 'T', 00H, 'R', 00H, 'L', 00H, '_', 00H
	DB	'S', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'R'
	DB	00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'N', 00H, 'A', 00H, 'M'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG175555 DB	'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'N', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'R', 00H, 'o', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 00H, 00H
$SG175860 DB	00H, 00H
	ORG $+2
$SG175539 DB	'_', 00H, 'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	'R', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'E', 00H, 'D', 00H, 'I'
	DB	00H, 'T', 00H, 'C', 00H, 'T', 00H, 'R', 00H, 'L', 00H, '_', 00H
	DB	'S', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'R'
	DB	00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG175914 DB	'H', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'R', 00H, 'L', 00H
	DB	'I', 00H, 'N', 00H, 'K', 00H, '"', 00H, '%', 00H, 's', 00H, '"'
	DB	00H, '%', 00H, 's', 00H, 00H, 00H
$SG176266 DB	00H, 00H
	ORG $+2
$SG175544 DB	'_', 00H, 'R', 00H, 'U', 00H, 'L', 00H, 'E', 00H, 'R', 00H
	DB	'R', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'E', 00H, 'D', 00H, 'I'
	DB	00H, 'T', 00H, 'C', 00H, 'T', 00H, 'R', 00H, 'L', 00H, '_', 00H
	DB	'S', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'R'
	DB	00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'L'
	DB	00H, 'O', 00H, 'R', 00H, 00H, 00H
$SG175956 DB	'MS Sans Serif', 00H
	ORG $+2
$SG176570 DB	' elements', 00H
	ORG $+2
$SG176534 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176569 DB	'with ', 00H
	ORG $+2
$SG176572 DB	0aH, 00H
	ORG $+2
$SG176550 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176580 DB	0aH, 00H
	ORG $+2
$SG176590 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176645 DB	'with ', 00H
	ORG $+2
$SG176646 DB	' elements', 00H
	ORG $+2
$SG176592 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176648 DB	0aH, 00H
	ORG $+2
$SG176595 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176656 DB	0aH, 00H
	ORG $+2
$SG176597 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176769 DB	'with ', 00H
	ORG $+2
$SG176770 DB	' elements', 00H
	ORG $+2
$SG176599 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176778 DB	0aH, 00H
	ORG $+2
$SG176602 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+3
$SG176786 DB	0aH, 00H
	ORG $+2
$SG176610 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176626 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176666 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176668 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176671 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176673 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176675 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176678 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176688 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176704 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176725 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176734 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176742 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176796 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176798 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176802 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176805 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176839 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176841 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176856 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176863 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176899 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176903 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176915 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176934 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176939 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176966 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176971 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176981 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176983 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG176998 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177005 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177047 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177051 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177063 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177085 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177090 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177117 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177122 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177131 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177143 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177175 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177179 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177182 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177189 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177194 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177221 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177226 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177254 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
	ORG $+7
$SG177258 DB	'c:\program files (x86)\microsoft visual studio 10.0\vc\a'
	DB	'tlmfc\include\afxtempl.h', 00H
CONST	ENDS
PUBLIC	?ShowRuler@CRulerRichEditCtrl@@QAEXH@Z		; CRulerRichEditCtrl::ShowRuler
PUBLIC	?ShowToolbar@CRulerRichEditCtrl@@QAEXH@Z	; CRulerRichEditCtrl::ShowToolbar
PUBLIC	??0CharFormat@@QAE@K@Z				; CharFormat::CharFormat
PUBLIC	??_7CRulerRichEditCtrl@@6B@			; CRulerRichEditCtrl::`vftable'
PUBLIC	??0CRulerRichEditCtrl@@QAE@XZ			; CRulerRichEditCtrl::CRulerRichEditCtrl
PUBLIC	??_R4CRulerRichEditCtrl@@6B@			; CRulerRichEditCtrl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRulerRichEditCtrl@@@8			; CRulerRichEditCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CRulerRichEditCtrl@@8			; CRulerRichEditCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRulerRichEditCtrl@@8			; CRulerRichEditCtrl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRulerRichEditCtrl@@8		; CRulerRichEditCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	?GetMessageMap@CRulerRichEditCtrl@@MBEPBUAFX_MSGMAP@@XZ ; CRulerRichEditCtrl::GetMessageMap
PUBLIC	?OnCommand@CRulerRichEditCtrl@@MAEHIJ@Z		; CRulerRichEditCtrl::OnCommand
PUBLIC	?OnNotify@CRulerRichEditCtrl@@MAEHIJPAJ@Z	; CRulerRichEditCtrl::OnNotify
PUBLIC	?Create@CRulerRichEditCtrl@@UAEHKABUtagRECT@@PAVCWnd@@IH@Z ; CRulerRichEditCtrl::Create
EXTRN	??1CRRECRuler@@UAE@XZ:PROC			; CRRECRuler::~CRRECRuler
EXTRN	??1CRRECToolBar@@UAE@XZ:PROC			; CRRECToolBar::~CRRECToolBar
EXTRN	??1CRulerRichEdit@@UAE@XZ:PROC			; CRulerRichEdit::~CRulerRichEdit
EXTRN	??1CDWordArray@@UAE@XZ:PROC			; CDWordArray::~CDWordArray
EXTRN	??1CPen@@UAE@XZ:PROC				; CPen::~CPen
EXTRN	??1CWnd@@UAE@XZ:PROC				; CWnd::~CWnd
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	??0CRRECRuler@@QAE@XZ:PROC			; CRRECRuler::CRRECRuler
EXTRN	??0CRRECToolBar@@QAE@XZ:PROC			; CRRECToolBar::CRRECToolBar
EXTRN	??0CRulerRichEdit@@QAE@XZ:PROC			; CRulerRichEdit::CRulerRichEdit
EXTRN	??0CDWordArray@@QAE@XZ:PROC			; CDWordArray::CDWordArray
EXTRN	??0CPen@@QAE@HHK@Z:PROC				; CPen::CPen
EXTRN	??0CWnd@@QAE@XZ:PROC				; CWnd::CWnd
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:PROC ; CWnd::GetRuntimeClass
EXTRN	??_ECRulerRichEditCtrl@@UAEPAXI@Z:PROC		; CRulerRichEditCtrl::`vector deleting destructor'
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CWnd@@UBEXXZ:PROC			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:PROC	; CWnd::Dump
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTW@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpW
EXTRN	?HtmlHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpW
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcW@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcW
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
;	COMDAT ??_R2CObject@@8
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRulerRichEditCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRulerRichEditCtrl@@8 DD FLAT:??_R0?AVCRulerRichEditCtrl@@@8 ; CRulerRichEditCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRulerRichEditCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CRulerRichEditCtrl@@8
rdata$r	SEGMENT
??_R2CRulerRichEditCtrl@@8 DD FLAT:??_R1A@?0A@EA@CRulerRichEditCtrl@@8 ; CRulerRichEditCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRulerRichEditCtrl@@8
rdata$r	SEGMENT
??_R3CRulerRichEditCtrl@@8 DD 00H			; CRulerRichEditCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CRulerRichEditCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRulerRichEditCtrl@@@8
_DATA	SEGMENT
??_R0?AVCRulerRichEditCtrl@@@8 DD FLAT:??_7type_info@@6B@ ; CRulerRichEditCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRulerRichEditCtrl@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRulerRichEditCtrl@@6B@
rdata$r	SEGMENT
??_R4CRulerRichEditCtrl@@6B@ DD 00H			; CRulerRichEditCtrl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRulerRichEditCtrl@@@8
	DD	FLAT:??_R3CRulerRichEditCtrl@@8
rdata$r	ENDS
;	COMDAT ??_7CRulerRichEditCtrl@@6B@
CONST	SEGMENT
??_7CRulerRichEditCtrl@@6B@ DD FLAT:??_R4CRulerRichEditCtrl@@6B@ ; CRulerRichEditCtrl::`vftable'
	DD	FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECRulerRichEditCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CRulerRichEditCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTW@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CRulerRichEditCtrl@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CRulerRichEditCtrl@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcW@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CRulerRichEditCtrl@@UAEHKABUtagRECT@@PAVCWnd@@IH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CRulerRichEditCtrl@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0CRulerRichEditCtrl@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CRulerRichEditCtrl@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$5
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CRulerRichEditCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CRulerRichEditCtrl@@QAE@XZ PROC			; CRulerRichEditCtrl::CRulerRichEditCtrl, COMDAT
; _this$ = ecx

; 92   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRulerRichEditCtrl@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWnd@@QAE@XZ				; CWnd::CWnd
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRulerRichEditCtrl@@6B@
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0CPen@@QAE@HHK@Z			; CPen::CPen
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0CDWordArray@@QAE@XZ			; CDWordArray::CDWordArray
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0CRulerRichEdit@@QAE@XZ		; CRulerRichEdit::CRulerRichEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	??0CRRECToolBar@@QAE@XZ			; CRRECToolBar::CRRECToolBar
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	??0CRRECRuler@@QAE@XZ			; CRRECRuler::CRRECRuler
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 93   : 	m_rulerPosition = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0

; 94   : 	m_margin = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+148], 0

; 95   : 	m_movingtab = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], -1

; 96   : 	m_offset = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], 0

; 97   : 	m_readOnly = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], 0

; 98   : 	m_bWordWrap = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+300], -1

; 99   : 	m_crSel.cpMax = m_crSel.cpMin = -1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+280], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], -1

; 100  : 
; 101  : 	ShowToolbar();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShowToolbar@CRulerRichEditCtrl@@QAEXH@Z ; CRulerRichEditCtrl::ShowToolbar

; 102  : 	ShowRuler();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShowRuler@CRulerRichEditCtrl@@QAEXH@Z	; CRulerRichEditCtrl::ShowRuler

; 103  : 
; 104  : 	m_cfDefault.dwMask = CFM_SIZE | CFM_FACE | CFM_BOLD | CFM_ITALIC | 
; 105  : 						 CFM_UNDERLINE | CFM_STRIKEOUT | CFM_COLOR | CFM_LINK;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+168], -536870865		; e000002fH

; 106  : 	m_cfDefault.yHeight = 200;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+176], 200		; 000000c8H

; 107  : 	m_cfDefault.dwEffects = CFE_AUTOBACKCOLOR | CFE_AUTOCOLOR;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], 1140850688		; 44000000H

; 108  : 	lstrcpy(m_cfDefault.szFaceName, _T("Times New Roman"));

	mov	esi, esp
	push	OFFSET $SG175555
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 190				; 000000beH
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 109  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CWnd@@UAE@XZ				; CWnd::~CWnd
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CPen@@UAE@XZ				; CPen::~CPen
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1CDWordArray@@UAE@XZ			; CDWordArray::~CDWordArray
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1CRulerRichEdit@@UAE@XZ		; CRulerRichEdit::~CRulerRichEdit
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	jmp	??1CRRECToolBar@@UAE@XZ			; CRRECToolBar::~CRRECToolBar
__unwindfunclet$??0CRulerRichEditCtrl@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	jmp	??1CRRECRuler@@UAE@XZ			; CRRECRuler::~CRRECRuler
__ehhandler$??0CRulerRichEditCtrl@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CRulerRichEditCtrl@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CRulerRichEditCtrl@@QAE@XZ ENDP			; CRulerRichEditCtrl::CRulerRichEditCtrl
PUBLIC	?Reset@CharFormat@@QAEXK@Z			; CharFormat::Reset
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerrichedit.h
;	COMDAT ??0CharFormat@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
??0CharFormat@@QAE@K@Z PROC				; CharFormat::CharFormat, COMDAT
; _this$ = ecx

; 18   : 	CharFormat(DWORD mask = 0)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 19   : 	{
; 20   : 		Reset(mask);

	mov	eax, DWORD PTR _mask$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CharFormat@@QAEXK@Z		; CharFormat::Reset

; 21   : 	};

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CharFormat@@QAE@K@Z ENDP				; CharFormat::CharFormat
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reset@CharFormat@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?Reset@CharFormat@@QAEXK@Z PROC				; CharFormat::Reset, COMDAT
; _this$ = ecx

; 24   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 25   : 		memset(this, 0, sizeof (CharFormat));

	push	116					; 00000074H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 26   : 		cbSize = sizeof(CharFormat);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 116			; 00000074H

; 27   : 		dwMask = mask;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _mask$[ebp]
	mov	DWORD PTR [edx+4], eax

; 28   : 	};

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reset@CharFormat@@QAEXK@Z ENDP				; CharFormat::Reset
_TEXT	ENDS
PUBLIC	??1CRulerRichEditCtrl@@UAE@XZ			; CRulerRichEditCtrl::~CRulerRichEditCtrl
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCRulerRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRulerRichEditCtrl@@UAEPAXI@Z PROC			; CRulerRichEditCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRulerRichEditCtrl@@UAE@XZ		; CRulerRichEditCtrl::~CRulerRichEditCtrl
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRulerRichEditCtrl@@UAEPAXI@Z ENDP			; CRulerRichEditCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:PROC		; CGdiObject::DeleteObject
;	COMDAT xdata$x
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
xdata$x	SEGMENT
__ehfuncinfo$??1CRulerRichEditCtrl@@UAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1CRulerRichEditCtrl@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CRulerRichEditCtrl@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CRulerRichEditCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CRulerRichEditCtrl@@UAE@XZ PROC			; CRulerRichEditCtrl::~CRulerRichEditCtrl, COMDAT
; _this$ = ecx

; 112  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CRulerRichEditCtrl@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CRulerRichEditCtrl@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 5

; 113  : 	m_pen.DeleteObject();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	?DeleteObject@CGdiObject@@QAEHXZ	; CGdiObject::DeleteObject

; 114  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	??1CRRECRuler@@UAE@XZ			; CRRECRuler::~CRRECRuler
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	??1CRRECToolBar@@UAE@XZ			; CRRECToolBar::~CRRECToolBar
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??1CRulerRichEdit@@UAE@XZ		; CRulerRichEdit::~CRulerRichEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1CDWordArray@@UAE@XZ			; CDWordArray::~CDWordArray
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1CPen@@UAE@XZ				; CPen::~CPen
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWnd@@UAE@XZ				; CWnd::~CWnd
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CWnd@@UAE@XZ				; CWnd::~CWnd
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CPen@@UAE@XZ				; CPen::~CPen
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1CDWordArray@@UAE@XZ			; CDWordArray::~CDWordArray
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1CRulerRichEdit@@UAE@XZ		; CRulerRichEdit::~CRulerRichEdit
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	jmp	??1CRRECToolBar@@UAE@XZ			; CRRECToolBar::~CRRECToolBar
__unwindfunclet$??1CRulerRichEditCtrl@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	jmp	??1CRRECRuler@@UAE@XZ			; CRRECRuler::~CRRECRuler
__ehhandler$??1CRulerRichEditCtrl@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CRulerRichEditCtrl@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CRulerRichEditCtrl@@UAE@XZ ENDP			; CRulerRichEditCtrl::~CRulerRichEditCtrl
PUBLIC	?GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ ; CRulerRichEditCtrl::GetThisMessageMap
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMessageMap@CRulerRichEditCtrl@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CRulerRichEditCtrl@@MBEPBUAFX_MSGMAP@@XZ PROC ; CRulerRichEditCtrl::GetMessageMap, COMDAT
; _this$ = ecx

; 118  : BEGIN_MESSAGE_MAP(CRulerRichEditCtrl, CWnd)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	call	?GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ ; CRulerRichEditCtrl::GetThisMessageMap
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CRulerRichEditCtrl@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CRulerRichEditCtrl::GetMessageMap
_TEXT	ENDS
PUBLIC	?OnEraseBkgnd@CRulerRichEditCtrl@@IAEHPAVCDC@@@Z ; CRulerRichEditCtrl::OnEraseBkgnd
PUBLIC	?OnSize@CRulerRichEditCtrl@@IAEXIHH@Z		; CRulerRichEditCtrl::OnSize
PUBLIC	?OnSetFocus@CRulerRichEditCtrl@@IAEXPAVCWnd@@@Z	; CRulerRichEditCtrl::OnSetFocus
PUBLIC	?OnSetText@CRulerRichEditCtrl@@IAEJIJ@Z		; CRulerRichEditCtrl::OnSetText
PUBLIC	?OnGetText@CRulerRichEditCtrl@@IAEJIJ@Z		; CRulerRichEditCtrl::OnGetText
PUBLIC	?OnGetTextLength@CRulerRichEditCtrl@@IAEJIJ@Z	; CRulerRichEditCtrl::OnGetTextLength
PUBLIC	?OnEnable@CRulerRichEditCtrl@@IAEXH@Z		; CRulerRichEditCtrl::OnEnable
PUBLIC	?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z	; CRulerRichEditCtrl::OnTrackRuler
PUBLIC	?OnGetScrollPos@CRulerRichEditCtrl@@IAEJIJ@Z	; CRulerRichEditCtrl::OnGetScrollPos
PUBLIC	?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z ; CRulerRichEditCtrl::OnSetCurrentFontName
PUBLIC	?OnSetCurrentFontSize@CRulerRichEditCtrl@@IAEJIJ@Z ; CRulerRichEditCtrl::OnSetCurrentFontSize
PUBLIC	?OnSetCurrentFontColor@CRulerRichEditCtrl@@IAEJIJ@Z ; CRulerRichEditCtrl::OnSetCurrentFontColor
PUBLIC	?OnEditBackColor@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditBackColor
PUBLIC	?OnEditBold@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::OnEditBold
PUBLIC	?OnEditBulletList@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditBulletList
PUBLIC	?OnEditCenterAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditCenterAlign
PUBLIC	?OnEditColor@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::OnEditColor
PUBLIC	?OnEditFont@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::OnEditFont
PUBLIC	?OnEditGrowFont@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditGrowFont
PUBLIC	?OnEditIndent@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditIndent
PUBLIC	?OnEditInsertTable@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditInsertTable
PUBLIC	?OnEditItalic@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditItalic
PUBLIC	?OnEditJustify@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditJustify
PUBLIC	?OnEditLeftAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditLeftAlign
PUBLIC	?OnEditNumberList@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditNumberList
PUBLIC	?OnEditOutdent@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditOutdent
PUBLIC	?OnEditRightAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditRightAlign
PUBLIC	?OnEditShrinkFont@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditShrinkFont
PUBLIC	?OnEditStrikethrough@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditStrikethrough
PUBLIC	?OnEditTextColor@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditTextColor
PUBLIC	?OnEditUnderline@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditUnderline
PUBLIC	?OnEditWordwrap@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::OnEditWordwrap
PUBLIC	?OnUpdateEditBackColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditBackColor
PUBLIC	?OnUpdateEditBold@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditBold
PUBLIC	?OnUpdateEditBullet@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditBullet
PUBLIC	?OnUpdateEditCenterAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditCenterAlign
PUBLIC	?OnUpdateEditFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditFont
PUBLIC	?OnUpdateEditGrowFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditGrowFont
PUBLIC	?OnUpdateEditIndent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditIndent
PUBLIC	?OnUpdateEditInsertTable@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditInsertTable
PUBLIC	?OnUpdateEditItalic@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditItalic
PUBLIC	?OnUpdateEditJustify@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditJustify
PUBLIC	?OnUpdateEditLeftAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditLeftAlign
PUBLIC	?OnUpdateEditNumberList@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditNumberList
PUBLIC	?OnUpdateEditOutdent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditOutdent
PUBLIC	?OnUpdateEditRightAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditRightAlign
PUBLIC	?OnUpdateEditShrinkFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditShrinkFont
PUBLIC	?OnUpdateEditStrikethru@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditStrikethru
PUBLIC	?OnUpdateEditTextColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditTextColor
PUBLIC	?OnUpdateEditUnderline@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditUnderline
PUBLIC	?OnUpdateEditWordwrap@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ; CRulerRichEditCtrl::OnUpdateEditWordwrap
PUBLIC	?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z ; CRulerRichEditCtrl::OnCreate
PUBLIC	?OnThemeChanged@CRulerRichEditCtrl@@IAEJIJ@Z	; CRulerRichEditCtrl::OnThemeChanged
PUBLIC	?OnKillFocusToolbar@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z ; CRulerRichEditCtrl::OnKillFocusToolbar
PUBLIC	?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z		; CRulerRichEditCtrl::OnSetFont
PUBLIC	?OnEnHScroll@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::OnEnHScroll
PUBLIC	?OnEnSelChange@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z ; CRulerRichEditCtrl::OnEnSelChange
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 014H ; `CRulerRichEditCtrl::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:?OnEraseBkgnd@CRulerRichEditCtrl@@IAEHPAVCDC@@@Z
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	019H
	DD	FLAT:?OnSize@CRulerRichEditCtrl@@IAEXIHH@Z
	DD	07H
	DD	00H
	DD	00H
	DD	00H
	DD	023H
	DD	FLAT:?OnSetFocus@CRulerRichEditCtrl@@IAEXPAVCWnd@@@Z
	DD	0cH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnSetText@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0dH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnGetText@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0eH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnGetTextLength@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0aH
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	FLAT:?OnEnable@CRulerRichEditCtrl@@IAEXH@Z
	DD	0c000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?urm_RULERACTION@@3IA
	DD	FLAT:?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0c000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?urm_GETSCROLLPOS@@3IA
	DD	FLAT:?OnGetScrollPos@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0c000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?urm_SETCURRENTFONTNAME@@3IA
	DD	FLAT:?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0c000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?urm_SETCURRENTFONTSIZE@@3IA
	DD	FLAT:?OnSetCurrentFontSize@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0c000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?urm_SETCURRENTFONTCOLOR@@3IA
	DD	FLAT:?OnSetCurrentFontColor@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0111H
	DD	00H
	DD	08020H
	DD	08020H
	DD	039H
	DD	FLAT:?OnEditBackColor@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08005H
	DD	08005H
	DD	039H
	DD	FLAT:?OnEditBold@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08018H
	DD	08018H
	DD	039H
	DD	FLAT:?OnEditBulletList@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08013H
	DD	08013H
	DD	039H
	DD	FLAT:?OnEditCenterAlign@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08004H
	DD	08004H
	DD	039H
	DD	FLAT:?OnEditColor@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08003H
	DD	08003H
	DD	039H
	DD	FLAT:?OnEditFont@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08026H
	DD	08026H
	DD	039H
	DD	FLAT:?OnEditGrowFont@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08015H
	DD	08015H
	DD	039H
	DD	FLAT:?OnEditIndent@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0801fH
	DD	0801fH
	DD	039H
	DD	FLAT:?OnEditInsertTable@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08007H
	DD	08007H
	DD	039H
	DD	FLAT:?OnEditItalic@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08022H
	DD	08022H
	DD	039H
	DD	FLAT:?OnEditJustify@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0800fH
	DD	0800fH
	DD	039H
	DD	FLAT:?OnEditLeftAlign@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0801bH
	DD	0801bH
	DD	039H
	DD	FLAT:?OnEditNumberList@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08016H
	DD	08016H
	DD	039H
	DD	FLAT:?OnEditOutdent@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08014H
	DD	08014H
	DD	039H
	DD	FLAT:?OnEditRightAlign@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08023H
	DD	08023H
	DD	039H
	DD	FLAT:?OnEditShrinkFont@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08019H
	DD	08019H
	DD	039H
	DD	FLAT:?OnEditStrikethrough@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0801dH
	DD	0801dH
	DD	039H
	DD	FLAT:?OnEditTextColor@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0800aH
	DD	0800aH
	DD	039H
	DD	FLAT:?OnEditUnderline@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0801aH
	DD	0801aH
	DD	039H
	DD	FLAT:?OnEditWordwrap@CRulerRichEditCtrl@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08020H
	DD	08020H
	DD	041H
	DD	FLAT:?OnUpdateEditBackColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08005H
	DD	08005H
	DD	041H
	DD	FLAT:?OnUpdateEditBold@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08018H
	DD	08018H
	DD	041H
	DD	FLAT:?OnUpdateEditBullet@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08013H
	DD	08013H
	DD	041H
	DD	FLAT:?OnUpdateEditCenterAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08003H
	DD	08003H
	DD	041H
	DD	FLAT:?OnUpdateEditFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08026H
	DD	08026H
	DD	041H
	DD	FLAT:?OnUpdateEditGrowFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08015H
	DD	08015H
	DD	041H
	DD	FLAT:?OnUpdateEditIndent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0801fH
	DD	0801fH
	DD	041H
	DD	FLAT:?OnUpdateEditInsertTable@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08007H
	DD	08007H
	DD	041H
	DD	FLAT:?OnUpdateEditItalic@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08022H
	DD	08022H
	DD	041H
	DD	FLAT:?OnUpdateEditJustify@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0800fH
	DD	0800fH
	DD	041H
	DD	FLAT:?OnUpdateEditLeftAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0801bH
	DD	0801bH
	DD	041H
	DD	FLAT:?OnUpdateEditNumberList@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08016H
	DD	08016H
	DD	041H
	DD	FLAT:?OnUpdateEditOutdent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08014H
	DD	08014H
	DD	041H
	DD	FLAT:?OnUpdateEditRightAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08023H
	DD	08023H
	DD	041H
	DD	FLAT:?OnUpdateEditShrinkFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08019H
	DD	08019H
	DD	041H
	DD	FLAT:?OnUpdateEditStrikethru@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0801dH
	DD	0801dH
	DD	041H
	DD	FLAT:?OnUpdateEditTextColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0800aH
	DD	0800aH
	DD	041H
	DD	FLAT:?OnUpdateEditUnderline@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0801aH
	DD	0801aH
	DD	041H
	DD	FLAT:?OnUpdateEditWordwrap@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z
	DD	031aH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnThemeChanged@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	04eH
	DD	0fff8H
	DD	0aH
	DD	0aH
	DD	03dH
	DD	FLAT:?OnKillFocusToolbar@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	0111H
	DD	0601H
	DD	0cH
	DD	0cH
	DD	039H
	DD	FLAT:?OnEnHScroll@CRulerRichEditCtrl@@IAEXXZ
	DD	04eH
	DD	0702H
	DD	0cH
	DD	0cH
	DD	03dH
	DD	FLAT:?OnEnSelChange@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CRulerRichEditCtrl::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ PROC ; CRulerRichEditCtrl::GetThisMessageMap, COMDAT

; 118  : BEGIN_MESSAGE_MAP(CRulerRichEditCtrl, CWnd)

	push	ebp
	mov	ebp, esp

; 119  : 	//{{AFX_MSG_MAP(CRulerRichEditCtrl)
; 120  : 	ON_WM_ERASEBKGND()
; 121  : 	ON_WM_SIZE()
; 122  : 	ON_WM_SETFOCUS()
; 123  : 	ON_MESSAGE(WM_SETTEXT, OnSetText)
; 124  : 	ON_MESSAGE(WM_GETTEXT, OnGetText )
; 125  : 	ON_MESSAGE(WM_GETTEXTLENGTH, OnGetTextLength)
; 126  : 	ON_WM_ENABLE()
; 127  : 	ON_REGISTERED_MESSAGE(urm_RULERACTION, OnTrackRuler)
; 128  : 	ON_REGISTERED_MESSAGE(urm_GETSCROLLPOS, OnGetScrollPos)
; 129  : 	ON_REGISTERED_MESSAGE(urm_SETCURRENTFONTNAME, OnSetCurrentFontName)
; 130  : 	ON_REGISTERED_MESSAGE(urm_SETCURRENTFONTSIZE, OnSetCurrentFontSize)
; 131  : 	ON_REGISTERED_MESSAGE(urm_SETCURRENTFONTCOLOR, OnSetCurrentFontColor)
; 132  : 	//}}AFX_MSG_MAP
; 133  : 	ON_COMMAND(ID_EDIT_BACKCOLOR, OnEditBackColor)
; 134  : 	ON_COMMAND(ID_EDIT_BOLD, OnEditBold)
; 135  : 	ON_COMMAND(ID_EDIT_BULLET, OnEditBulletList)
; 136  : 	ON_COMMAND(ID_EDIT_CENTERALIGN, OnEditCenterAlign)
; 137  : 	ON_COMMAND(ID_EDIT_COLOR, OnEditColor)
; 138  : 	ON_COMMAND(ID_EDIT_FONT, OnEditFont)
; 139  : 	ON_COMMAND(ID_EDIT_GROWFONT, OnEditGrowFont)
; 140  : 	ON_COMMAND(ID_EDIT_INDENT, OnEditIndent)
; 141  : 	ON_COMMAND(ID_EDIT_INSERTTABLE, OnEditInsertTable)
; 142  : 	ON_COMMAND(ID_EDIT_ITALIC, OnEditItalic)
; 143  : 	ON_COMMAND(ID_EDIT_JUSTIFY, OnEditJustify)
; 144  : 	ON_COMMAND(ID_EDIT_LEFTALIGN, OnEditLeftAlign)
; 145  : 	ON_COMMAND(ID_EDIT_NUMBER, OnEditNumberList)
; 146  : 	ON_COMMAND(ID_EDIT_OUTDENT, OnEditOutdent)
; 147  : 	ON_COMMAND(ID_EDIT_RIGHTALIGN, OnEditRightAlign)
; 148  : 	ON_COMMAND(ID_EDIT_SHRINKFONT, OnEditShrinkFont)
; 149  : 	ON_COMMAND(ID_EDIT_STRIKETHRU, OnEditStrikethrough)
; 150  : 	ON_COMMAND(ID_EDIT_TEXTCOLOR, OnEditTextColor)
; 151  : 	ON_COMMAND(ID_EDIT_UNDERLINE, OnEditUnderline)
; 152  : 	ON_COMMAND(ID_EDIT_WORDWRAP, OnEditWordwrap)
; 153  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_BACKCOLOR, OnUpdateEditBackColor)
; 154  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_BOLD, OnUpdateEditBold)
; 155  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_BULLET, OnUpdateEditBullet)
; 156  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_CENTERALIGN, OnUpdateEditCenterAlign)
; 157  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_FONT, OnUpdateEditFont)
; 158  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_GROWFONT, OnUpdateEditGrowFont)
; 159  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_INDENT, OnUpdateEditIndent)
; 160  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_INSERTTABLE, OnUpdateEditInsertTable)
; 161  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_ITALIC, OnUpdateEditItalic)
; 162  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_JUSTIFY, OnUpdateEditJustify)
; 163  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_LEFTALIGN, OnUpdateEditLeftAlign)
; 164  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_NUMBER, OnUpdateEditNumberList)
; 165  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_OUTDENT, OnUpdateEditOutdent)
; 166  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_RIGHTALIGN, OnUpdateEditRightAlign)
; 167  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_SHRINKFONT, OnUpdateEditShrinkFont)
; 168  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_STRIKETHRU, OnUpdateEditStrikethru)
; 169  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_TEXTCOLOR, OnUpdateEditTextColor)
; 170  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_UNDERLINE, OnUpdateEditUnderline)
; 171  : 	ON_UPDATE_COMMAND_UI(ID_EDIT_WORDWRAP, OnUpdateEditWordwrap)
; 172  : 
; 173  : 	ON_WM_CREATE()
; 174  : 	ON_MESSAGE(WM_THEMECHANGED, OnThemeChanged)
; 175  : 	ON_NOTIFY(NM_KILLFOCUS, TOOLBAR_CONTROL, OnKillFocusToolbar)
; 176  : 	ON_MESSAGE(WM_SETFONT, OnSetFont)
; 177  : 	ON_EN_HSCROLL(RTF_CONTROL, OnEnHScroll)
; 178  : 	ON_NOTIFY(EN_SELCHANGE, RTF_CONTROL, OnEnSelChange)
; 179  : END_MESSAGE_MAP()

	mov	eax, OFFSET ?messageMap@?1??GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
	pop	ebp
	ret	0
?GetThisMessageMap@CRulerRichEditCtrl@@KGPBUAFX_MSGMAP@@XZ ENDP ; CRulerRichEditCtrl::GetThisMessageMap
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Create@CRulerRichEditCtrl@@UAEHKABUtagRECT@@PAVCWnd@@IH@Z
_TEXT	SEGMENT
_result$ = -8						; size = 4
_this$ = -4						; size = 4
_dwStyle$ = 8						; size = 4
_rect$ = 12						; size = 4
_pParentWnd$ = 16					; size = 4
_nID$ = 20						; size = 4
___formal$ = 24						; size = 4
?Create@CRulerRichEditCtrl@@UAEHKABUtagRECT@@PAVCWnd@@IH@Z PROC ; CRulerRichEditCtrl::Create, COMDAT
; _this$ = ecx

; 184  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 	BOOL result = CWnd::Create(NULL, _T(""), dwStyle, rect, pParentWnd, nID);

	push	0
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pParentWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	push	OFFSET $SG175860
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z ; CWnd::Create
	mov	DWORD PTR _result$[ebp], eax

; 186  : 
; 187  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 188  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Create@CRulerRichEditCtrl@@UAEHKABUtagRECT@@PAVCWnd@@IH@Z ENDP ; CRulerRichEditCtrl::Create
_TEXT	ENDS
PUBLIC	?CreateToolbar@CRulerRichEditCtrl@@IAEHXZ	; CRulerRichEditCtrl::CreateToolbar
EXTRN	?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z:PROC	; CRRECToolBar::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateToolbar@CRulerRichEditCtrl@@IAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateToolbar@CRulerRichEditCtrl@@IAEHXZ PROC		; CRulerRichEditCtrl::CreateToolbar, COMDAT
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 	return m_toolbar.Create(this);

	push	-1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z ; CRRECToolBar::Create

; 193  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateToolbar@CRulerRichEditCtrl@@IAEHXZ ENDP		; CRulerRichEditCtrl::CreateToolbar
_TEXT	ENDS
PUBLIC	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::LayoutControls
PUBLIC	?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateToolbarButtons
PUBLIC	__$ArrayPad$
EXTRN	?Invalidate@CWnd@@QAEXH@Z:PROC			; CWnd::Invalidate
EXTRN	?Width@CRect@@QBEHXZ:PROC			; CRect::Width
EXTRN	?Height@CRect@@QBEHXZ:PROC			; CRect::Height
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetClientRect
EXTRN	??BCRect@@QAEPAUtagRECT@@XZ:PROC		; CRect::operator tagRECT *
EXTRN	??0CRect@@QAE@XZ:PROC				; CRect::CRect
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnThemeChanged@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_rClient$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnThemeChanged@CRulerRichEditCtrl@@IAEJIJ@Z PROC	; CRulerRichEditCtrl::OnThemeChanged, COMDAT
; _this$ = ecx

; 196  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 197  : 	m_toolbar.DestroyWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+616]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 198  : 	m_toolbar.Create(this);

	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?Create@CRRECToolBar@@QAEHPAVCWnd@@PB_WK@Z ; CRRECToolBar::Create

; 199  : 	UpdateToolbarButtons();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateToolbarButtons

; 200  : 
; 201  : 	CRect rClient;

	lea	ecx, DWORD PTR _rClient$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 202  : 	GetClientRect(rClient);

	lea	ecx, DWORD PTR _rClient$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 203  : 	LayoutControls(rClient.Width(), rClient.Height());

	lea	ecx, DWORD PTR _rClient$[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	lea	ecx, DWORD PTR _rClient$[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ; CRulerRichEditCtrl::LayoutControls

; 204  : 	
; 205  : 	m_rtf.Invalidate(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 206  : 
; 207  : 	return 0L;

	xor	eax, eax

; 208  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnThemeCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@OnThemeCha:
	DD	1
	DD	$LN4@OnThemeCha
$LN4@OnThemeCha:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@OnThemeCha
$LN3@OnThemeCha:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?OnThemeChanged@CRulerRichEditCtrl@@IAEJIJ@Z ENDP	; CRulerRichEditCtrl::OnThemeChanged
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CreateRuler@CRulerRichEditCtrl@@IAEHXZ		; CRulerRichEditCtrl::CreateRuler
EXTRN	??0CRect@@QAE@HHHH@Z:PROC			; CRect::CRect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateRuler@CRulerRichEditCtrl@@IAEHXZ
_TEXT	SEGMENT
_rulerRect$ = -52					; size = 16
_rect$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateRuler@CRulerRichEditCtrl@@IAEHXZ PROC		; CRulerRichEditCtrl::CreateRuler, COMDAT
; _this$ = ecx

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 	CRect rect;

	lea	ecx, DWORD PTR _rect$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 213  : 	GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 214  : 
; 215  : 	CRect rulerRect(0, TOOLBAR_HEIGHT, rect.right, TOOLBAR_HEIGHT + RULER_HEIGHT);

	push	53					; 00000035H
	mov	eax, DWORD PTR _rect$[ebp+8]
	push	eax
	push	27					; 0000001bH
	push	0
	lea	ecx, DWORD PTR _rulerRect$[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect

; 216  : 	return m_ruler.Create(rulerRect, this, RULER_CONTROL);

	mov	esi, esp
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rulerRect$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1132]
	mov	eax, DWORD PTR [edx+360]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 217  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateRule
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@CreateRule:
	DD	2
	DD	$LN5@CreateRule
$LN5@CreateRule:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@CreateRule
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN4@CreateRule
$LN4@CreateRule:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN3@CreateRule:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?CreateRuler@CRulerRichEditCtrl@@IAEHXZ ENDP		; CRulerRichEditCtrl::CreateRuler
_TEXT	ENDS
PUBLIC	?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z ; CRulerRichEditCtrl::BuildTabStops
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z
_TEXT	SEGMENT
_t$175879 = -8						; size = 4
_this$ = -4						; size = 4
_para$ = 8						; size = 4
?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z PROC ; CRulerRichEditCtrl::BuildTabStops, COMDAT
; _this$ = ecx

; 220  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 221  : 	para.dwMask = PFM_TABSTOPS;

	mov	eax, DWORD PTR _para$[ebp]
	mov	DWORD PTR [eax+4], 16			; 00000010H

; 222  : 	para.cTabCount = MAX_TAB_STOPS;

	mov	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _para$[ebp]
	mov	WORD PTR [edx+26], cx

; 223  : 
; 224  : 	for(int t = 0; t < MAX_TAB_STOPS ; t++)

	mov	DWORD PTR _t$175879[ebp], 0
	jmp	SHORT $LN3@BuildTabSt
$LN2@BuildTabSt:
	mov	eax, DWORD PTR _t$175879[ebp]
	add	eax, 1
	mov	DWORD PTR _t$175879[ebp], eax
$LN3@BuildTabSt:
	cmp	DWORD PTR _t$175879[ebp], 32		; 00000020H
	jge	SHORT $LN4@BuildTabSt

; 225  : 		para.rgxTabs[ t ] = DEFTABSTOP * (t + 1);

	mov	ecx, DWORD PTR _t$175879[ebp]
	add	ecx, 1
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR _t$175879[ebp]
	mov	eax, DWORD PTR _para$[ebp]
	mov	DWORD PTR [eax+edx*4+28], ecx
	jmp	SHORT $LN2@BuildTabSt
$LN4@BuildTabSt:

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z ENDP ; CRulerRichEditCtrl::BuildTabStops
_TEXT	ENDS
PUBLIC	?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z	; CRulerRichEditCtrl::SetTabStops
PUBLIC	??0ParaFormat@@QAE@K@Z				; ParaFormat::ParaFormat
PUBLIC	__$ArrayPad$
PUBLIC	?CreateRTFControl@CRulerRichEditCtrl@@IAEHH@Z	; CRulerRichEditCtrl::CreateRTFControl
EXTRN	?ModifyStyleEx@CWnd@@QAEHKKI@Z:PROC		; CWnd::ModifyStyleEx
EXTRN	?SetEventMask@CRichEditCtrl@@QAEKK@Z:PROC	; CRichEditCtrl::SetEventMask
EXTRN	?GetEventMask@CRichEditCtrl@@QBEJXZ:PROC	; CRichEditCtrl::GetEventMask
EXTRN	?SendMessageW@CWnd@@QBEJIIJ@Z:PROC		; CWnd::SendMessageW
EXTRN	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAU_paraformat@@@Z:PROC ; CRichEditBaseCtrl::SetParaFormat
EXTRN	?Create@CRichEditBaseCtrl@@QAEHKABUtagRECT@@PAVCWnd@@IK@Z:PROC ; CRichEditBaseCtrl::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateRTFControl@CRulerRichEditCtrl@@IAEHH@Z
_TEXT	SEGMENT
_para$175894 = -228					; size = 156
_style$ = -68						; size = 4
_rtfRect$ = -60						; size = 16
_top$ = -40						; size = 4
_rect$ = -32						; size = 16
_result$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_autohscroll$ = 8					; size = 4
?CreateRTFControl@CRulerRichEditCtrl@@IAEHH@Z PROC	; CRulerRichEditCtrl::CreateRTFControl, COMDAT
; _this$ = ecx

; 229  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 	BOOL result = FALSE;

	mov	DWORD PTR _result$[ebp], 0

; 231  : 
; 232  : 	CRect rect;

	lea	ecx, DWORD PTR _rect$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 233  : 	GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 234  : 
; 235  : 	int top = TOOLBAR_HEIGHT + RULER_HEIGHT;

	mov	DWORD PTR _top$[ebp], 53		; 00000035H

; 236  : 	CRect rtfRect(0, top, rect.right, rect.bottom);

	mov	eax, DWORD PTR _rect$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _top$[ebp]
	push	edx
	push	0
	lea	ecx, DWORD PTR _rtfRect$[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect

; 237  : 	DWORD style = ES_NOHIDESEL | WS_CHILD | WS_VISIBLE | WS_HSCROLL | WS_VSCROLL | ES_WANTRETURN | ES_MULTILINE | WS_TABSTOP;

	mov	DWORD PTR _style$[ebp], 1345392900	; 50311104H

; 238  : 
; 239  : 	if (autohscroll)

	cmp	DWORD PTR _autohscroll$[ebp], 0
	je	SHORT $LN2@CreateRTFC

; 240  : 		style |= ES_AUTOHSCROLL;

	mov	eax, DWORD PTR _style$[ebp]
	or	eax, 128				; 00000080H
	mov	DWORD PTR _style$[ebp], eax
$LN2@CreateRTFC:

; 241  : 
; 242  : 	if (m_rtf.Create(style, rtfRect, this, RTF_CONTROL))

	push	0
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rtfRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _style$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?Create@CRichEditBaseCtrl@@QAEHKABUtagRECT@@PAVCWnd@@IK@Z ; CRichEditBaseCtrl::Create
	test	eax, eax
	je	$LN1@CreateRTFC

; 243  : 	{
; 244  : 		// Setting up default tab stops
; 245  : 		ParaFormat para(PFM_TABSTOPS);

	push	16					; 00000010H
	lea	ecx, DWORD PTR _para$175894[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 246  : 		BuildTabStops(para);

	lea	ecx, DWORD PTR _para$175894[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z ; CRulerRichEditCtrl::BuildTabStops

; 247  : 
; 248  : 		m_rtf.SetParaFormat(para);

	lea	edx, DWORD PTR _para$175894[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAU_paraformat@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 249  : 
; 250  : 		// Setting default character format
; 251  : 		m_rtf.SendMessage(EM_SETCHARFORMAT, 0, (LPARAM)&m_cfDefault);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	push	0
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 252  : 
; 253  : 		// Set the internal tabs array
; 254  : 		SetTabStops((LPLONG) (para.rgxTabs), MAX_TAB_STOPS);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _para$175894[ebp+28]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z ; CRulerRichEditCtrl::SetTabStops

; 255  : 
; 256  : 		m_rtf.SendMessage(EM_SETTYPOGRAPHYOPTIONS, TO_ADVANCEDTYPOGRAPHY, TO_ADVANCEDTYPOGRAPHY);

	push	1
	push	1
	push	1226					; 000004caH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 257  : 		m_rtf.SetEventMask(m_rtf.GetEventMask() | ENM_SELCHANGE | ENM_SCROLL | ENM_CHANGE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetEventMask@CRichEditCtrl@@QBEJXZ	; CRichEditCtrl::GetEventMask
	or	eax, 524288				; 00080000H
	or	eax, 4
	or	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetEventMask@CRichEditCtrl@@QAEKK@Z	; CRichEditCtrl::SetEventMask

; 258  : 		m_rtf.ModifyStyleEx(0, WS_EX_CLIENTEDGE);

	push	0
	push	512					; 00000200H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?ModifyStyleEx@CWnd@@QAEHKKI@Z		; CWnd::ModifyStyleEx

; 259  : 
; 260  : 		result = TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN1@CreateRTFC:

; 261  : 	}
; 262  : 
; 263  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 264  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@CreateRTFC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@CreateRTFC:
	DD	3
	DD	$LN8@CreateRTFC
$LN8@CreateRTFC:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN5@CreateRTFC
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN6@CreateRTFC
	DD	-228					; ffffff1cH
	DD	156					; 0000009cH
	DD	$LN7@CreateRTFC
$LN7@CreateRTFC:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
$LN6@CreateRTFC:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN5@CreateRTFC:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?CreateRTFControl@CRulerRichEditCtrl@@IAEHH@Z ENDP	; CRulerRichEditCtrl::CreateRTFControl
_TEXT	ENDS
PUBLIC	?Reset@ParaFormat@@QAEXK@Z			; ParaFormat::Reset
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerrichedit.h
;	COMDAT ??0ParaFormat@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
??0ParaFormat@@QAE@K@Z PROC				; ParaFormat::ParaFormat, COMDAT
; _this$ = ecx

; 69   : 	ParaFormat(DWORD mask = 0)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 70   : 	{
; 71   : 		Reset(mask);

	mov	eax, DWORD PTR _mask$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@ParaFormat@@QAEXK@Z		; ParaFormat::Reset

; 72   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParaFormat@@QAE@K@Z ENDP				; ParaFormat::ParaFormat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Reset@ParaFormat@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?Reset@ParaFormat@@QAEXK@Z PROC				; ParaFormat::Reset, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		memset(this, 0, sizeof (ParaFormat));

	push	156					; 0000009cH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 77   : 		cbSize = sizeof(ParaFormat);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 156			; 0000009cH

; 78   : 		dwMask = mask;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _mask$[ebp]
	mov	DWORD PTR [edx+4], eax

; 79   : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reset@ParaFormat@@QAEXK@Z ENDP				; ParaFormat::Reset
_TEXT	ENDS
PUBLIC	?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::UpdateEditRect
PUBLIC	__$ArrayPad$
PUBLIC	?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRulerRichEditCtrl::SetRTF
EXTRN	?ParseAndFormatText@CUrlRichEditCtrl@@QAEXH@Z:PROC ; CUrlRichEditCtrl::ParseAndFormatText
EXTRN	??1CHoldRedraw@@UAE@XZ:PROC			; CHoldRedraw::~CHoldRedraw
EXTRN	?SetSel@CRichEditCtrl@@QAEXJJ@Z:PROC		; CRichEditCtrl::SetSel
EXTRN	??0CHoldRedraw@@QAE@PAUHWND__@@K@Z:PROC		; CHoldRedraw::CHoldRedraw
EXTRN	??BCWnd@@QBEPAUHWND__@@XZ:PROC			; CWnd::operator HWND__ *
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ:PROC
EXTRN	?SetRTF@CRichEditBaseCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; CRichEditBaseCtrl::SetRTF
;	COMDAT xdata$x
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
xdata$x	SEGMENT
__unwindtable$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0
__ehfuncinfo$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_cf$175903 = -160					; size = 116
_hr$175902 = -36					; size = 12
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rtf$ = 8						; size = 4
?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; CRulerRichEditCtrl::SetRTF, COMDAT
; _this$ = ecx

; 267  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 268  : 	m_rtf.SetRTF(rtf);

	mov	eax, DWORD PTR _rtf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetRTF@CRichEditBaseCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRichEditBaseCtrl::SetRTF

; 269  : 	
; 270  : 	// reset the formatting if the new content is empty else
; 271  : 	// the previous formatting hangs around
; 272  : 	if (rtf.IsEmpty())

	mov	esi, esp
	mov	ecx, DWORD PTR _rtf$[ebp]
	call	DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@SetRTF

; 273  : 	{
; 274  : 		CHoldRedraw hr(m_rtf);

	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??BCWnd@@QBEPAUHWND__@@XZ		; CWnd::operator HWND__ *
	push	eax
	lea	ecx, DWORD PTR _hr$175902[ebp]
	call	??0CHoldRedraw@@QAE@PAUHWND__@@K@Z	; CHoldRedraw::CHoldRedraw
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 275  : 		CharFormat cf(m_cfDefault);

	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 164				; 000000a4H
	mov	ecx, 29					; 0000001dH
	lea	edi, DWORD PTR _cf$175903[ebp]
	rep movsd

; 276  : 		
; 277  : 		m_rtf.SetSel(0, -1);

	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSel@CRichEditCtrl@@QAEXJJ@Z		; CRichEditCtrl::SetSel

; 278  : 		m_rtf.SendMessage(EM_SETCHARFORMAT, SCF_SELECTION, (LPARAM) &cf);

	lea	edx, DWORD PTR _cf$175903[ebp]
	push	edx
	push	1
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 279  : 		m_rtf.SetSel(-1, 0);

	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSel@CRichEditCtrl@@QAEXJJ@Z		; CRichEditCtrl::SetSel

; 280  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _hr$175902[ebp]
	call	??1CHoldRedraw@@UAE@XZ			; CHoldRedraw::~CHoldRedraw
$LN1@SetRTF:

; 281  : 	UpdateEditRect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateEditRect

; 282  : 
; 283  : 	m_rtf.ParseAndFormatText(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?ParseAndFormatText@CUrlRichEditCtrl@@QAEXH@Z ; CUrlRichEditCtrl::ParseAndFormatText

; 284  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetRTF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@SetRTF:
	DD	2
	DD	$LN8@SetRTF
$LN8@SetRTF:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN5@SetRTF
	DD	-160					; ffffff60H
	DD	116					; 00000074H
	DD	$LN6@SetRTF
$LN6@SetRTF:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
$LN5@SetRTF:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0:
	lea	ecx, DWORD PTR _hr$175902[ebp]
	jmp	??1CHoldRedraw@@UAE@XZ			; CHoldRedraw::~CHoldRedraw
__ehhandler$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetRTF@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; CRulerRichEditCtrl::SetRTF
PUBLIC	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z		; CRulerRichEditCtrl::SetEffect
PUBLIC	?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRulerRichEditCtrl::SetSelectedWebLink
EXTRN	__imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	??1CEnString@@QAE@XZ:PROC			; CEnString::~CEnString
EXTRN	?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z:PROC ; CRichEditCtrl::SetSel
EXTRN	__imp_?GetLength@?$CSimpleStringT@_W$00@ATL@@QBEHXZ:PROC
EXTRN	?ReplaceSel@CRichEditCtrl@@QAEXPB_WH@Z:PROC	; CRichEditCtrl::ReplaceSel
EXTRN	__imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ:PROC
EXTRN	??0CEnString@@QAA@PB_WZZ:PROC			; CEnString::CEnString
EXTRN	?GetTextRange@CRichEditBaseCtrl@@QAE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@ABU_charrange@@@Z:PROC ; CRichEditBaseCtrl::GetTextRange
EXTRN	?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z:PROC ; CRichEditCtrl::GetSel
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_sUrl$175913 = -52					; size = 4
_sText$ = -40						; size = 4
_cr$ = -28						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_sWebLink$ = 8						; size = 4
?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; CRulerRichEditCtrl::SetSelectedWebLink, COMDAT
; _this$ = ecx

; 287  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 288  : 	CHARRANGE cr;
; 289  : 	m_rtf.GetSel(cr);

	lea	eax, DWORD PTR _cr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z ; CRichEditCtrl::GetSel

; 290  : 
; 291  : 	CString sText = m_rtf.GetTextRange(cr);

	lea	ecx, DWORD PTR _cr$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetTextRange@CRichEditBaseCtrl@@QAE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@ABU_charrange@@@Z ; CRichEditBaseCtrl::GetTextRange
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 292  : 
; 293  : 	if (!sText.IsEmpty())

	mov	esi, esp
	lea	ecx, DWORD PTR _sText$[ebp]
	call	DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	$LN1@SetSelecte

; 294  : 	{
; 295  : 		CEnString sUrl(_T("HYPERLINK\"%s\"%s"), sWebLink, sText);

	mov	ecx, DWORD PTR _sText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sWebLink$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG175914
	lea	ecx, DWORD PTR _sUrl$175913[ebp]
	push	ecx
	call	??0CEnString@@QAA@PB_WZZ		; CEnString::CEnString
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 296  : 		m_rtf.ReplaceSel(sUrl, TRUE);

	push	1
	mov	esi, esp
	lea	ecx, DWORD PTR _sUrl$175913[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?ReplaceSel@CRichEditCtrl@@QAEXPB_WH@Z	; CRichEditCtrl::ReplaceSel

; 297  : 
; 298  : 		cr.cpMax = cr.cpMin + sUrl.GetLength();

	mov	esi, esp
	lea	ecx, DWORD PTR _sUrl$175913[ebp]
	call	DWORD PTR __imp_?GetLength@?$CSimpleStringT@_W$00@ATL@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _cr$[ebp]
	mov	DWORD PTR _cr$[ebp+4], eax

; 299  : 		m_rtf.SetSel(cr);

	lea	edx, DWORD PTR _cr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z ; CRichEditCtrl::SetSel

; 300  : 		SetEffect(CFM_PROTECTED | CFM_LINK | CFM_HIDDEN, CFE_PROTECTED | CFE_LINK);

	push	48					; 00000030H
	push	304					; 00000130H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 301  : 
; 302  : 		// hide all but the text
; 303  : 		cr.cpMax -= sText.GetLength();

	mov	esi, esp
	lea	ecx, DWORD PTR _sText$[ebp]
	call	DWORD PTR __imp_?GetLength@?$CSimpleStringT@_W$00@ATL@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _cr$[ebp+4]
	sub	ecx, eax
	mov	DWORD PTR _cr$[ebp+4], ecx

; 304  : 		m_rtf.SetSel(cr);

	lea	edx, DWORD PTR _cr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z ; CRichEditCtrl::SetSel

; 305  : 		SetEffect(CFM_PROTECTED | CFM_LINK | CFM_HIDDEN, CFE_PROTECTED | CFE_LINK | CFE_HIDDEN);

	push	304					; 00000130H
	push	304					; 00000130H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 306  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sUrl$175913[ebp]
	call	??1CEnString@@QAE@XZ			; CEnString::~CEnString
$LN1@SetSelecte:

; 307  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sText$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SetSelecte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@SetSelecte:
	DD	3
	DD	$LN10@SetSelecte
$LN10@SetSelecte:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN6@SetSelecte
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN7@SetSelecte
	DD	-52					; ffffffccH
	DD	4
	DD	$LN8@SetSelecte
$LN8@SetSelecte:
	DB	115					; 00000073H
	DB	85					; 00000055H
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	0
$LN7@SetSelecte:
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN6@SetSelecte:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _sText$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$1:
	lea	ecx, DWORD PTR _sUrl$175913[ebp]
	jmp	??1CEnString@@QAE@XZ			; CEnString::~CEnString
__ehhandler$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetSelectedWebLink@CRulerRichEditCtrl@@QAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; CRulerRichEditCtrl::SetSelectedWebLink
PUBLIC	__$ArrayPad$
EXTRN	?SetRect@CRichEditCtrl@@QAEXPBUtagRECT@@@Z:PROC	; CRichEditCtrl::SetRect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_rc$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::UpdateEditRect, COMDAT
; _this$ = ecx

; 310  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 311  : 	// Set up edit rect margins
; 312  : 	CRect rc;

	lea	ecx, DWORD PTR _rc$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 313  : 	m_rtf.GetClientRect(rc);

	lea	ecx, DWORD PTR _rc$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 314  : 
; 315  : 	rc.top = SCMARGIN;

	mov	DWORD PTR _rc$[ebp+4], 4

; 316  : 	rc.left = SCMARGIN * 2;

	mov	DWORD PTR _rc$[ebp], 8

; 317  : 	rc.right -= SCMARGIN * 2;

	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, 8
	mov	DWORD PTR _rc$[ebp+8], eax

; 318  : 
; 319  : 	m_rtf.SetRect(rc);

	lea	ecx, DWORD PTR _rc$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetRect@CRichEditCtrl@@QAEXPBUtagRECT@@@Z ; CRichEditCtrl::SetRect

; 320  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@UpdateEdit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@UpdateEdit:
	DD	1
	DD	$LN4@UpdateEdit
$LN4@UpdateEdit:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@UpdateEdit
$LN3@UpdateEdit:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::UpdateEditRect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CreateMargins@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::CreateMargins
EXTRN	?SetMargin@CRRECRuler@@QAEXH@Z:PROC		; CRRECRuler::SetMargin
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ClientToScreen
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetWindowRect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateMargins@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_r2$ = -52						; size = 16
_r1$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateMargins@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::CreateMargins, COMDAT
; _this$ = ecx

; 323  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 	UpdateEditRect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateEditRect

; 325  : 
; 326  : 	// Get the diff between the window- and client 
; 327  : 	// rect of the RTF-control. This gives the actual 
; 328  : 	// size of the RTF-control border.
; 329  : 	CRect	r1;

	lea	ecx, DWORD PTR _r1$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 330  : 	CRect	r2;

	lea	ecx, DWORD PTR _r2$[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 331  : 
; 332  : 	m_rtf.GetWindowRect(r1);

	lea	ecx, DWORD PTR _r1$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetWindowRect

; 333  : 	m_rtf.GetClientRect(r2);

	lea	ecx, DWORD PTR _r2$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 334  : 	m_rtf.ClientToScreen(r2);

	lea	ecx, DWORD PTR _r2$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 335  : 
; 336  : 	// Create the margin for the toolbar 
; 337  : 	// controls and the ruler.
; 338  : 	m_margin = SCMARGIN * 2 + r2.left - r1.left;

	mov	eax, DWORD PTR _r2$[ebp]
	add	eax, 8
	sub	eax, DWORD PTR _r1$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+148], eax

; 339  : 	m_ruler.SetMargin(m_margin);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?SetMargin@CRRECRuler@@QAEXH@Z		; CRRECRuler::SetMargin

; 340  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateMarg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@CreateMarg:
	DD	2
	DD	$LN5@CreateMarg
$LN5@CreateMarg:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@CreateMarg
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN4@CreateMarg
$LN4@CreateMarg:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN3@CreateMarg:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
?CreateMargins@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::CreateMargins
_TEXT	ENDS
PUBLIC	?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z	; CRulerRichEditCtrl::SetReadOnly
PUBLIC	?GetReadOnly@CRulerRichEditCtrl@@QBEHXZ		; CRulerRichEditCtrl::GetReadOnly
PUBLIC	__$ArrayPad$
EXTRN	??1CClientDC@@UAE@XZ:PROC			; CClientDC::~CClientDC
EXTRN	?GetDeviceCaps@CDC@@QBEHH@Z:PROC		; CDC::GetDeviceCaps
EXTRN	??0CClientDC@@QAE@PAVCWnd@@@Z:PROC		; CClientDC::CClientDC
EXTRN	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTW@@@Z:PROC ; CWnd::OnCreate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z$0
__ehfuncinfo$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z
_TEXT	SEGMENT
$T177790 = -84						; size = 4
$T177789 = -80						; size = 4
_rClient$175932 = -72					; size = 16
_autohscroll$ = -52					; size = 4
_dc$ = -44						; size = 20
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z PROC ; CRulerRichEditCtrl::OnCreate, COMDAT
; _this$ = ecx

; 346  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 	if (CWnd::OnCreate(lpCreateStruct) == -1)

	mov	eax, DWORD PTR _lpCreateStruct$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTW@@@Z ; CWnd::OnCreate
	cmp	eax, -1
	jne	SHORT $LN2@OnCreate

; 348  : 		return -1;

	or	eax, -1
	jmp	$LN3@OnCreate
$LN2@OnCreate:

; 349  : 
; 350  : 	// Save screen resolution for later on.
; 351  : 	CClientDC dc(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dc$[ebp]
	call	??0CClientDC@@QAE@PAVCWnd@@@Z		; CClientDC::CClientDC
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 352  : 	m_physicalInch = dc.GetDeviceCaps(LOGPIXELSX);

	push	88					; 00000058H
	lea	ecx, DWORD PTR _dc$[ebp]
	call	?GetDeviceCaps@CDC@@QBEHH@Z		; CDC::GetDeviceCaps
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], eax

; 353  : 
; 354  : 	// Create sub-controls
; 355  : 	BOOL autohscroll = TRUE;

	mov	DWORD PTR _autohscroll$[ebp], 1

; 356  : 
; 357  : 	if (CreateRTFControl(autohscroll) && CreateToolbar() && CreateRuler())

	mov	eax, DWORD PTR _autohscroll$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRTFControl@CRulerRichEditCtrl@@IAEHH@Z ; CRulerRichEditCtrl::CreateRTFControl
	test	eax, eax
	je	$LN1@OnCreate
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateToolbar@CRulerRichEditCtrl@@IAEHXZ ; CRulerRichEditCtrl::CreateToolbar
	test	eax, eax
	je	SHORT $LN1@OnCreate
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRuler@CRulerRichEditCtrl@@IAEHXZ	; CRulerRichEditCtrl::CreateRuler
	test	eax, eax
	je	SHORT $LN1@OnCreate

; 358  : 	{
; 359  : 		CreateMargins();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateMargins@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::CreateMargins

; 360  : 		SetReadOnly(GetReadOnly()); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReadOnly@CRulerRichEditCtrl@@QBEHXZ	; CRulerRichEditCtrl::GetReadOnly
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z ; CRulerRichEditCtrl::SetReadOnly

; 361  : 		UpdateToolbarButtons();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateToolbarButtons

; 362  : 
; 363  : 		CRect rClient;

	lea	ecx, DWORD PTR _rClient$175932[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 364  : 		GetClientRect(rClient);

	lea	ecx, DWORD PTR _rClient$175932[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 365  : 
; 366  : 		LayoutControls(rClient.Width(), rClient.Height());

	lea	ecx, DWORD PTR _rClient$175932[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	lea	ecx, DWORD PTR _rClient$175932[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ; CRulerRichEditCtrl::LayoutControls

; 367  : 
; 368  : 		return 0;

	mov	DWORD PTR $T177789[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dc$[ebp]
	call	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
	mov	eax, DWORD PTR $T177789[ebp]
	jmp	SHORT $LN3@OnCreate
$LN1@OnCreate:

; 369  : 	}
; 370  : 
; 371  : 	return -1;

	mov	DWORD PTR $T177790[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dc$[ebp]
	call	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
	mov	eax, DWORD PTR $T177790[ebp]
$LN3@OnCreate:

; 372  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@OnCreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@OnCreate:
	DD	2
	DD	$LN9@OnCreate
$LN9@OnCreate:
	DD	-44					; ffffffd4H
	DD	20					; 00000014H
	DD	$LN6@OnCreate
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN7@OnCreate
$LN7@OnCreate:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN6@OnCreate:
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z$0:
	lea	ecx, DWORD PTR _dc$[ebp]
	jmp	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
__ehhandler$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnCreate@CRulerRichEditCtrl@@IAEHPAUtagCREATESTRUCTW@@@Z ENDP ; CRulerRichEditCtrl::OnCreate
EXTRN	?UpdateWindow@CWnd@@QAEXXZ:PROC			; CWnd::UpdateWindow
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEnHScroll@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEnHScroll@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEnHScroll, COMDAT
; _this$ = ecx

; 375  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 376  : 	m_ruler.Invalidate(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 377  : 	m_ruler.UpdateWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow

; 378  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEnHScroll@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEnHScroll
_TEXT	ENDS
PUBLIC	?UpdateTabStops@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::UpdateTabStops
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEnSelChange@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_crSel$ = -16						; size = 8
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnEnSelChange@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CRulerRichEditCtrl::OnEnSelChange, COMDAT
; _this$ = ecx

; 381  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 382  : 	CHARRANGE crSel;
; 383  : 	m_rtf.GetSel(crSel);

	lea	eax, DWORD PTR _crSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z ; CRichEditCtrl::GetSel

; 384  : 
; 385  : 	if (m_crSel.cpMin != crSel.cpMin || m_crSel.cpMax != crSel.cpMax)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+280]
	cmp	edx, DWORD PTR _crSel$[ebp]
	jne	SHORT $LN1@OnEnSelCha
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	cmp	ecx, DWORD PTR _crSel$[ebp+4]
	je	SHORT $LN2@OnEnSelCha
$LN1@OnEnSelCha:

; 386  : 	{
; 387  : 		// Update the toolbar
; 388  : 		UpdateToolbarButtons();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateToolbarButtons

; 389  : 		
; 390  : 		// Update ruler
; 391  : 		UpdateTabStops();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateTabStops@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateTabStops

; 392  : 		m_ruler.Invalidate(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 393  : 		m_ruler.UpdateWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow

; 394  : 
; 395  : 		m_crSel = crSel;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _crSel$[ebp]
	mov	DWORD PTR [edx+280], eax
	mov	ecx, DWORD PTR _crSel$[ebp+4]
	mov	DWORD PTR [edx+284], ecx
$LN2@OnEnSelCha:

; 396  : 	}
; 397  : 
; 398  : 	*pResult = 0;

	mov	edx, DWORD PTR _pResult$[ebp]
	mov	DWORD PTR [edx], 0

; 399  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@OnEnSelCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@OnEnSelCha:
	DD	1
	DD	$LN6@OnEnSelCha
$LN6@OnEnSelCha:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN5@OnEnSelCha
$LN5@OnEnSelCha:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
?OnEnSelChange@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CRulerRichEditCtrl::OnEnSelChange
_TEXT	ENDS
EXTRN	?SetFontSize@CRRECToolBar@@QAEHH@Z:PROC		; CRRECToolBar::SetFontSize
EXTRN	__imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; CRRECToolBar::SetFontName
EXTRN	?GetFontNameAndPointSize@GraphicsMisc@@YAHPAUHFONT__@@AAV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; GraphicsMisc::GetFontNameAndPointSize
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z$0
__ehfuncinfo$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
$T177811 = -36						; size = 4
_nPoint$ = -32						; size = 4
_sFace$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wp$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z PROC		; CRulerRichEditCtrl::OnSetFont, COMDAT
; _this$ = ecx

; 402  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 403  : 	// reverse engineer the hFont and use the results
; 404  : 	// for the rtf defaults
; 405  : 	CString sFace;

	mov	esi, esp
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 406  : 	int nPoint = GraphicsMisc::GetFontNameAndPointSize((HFONT)wp, sFace);

	lea	eax, DWORD PTR _sFace$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wp$[ebp]
	push	ecx
	call	?GetFontNameAndPointSize@GraphicsMisc@@YAHPAUHFONT__@@AAV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; GraphicsMisc::GetFontNameAndPointSize
	add	esp, 8
	mov	DWORD PTR _nPoint$[ebp], eax

; 407  : 
; 408  : 	if (nPoint && !sFace.IsEmpty())

	cmp	DWORD PTR _nPoint$[ebp], 0
	je	$LN2@OnSetFont
	mov	esi, esp
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	$LN2@OnSetFont

; 409  : 	{
; 410  : 		// lets have a backup plan
; 411  : 		if (!m_toolbar.SetFontName(sFace))

	lea	eax, DWORD PTR _sFace$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRRECToolBar::SetFontName
	test	eax, eax
	jne	SHORT $LN1@OnSetFont

; 412  : 		{
; 413  : 			sFace = "MS Sans Serif";

	mov	esi, esp
	push	OFFSET $SG175956
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 414  : 			nPoint = 9;

	mov	DWORD PTR _nPoint$[ebp], 9

; 415  : 			m_toolbar.SetFontName(sFace);

	lea	ecx, DWORD PTR _sFace$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRRECToolBar::SetFontName
$LN1@OnSetFont:

; 416  : 		}
; 417  : 
; 418  : 		m_toolbar.SetFontSize(nPoint);

	mov	edx, DWORD PTR _nPoint$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?SetFontSize@CRRECToolBar@@QAEHH@Z	; CRRECToolBar::SetFontSize

; 419  : 
; 420  : 		// update default char format
; 421  : 		lstrcpy(m_cfDefault.szFaceName, sFace);

	mov	esi, esp
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 190				; 000000beH
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 422  : 		m_cfDefault.yHeight = nPoint * 20;

	mov	ecx, DWORD PTR _nPoint$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+176], ecx

; 423  : 		
; 424  : 		m_rtf.SendMessage(EM_SETCHARFORMAT, 0, (LPARAM)&m_cfDefault);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	push	0
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW
$LN2@OnSetFont:

; 425  : 	}
; 426  : 	// else eat it
; 427  : 
; 428  : 	return 0L;

	mov	DWORD PTR $T177811[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T177811[ebp]

; 429  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@OnSetFont
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@OnSetFont:
	DD	1
	DD	$LN8@OnSetFont
$LN8@OnSetFont:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@OnSetFont
$LN6@OnSetFont:
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _sFace$[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnSetFont@CRulerRichEditCtrl@@IAEJIJ@Z ENDP		; CRulerRichEditCtrl::OnSetFont
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEraseBkgnd@CRulerRichEditCtrl@@IAEHPAVCDC@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnEraseBkgnd@CRulerRichEditCtrl@@IAEHPAVCDC@@@Z PROC	; CRulerRichEditCtrl::OnEraseBkgnd, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 433  : 	return TRUE;

	mov	eax, 1

; 434  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnEraseBkgnd@CRulerRichEditCtrl@@IAEHPAVCDC@@@Z ENDP	; CRulerRichEditCtrl::OnEraseBkgnd
_TEXT	ENDS
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnNotify@CRulerRichEditCtrl@@MAEHIJPAJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
_pResult$ = 16						; size = 4
?OnNotify@CRulerRichEditCtrl@@MAEHIJPAJ@Z PROC		; CRulerRichEditCtrl::OnNotify, COMDAT
; _this$ = ecx

; 437  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 438  : 	return CWnd::OnNotify(wParam, lParam, pResult);

	mov	eax, DWORD PTR _pResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnNotify@CWnd@@MAEHIJPAJ@Z		; CWnd::OnNotify

; 439  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnNotify@CRulerRichEditCtrl@@MAEHIJPAJ@Z ENDP		; CRulerRichEditCtrl::OnNotify
_TEXT	ENDS
EXTRN	?OnSize@CWnd@@IAEXIHH@Z:PROC			; CWnd::OnSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSize@CRulerRichEditCtrl@@IAEXIHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CRulerRichEditCtrl@@IAEXIHH@Z PROC		; CRulerRichEditCtrl::OnSize, COMDAT
; _this$ = ecx

; 442  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 443  : 	CWnd::OnSize(nType, cx, cy);

	mov	eax, DWORD PTR _cy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSize@CWnd@@IAEXIHH@Z			; CWnd::OnSize

; 444  : 	
; 445  : 	if (m_rtf.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN2@OnSize

; 446  : 	{
; 447  : 		UpdateEditRect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateEditRect@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateEditRect

; 448  : 		LayoutControls(cx, cy);

	mov	ecx, DWORD PTR _cy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ; CRulerRichEditCtrl::LayoutControls
$LN2@OnSize:

; 449  : 	}
; 450  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnSize@CRulerRichEditCtrl@@IAEXIHH@Z ENDP		; CRulerRichEditCtrl::OnSize
_TEXT	ENDS
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:PROC			; CWnd::SetFocus
EXTRN	?OnSetFocus@CWnd@@IAEXPAV1@@Z:PROC		; CWnd::OnSetFocus
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSetFocus@CRulerRichEditCtrl@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pOldWnd$ = 8						; size = 4
?OnSetFocus@CRulerRichEditCtrl@@IAEXPAVCWnd@@@Z PROC	; CRulerRichEditCtrl::OnSetFocus, COMDAT
; _this$ = ecx

; 453  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 454  : 	CWnd::OnSetFocus(pOldWnd);

	mov	eax, DWORD PTR _pOldWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSetFocus@CWnd@@IAEXPAV1@@Z		; CWnd::OnSetFocus

; 455  : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 456  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnSetFocus@CRulerRichEditCtrl@@IAEXPAVCWnd@@@Z ENDP	; CRulerRichEditCtrl::OnSetFocus
_TEXT	ENDS
EXTRN	?GetScrollPos@CWnd@@QBEHH@Z:PROC		; CWnd::GetScrollPos
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnGetScrollPos@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnGetScrollPos@CRulerRichEditCtrl@@IAEJIJ@Z PROC	; CRulerRichEditCtrl::OnGetScrollPos, COMDAT
; _this$ = ecx

; 459  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 460  : 	return m_rtf.GetScrollPos(SB_HORZ);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetScrollPos@CWnd@@QBEHH@Z		; CWnd::GetScrollPos

; 461  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnGetScrollPos@CRulerRichEditCtrl@@IAEJIJ@Z ENDP	; CRulerRichEditCtrl::OnGetScrollPos
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4096800000000000
PUBLIC	__$ArrayPad$
EXTRN	?SetTabStops@CRRECRuler@@QAEXABVCDWordArray@@@Z:PROC ; CRRECRuler::SetTabStops
EXTRN	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z:PROC ; CRichEditBaseCtrl::GetParaFormat
EXTRN	?InflateRect@CRect@@QAEXHH@Z:PROC		; CRect::InflateRect
EXTRN	?GetUpperBound@CDWordArray@@QBEHXZ:PROC		; CDWordArray::GetUpperBound
EXTRN	?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z:PROC ; CDC::SelectStockObject
EXTRN	?LineTo@CDC@@QAEHHH@Z:PROC			; CDC::LineTo
EXTRN	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z:PROC		; CDC::MoveTo
EXTRN	?SetROP2@CDC@@QAEHH@Z:PROC			; CDC::SetROP2
EXTRN	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?PtInRect@CRect@@QBEHUtagPOINT@@@Z:PROC		; CRect::PtInRect
EXTRN	?SetRect@CRect@@QAEXHHHH@Z:PROC			; CRect::SetRect
EXTRN	??ACDWordArray@@QAEAAKH@Z:PROC			; CDWordArray::operator[]
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@4096800000000000
CONST	SEGMENT
__real@4096800000000000 DQ 04096800000000000r	; 1440
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$2
__ehfuncinfo$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
tv349 = -496						; size = 4
tv344 = -492						; size = 4
tv327 = -488						; size = 4
tv66 = -484						; size = 4
$T177845 = -480						; size = 8
$T177844 = -472						; size = 8
$T177837 = -464						; size = 8
$T177836 = -456						; size = 8
$T177835 = -448						; size = 8
_tabpos$176034 = -440					; size = 4
_twip$176032 = -436					; size = 8
_para$176031 = -424					; size = 156
_pos$176030 = -264					; size = 4
_dc$176028 = -256					; size = 20
_ruler$176027 = -228					; size = 16
_rect$176026 = -204					; size = 16
_max$176021 = -184					; size = 4
_min$176019 = -180					; size = 4
_pos$176018 = -176					; size = 4
_dc$176016 = -168					; size = 20
_rect$176015 = -140					; size = 16
_dc$176011 = -116					; size = 20
_rect$176010 = -88					; size = 16
_x$176006 = -68						; size = 4
_t$176002 = -64						; size = 4
_y$176001 = -60						; size = 4
_hitRect$176000 = -52					; size = 16
_pos$175999 = -32					; size = 4
_toolbarHeight$ = -28					; size = 4
_point$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_mode$ = 8						; size = 4
_pt$ = 12						; size = 4
?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z PROC		; CRulerRichEditCtrl::OnTrackRuler, COMDAT
; _this$ = ecx

; 464  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 484				; 000001e4H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 465  : 	CPoint* point = (CPoint*) pt;

	mov	eax, DWORD PTR _pt$[ebp]
	mov	DWORD PTR _point$[ebp], eax

; 466  : 	int toolbarHeight = 0;

	mov	DWORD PTR _toolbarHeight$[ebp], 0

; 467  : 	if (m_showToolbar)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+288], 0
	je	SHORT $LN15@OnTrackRul

; 468  : 		toolbarHeight = TOOLBAR_HEIGHT;

	mov	DWORD PTR _toolbarHeight$[ebp], 27	; 0000001bH
$LN15@OnTrackRul:

; 469  : 
; 470  : 	switch(mode)

	mov	edx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR tv66[ebp], edx
	cmp	DWORD PTR tv66[ebp], 0
	je	$LN2@OnTrackRul
	cmp	DWORD PTR tv66[ebp], 1
	je	SHORT $LN12@OnTrackRul
	cmp	DWORD PTR tv66[ebp], 2
	je	$LN6@OnTrackRul
	jmp	$LN13@OnTrackRul
$LN12@OnTrackRul:

; 471  : 	{
; 472  : 		case DOWN:
; 473  : 			// The left mouse button is clicked
; 474  : 			{
; 475  : 				// Check if we clicked on a tab-marker.
; 476  : 				int pos = m_rtf.GetScrollPos(SB_HORZ);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetScrollPos@CWnd@@QBEHH@Z		; CWnd::GetScrollPos
	mov	DWORD PTR _pos$175999[ebp], eax

; 477  : 				m_movingtab = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], -1

; 478  : 				CRect hitRect;

	lea	ecx, DWORD PTR _hitRect$176000[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 479  : 				int y = RULER_HEIGHT - 9;

	mov	DWORD PTR _y$176001[ebp], 17		; 00000011H

; 480  : 				for(int t = 0 ; t < MAX_TAB_STOPS ; t++)

	mov	DWORD PTR _t$176002[ebp], 0
	jmp	SHORT $LN11@OnTrackRul
$LN10@OnTrackRul:
	mov	ecx, DWORD PTR _t$176002[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$176002[ebp], ecx
$LN11@OnTrackRul:
	cmp	DWORD PTR _t$176002[ebp], 32		; 00000020H
	jge	$LN9@OnTrackRul

; 481  : 				{
; 482  : 					int x = m_tabs[ t ] + m_margin - pos;

	mov	edx, DWORD PTR _t$176002[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+148]
	sub	eax, DWORD PTR _pos$175999[ebp]
	mov	DWORD PTR _x$176006[ebp], eax

; 483  : 					hitRect.SetRect(x - 2, y - 1, x + 3, y + 3);

	mov	edx, DWORD PTR _y$176001[ebp]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _x$176006[ebp]
	add	eax, 3
	push	eax
	mov	ecx, DWORD PTR _y$176001[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x$176006[ebp]
	sub	edx, 2
	push	edx
	lea	ecx, DWORD PTR _hitRect$176000[ebp]
	call	?SetRect@CRect@@QAEXHHHH@Z		; CRect::SetRect

; 484  : 					if (hitRect.PtInRect(*point))

	mov	eax, DWORD PTR _point$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T177835[ebp], ecx
	mov	DWORD PTR $T177835[ebp+4], edx
	mov	eax, DWORD PTR $T177835[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T177835[ebp]
	push	ecx
	lea	ecx, DWORD PTR _hitRect$176000[ebp]
	call	?PtInRect@CRect@@QBEHUtagPOINT@@@Z	; CRect::PtInRect
	test	eax, eax
	je	SHORT $LN8@OnTrackRul

; 485  : 					{
; 486  : 						// Yes, we did.
; 487  : 						m_movingtab = t;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$176002[ebp]
	mov	DWORD PTR [edx+156], eax

; 488  : 
; 489  : 						// Calc offset, as the hit area is wider than
; 490  : 						// the 1 pixel tab line
; 491  : 						m_offset = point->x - (m_tabs[ t ] + m_margin - pos);

	mov	ecx, DWORD PTR _t$176002[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+148]
	sub	edx, DWORD PTR _pos$175999[ebp]
	mov	ecx, DWORD PTR _point$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], eax
$LN8@OnTrackRul:

; 492  : 					}
; 493  : 				}

	jmp	$LN10@OnTrackRul
$LN9@OnTrackRul:

; 494  : 
; 495  : 				if (m_movingtab != -1)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+156], -1
	je	$LN7@OnTrackRul

; 496  : 				{
; 497  : 
; 498  : 					// We did click in a tab marker.
; 499  : 					// Start dragging
; 500  : 
; 501  : 					// Find initial ruler position
; 502  : 					m_rulerPosition = point->x - m_offset;

	mov	eax, DWORD PTR _point$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+160]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], edx

; 503  : 					CRect rect;

	lea	ecx, DWORD PTR _rect$176010[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 504  : 					GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$176010[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 505  : 
; 506  : 					// Draw a new ruler line
; 507  : 					CClientDC dc(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	??0CClientDC@@QAE@PAVCWnd@@@Z		; CClientDC::CClientDC
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 508  : 					dc.SelectObject(&m_pen);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 120				; 00000078H
	push	edx
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z	; CDC::SelectObject

; 509  : 					dc.SetROP2(R2_XORPEN);

	push	7
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	?SetROP2@CDC@@QAEHH@Z			; CDC::SetROP2

; 510  : 
; 511  : 					dc.MoveTo(m_rulerPosition, toolbarHeight + 3);

	mov	eax, DWORD PTR _toolbarHeight$[ebp]
	add	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	lea	eax, DWORD PTR $T177836[ebp]
	push	eax
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z		; CDC::MoveTo

; 512  : 					dc.LineTo(m_rulerPosition, rect.Height());

	lea	ecx, DWORD PTR _rect$176010[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	?LineTo@CDC@@QAEHHH@Z			; CDC::LineTo

; 513  : 
; 514  : 					dc.SelectStockObject(BLACK_PEN);

	push	7
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z ; CDC::SelectStockObject

; 515  : 
; 516  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dc$176011[ebp]
	call	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
$LN7@OnTrackRul:

; 517  : 			}
; 518  : 			break;

	jmp	$LN13@OnTrackRul
$LN6@OnTrackRul:

; 519  : 
; 520  : 		case MOVE:
; 521  : 			// The mouse is moved
; 522  : 			if (m_movingtab != -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+156], -1
	je	$LN5@OnTrackRul

; 523  : 			{
; 524  : 				CRect rect;

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 525  : 				GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 526  : 
; 527  : 				CClientDC dc(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	??0CClientDC@@QAE@PAVCWnd@@@Z		; CClientDC::CClientDC
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 528  : 				
; 529  : 				// Erase previous line
; 530  : 				dc.SelectObject(&m_pen);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 120				; 00000078H
	push	edx
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z	; CDC::SelectObject

; 531  : 				dc.SetROP2(R2_XORPEN);

	push	7
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?SetROP2@CDC@@QAEHH@Z			; CDC::SetROP2

; 532  : 				
; 533  : 				dc.MoveTo(m_rulerPosition, toolbarHeight + 3);

	mov	eax, DWORD PTR _toolbarHeight$[ebp]
	add	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	lea	eax, DWORD PTR $T177837[ebp]
	push	eax
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z		; CDC::MoveTo

; 534  : 				dc.LineTo(m_rulerPosition, rect.Height());

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?LineTo@CDC@@QAEHHH@Z			; CDC::LineTo

; 535  : 				
; 536  : 				// Set up new line
; 537  : 				// Calc min and max. We can not place this marker 
; 538  : 				// before the previous or after the next. Neither 
; 539  : 				// can we move the marker outside the ruler.
; 540  : 				int pos = m_rtf.GetScrollPos(SB_HORZ);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetScrollPos@CWnd@@QBEHH@Z		; CWnd::GetScrollPos
	mov	DWORD PTR _pos$176018[ebp], eax

; 541  : 				int min = m_margin + m_offset;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+160]
	mov	DWORD PTR _min$176019[ebp], ecx

; 542  : 				if (m_movingtab > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+156], 0
	jle	SHORT $LN4@OnTrackRul

; 543  : 					min = (m_tabs[ m_movingtab - 1 ] + m_margin - pos) + 3 + m_offset;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+148]
	sub	eax, DWORD PTR _pos$176018[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	lea	edx, DWORD PTR [eax+ecx+3]
	mov	DWORD PTR _min$176019[ebp], edx
$LN4@OnTrackRul:

; 544  : 				
; 545  : 				int max = rect.Width() - 5 + m_offset;

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	lea	eax, DWORD PTR [eax+edx-5]
	mov	DWORD PTR _max$176021[ebp], eax

; 546  : 				if (m_movingtab < m_tabs.GetUpperBound())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?GetUpperBound@CDWordArray@@QBEHXZ	; CDWordArray::GetUpperBound
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+156], eax
	jge	SHORT $LN3@OnTrackRul

; 547  : 					max = (m_tabs[ m_movingtab + 1 ] + m_margin - pos) - 3 + m_offset;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+148]
	sub	ecx, DWORD PTR _pos$176018[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+160]
	lea	eax, DWORD PTR [ecx+edx-3]
	mov	DWORD PTR _max$176021[ebp], eax
$LN3@OnTrackRul:

; 548  : 				max = min(max, rect.Width() - 5 + m_offset);

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	lea	eax, DWORD PTR [eax+edx-5]
	cmp	DWORD PTR _max$176021[ebp], eax
	jge	SHORT $LN18@OnTrackRul
	mov	ecx, DWORD PTR _max$176021[ebp]
	mov	DWORD PTR tv327[ebp], ecx
	jmp	SHORT $LN19@OnTrackRul
$LN18@OnTrackRul:
	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	lea	edx, DWORD PTR [eax+ecx-5]
	mov	DWORD PTR tv327[ebp], edx
$LN19@OnTrackRul:
	mov	eax, DWORD PTR tv327[ebp]
	mov	DWORD PTR _max$176021[ebp], eax

; 549  : 				
; 550  : 				// Set new positions
; 551  : 				m_rulerPosition = max(min, point->x - m_offset);

	mov	ecx, DWORD PTR _point$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx+160]
	cmp	DWORD PTR _min$176019[ebp], eax
	jle	SHORT $LN20@OnTrackRul
	mov	ecx, DWORD PTR _min$176019[ebp]
	mov	DWORD PTR tv344[ebp], ecx
	jmp	SHORT $LN21@OnTrackRul
$LN20@OnTrackRul:
	mov	edx, DWORD PTR _point$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR tv344[ebp], ecx
$LN21@OnTrackRul:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv344[ebp]
	mov	DWORD PTR [edx+116], eax

; 552  : 				m_rulerPosition = min(m_rulerPosition, max);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	cmp	edx, DWORD PTR _max$176021[ebp]
	jge	SHORT $LN22@OnTrackRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR tv349[ebp], ecx
	jmp	SHORT $LN23@OnTrackRul
$LN22@OnTrackRul:
	mov	edx, DWORD PTR _max$176021[ebp]
	mov	DWORD PTR tv349[ebp], edx
$LN23@OnTrackRul:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv349[ebp]
	mov	DWORD PTR [eax+116], ecx

; 553  : 				
; 554  : 				// Draw the new line
; 555  : 				dc.MoveTo(m_rulerPosition, toolbarHeight + 3);

	mov	edx, DWORD PTR _toolbarHeight$[ebp]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	lea	edx, DWORD PTR $T177844[ebp]
	push	edx
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z		; CDC::MoveTo

; 556  : 				dc.LineTo(m_rulerPosition, rect.Height());

	lea	ecx, DWORD PTR _rect$176015[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?LineTo@CDC@@QAEHHH@Z			; CDC::LineTo

; 557  : 				
; 558  : 				dc.SelectStockObject(BLACK_PEN);

	push	7
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z ; CDC::SelectStockObject

; 559  : 				
; 560  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dc$176016[ebp]
	call	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
$LN5@OnTrackRul:

; 561  : 			break;

	jmp	$LN13@OnTrackRul
$LN2@OnTrackRul:

; 562  : 
; 563  : 		case UP:
; 564  : 			// The mouse button is released
; 565  : 			if (m_movingtab != -1)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+156], -1
	je	$LN1@OnTrackRul

; 566  : 			{
; 567  : 				// Erase previous line
; 568  : 				CRect rect, ruler;

	lea	ecx, DWORD PTR _rect$176026[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect
	lea	ecx, DWORD PTR _ruler$176027[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 569  : 				GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$176026[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 570  : 
; 571  : 				CClientDC dc(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	??0CClientDC@@QAE@PAVCWnd@@@Z		; CClientDC::CClientDC
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 572  : 				dc.SelectObject(&m_pen);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	push	ecx
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z	; CDC::SelectObject

; 573  : 				dc.SetROP2(R2_XORPEN);

	push	7
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	?SetROP2@CDC@@QAEHH@Z			; CDC::SetROP2

; 574  : 				
; 575  : 				dc.MoveTo(m_rulerPosition, toolbarHeight + 3);

	mov	edx, DWORD PTR _toolbarHeight$[ebp]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	lea	edx, DWORD PTR $T177845[ebp]
	push	edx
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z		; CDC::MoveTo

; 576  : 				dc.LineTo(m_rulerPosition, rect.Height());

	lea	ecx, DWORD PTR _rect$176026[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	?LineTo@CDC@@QAEHHH@Z			; CDC::LineTo

; 577  : 
; 578  : 				// if the drop is ouside the ruler then delete the tab
; 579  : 				m_ruler.GetClientRect(ruler);

	lea	ecx, DWORD PTR _ruler$176027[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 580  : 				ruler.InflateRect(0, 10);

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _ruler$176027[ebp]
	call	?InflateRect@CRect@@QAEXHH@Z		; CRect::InflateRect

; 581  : 				
; 582  : 				//if (ruler.PtInRect(point))
; 583  : 
; 584  : 
; 585  : 
; 586  : 				// Set new value for tab position
; 587  : 				int pos = m_rtf.GetScrollPos(SB_HORZ);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetScrollPos@CWnd@@QBEHH@Z		; CWnd::GetScrollPos
	mov	DWORD PTR _pos$176030[ebp], eax

; 588  : 				m_tabs[ m_movingtab ] = m_rulerPosition - m_margin + pos - m_offset;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+116]
	sub	esi, DWORD PTR [eax+148]
	add	esi, DWORD PTR _pos$176030[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	sub	esi, DWORD PTR [ecx+160]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	DWORD PTR [eax], esi

; 589  : 
; 590  : 				// Get the current tabstops, as we
; 591  : 				// must set all tabs in one operation
; 592  : 				ParaFormat para(PFM_TABSTOPS);

	push	16					; 00000010H
	lea	ecx, DWORD PTR _para$176031[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 593  : 				para.cTabCount = MAX_TAB_STOPS;

	mov	ecx, 32					; 00000020H
	mov	WORD PTR _para$176031[ebp+26], cx

; 594  : 				m_rtf.GetParaFormat(para);

	lea	edx, DWORD PTR _para$176031[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 595  : 
; 596  : 				// Convert current position to twips
; 597  : 				double twip = (double)m_physicalInch / 1440;

	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+152]
	fdiv	QWORD PTR __real@4096800000000000
	fstp	QWORD PTR _twip$176032[ebp]

; 598  : 				int tabpos = m_tabs[ m_movingtab ];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??ACDWordArray@@QAEAAKH@Z		; CDWordArray::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _tabpos$176034[ebp], eax

; 599  : 				tabpos = (int) ((double) tabpos / twip +.5);

	fild	DWORD PTR _tabpos$176034[ebp]
	fdiv	QWORD PTR _twip$176032[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR _tabpos$176034[ebp], eax

; 600  : 				para.rgxTabs[ m_movingtab ] = tabpos; 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	eax, DWORD PTR _tabpos$176034[ebp]
	mov	DWORD PTR _para$176031[ebp+edx*4+28], eax

; 601  : 
; 602  : 				// Set tabs to control
; 603  : 				m_rtf.SetParaFormat(para);

	lea	ecx, DWORD PTR _para$176031[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAU_paraformat@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 604  : 
; 605  : 				// Update the ruler
; 606  : 				m_ruler.SetTabStops(m_tabs);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 128				; 00000080H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?SetTabStops@CRRECRuler@@QAEXABVCDWordArray@@@Z ; CRRECRuler::SetTabStops

; 607  : 
; 608  : 				m_movingtab = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], -1

; 609  : 				m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 610  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dc$176028[ebp]
	call	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
$LN1@OnTrackRul:
$LN13@OnTrackRul:

; 611  : 			break;
; 612  : 	}
; 613  : 
; 614  : 	return 0;

	xor	eax, eax

; 615  : 
; 616  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN38@OnTrackRul
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN38@OnTrackRul:
	DD	9
	DD	$LN37@OnTrackRul
$LN37@OnTrackRul:
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN27@OnTrackRul
	DD	-88					; ffffffa8H
	DD	16					; 00000010H
	DD	$LN28@OnTrackRul
	DD	-116					; ffffff8cH
	DD	20					; 00000014H
	DD	$LN29@OnTrackRul
	DD	-140					; ffffff74H
	DD	16					; 00000010H
	DD	$LN30@OnTrackRul
	DD	-168					; ffffff58H
	DD	20					; 00000014H
	DD	$LN31@OnTrackRul
	DD	-204					; ffffff34H
	DD	16					; 00000010H
	DD	$LN32@OnTrackRul
	DD	-228					; ffffff1cH
	DD	16					; 00000010H
	DD	$LN33@OnTrackRul
	DD	-256					; ffffff00H
	DD	20					; 00000014H
	DD	$LN34@OnTrackRul
	DD	-424					; fffffe58H
	DD	156					; 0000009cH
	DD	$LN35@OnTrackRul
$LN35@OnTrackRul:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
$LN34@OnTrackRul:
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	0
$LN33@OnTrackRul:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN32@OnTrackRul:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN31@OnTrackRul:
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	0
$LN30@OnTrackRul:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN29@OnTrackRul:
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	0
$LN28@OnTrackRul:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN27@OnTrackRul:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$0:
	lea	ecx, DWORD PTR _dc$176011[ebp]
	jmp	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$1:
	lea	ecx, DWORD PTR _dc$176016[ebp]
	jmp	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
__unwindfunclet$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z$2:
	lea	ecx, DWORD PTR _dc$176028[ebp]
	jmp	??1CClientDC@@UAE@XZ			; CClientDC::~CClientDC
__ehhandler$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-496]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnTrackRuler@CRulerRichEditCtrl@@IAEJIJ@Z ENDP		; CRulerRichEditCtrl::OnTrackRuler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSetText@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnSetText@CRulerRichEditCtrl@@IAEJIJ@Z PROC		; CRulerRichEditCtrl::OnSetText, COMDAT
; _this$ = ecx

; 619  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 	return m_rtf.SendMessage(WM_SETTEXT, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 621  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnSetText@CRulerRichEditCtrl@@IAEJIJ@Z ENDP		; CRulerRichEditCtrl::OnSetText
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnGetText@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnGetText@CRulerRichEditCtrl@@IAEJIJ@Z PROC		; CRulerRichEditCtrl::OnGetText, COMDAT
; _this$ = ecx

; 624  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 625  : 	return m_rtf.SendMessage(WM_GETTEXT, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 626  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnGetText@CRulerRichEditCtrl@@IAEJIJ@Z ENDP		; CRulerRichEditCtrl::OnGetText
_TEXT	ENDS
EXTRN	?GetTextLength@CRichEditCtrl@@QBEJXZ:PROC	; CRichEditCtrl::GetTextLength
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnGetTextLength@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnGetTextLength@CRulerRichEditCtrl@@IAEJIJ@Z PROC	; CRulerRichEditCtrl::OnGetTextLength, COMDAT
; _this$ = ecx

; 629  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 	return m_rtf.GetTextLength();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetTextLength@CRichEditCtrl@@QBEJXZ	; CRichEditCtrl::GetTextLength

; 631  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnGetTextLength@CRulerRichEditCtrl@@IAEJIJ@Z ENDP	; CRulerRichEditCtrl::OnGetTextLength
_TEXT	ENDS
PUBLIC	?SetMode@CRulerRichEditCtrl@@QAEXH@Z		; CRulerRichEditCtrl::SetMode
EXTRN	?SetMode@CRRECRuler@@QAEXH@Z:PROC		; CRRECRuler::SetMode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMode@CRulerRichEditCtrl@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mode$ = 8						; size = 4
?SetMode@CRulerRichEditCtrl@@QAEXH@Z PROC		; CRulerRichEditCtrl::SetMode, COMDAT
; _this$ = ecx

; 637  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 	m_ruler.SetMode(mode);

	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?SetMode@CRRECRuler@@QAEXH@Z		; CRRECRuler::SetMode

; 639  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMode@CRulerRichEditCtrl@@QAEXH@Z ENDP		; CRulerRichEditCtrl::SetMode
_TEXT	ENDS
PUBLIC	?GetMode@CRulerRichEditCtrl@@QBEHXZ		; CRulerRichEditCtrl::GetMode
EXTRN	?GetMode@CRRECRuler@@QBEHXZ:PROC		; CRRECRuler::GetMode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMode@CRulerRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMode@CRulerRichEditCtrl@@QBEHXZ PROC		; CRulerRichEditCtrl::GetMode, COMDAT
; _this$ = ecx

; 642  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 	return m_ruler.GetMode();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?GetMode@CRRECRuler@@QBEHXZ		; CRRECRuler::GetMode

; 644  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMode@CRulerRichEditCtrl@@QBEHXZ ENDP		; CRulerRichEditCtrl::GetMode
_TEXT	ENDS
PUBLIC	?DoFont@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoFont
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditFont@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditFont@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditFont, COMDAT
; _this$ = ecx

; 650  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 651  : 	DoFont();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFont@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoFont

; 652  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditFont@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditFont
_TEXT	ENDS
PUBLIC	?DoColor@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoColor
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditColor@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditColor@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditColor, COMDAT
; _this$ = ecx

; 655  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 656  : 	DoColor();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoColor@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoColor

; 657  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditColor@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditColor
_TEXT	ENDS
PUBLIC	?DoBold@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoBold
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditBold@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditBold@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditBold, COMDAT
; _this$ = ecx

; 660  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 661  : 	DoBold();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoBold@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoBold

; 662  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditBold@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditBold
_TEXT	ENDS
PUBLIC	?DoStrikethrough@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoStrikethrough
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditStrikethrough@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditStrikethrough@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditStrikethrough, COMDAT
; _this$ = ecx

; 665  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 666  : 	DoStrikethrough();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoStrikethrough@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoStrikethrough

; 667  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditStrikethrough@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditStrikethrough
_TEXT	ENDS
PUBLIC	?DoItalic@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoItalic
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditItalic@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditItalic@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditItalic, COMDAT
; _this$ = ecx

; 670  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 	DoItalic();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoItalic@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoItalic

; 672  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditItalic@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditItalic
_TEXT	ENDS
PUBLIC	?DoUnderline@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoUnderline
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditUnderline@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditUnderline@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditUnderline, COMDAT
; _this$ = ecx

; 675  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 676  : 	DoUnderline();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoUnderline@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoUnderline

; 677  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditUnderline@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditUnderline
_TEXT	ENDS
PUBLIC	?DoLeftAlign@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoLeftAlign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditLeftAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditLeftAlign@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditLeftAlign, COMDAT
; _this$ = ecx

; 680  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 681  : 	DoLeftAlign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLeftAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoLeftAlign

; 682  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditLeftAlign@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditLeftAlign
_TEXT	ENDS
PUBLIC	?DoJustify@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoJustify
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditJustify@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditJustify@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditJustify, COMDAT
; _this$ = ecx

; 685  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 686  : 	DoJustify();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoJustify@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoJustify

; 687  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditJustify@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditJustify
_TEXT	ENDS
PUBLIC	?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z	; CRulerRichEditCtrl::IncrementFontSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditShrinkFont@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditShrinkFont@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditShrinkFont, COMDAT
; _this$ = ecx

; 690  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 691  : 	IncrementFontSize(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::IncrementFontSize

; 692  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditShrinkFont@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditShrinkFont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnEditGrowFont@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditGrowFont@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditGrowFont, COMDAT
; _this$ = ecx

; 695  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 696  : 	IncrementFontSize(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::IncrementFontSize

; 697  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditGrowFont@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditGrowFont
_TEXT	ENDS
PUBLIC	?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoInsertTable
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditInsertTable@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditInsertTable@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditInsertTable, COMDAT
; _this$ = ecx

; 700  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 701  : 	DoInsertTable();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoInsertTable

; 702  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditInsertTable@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditInsertTable
_TEXT	ENDS
PUBLIC	?DoInsertHorzLine@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoInsertHorzLine
EXTRN	?InsertHorizontalLine@CRichEditBaseCtrl@@QAEHXZ:PROC ; CRichEditBaseCtrl::InsertHorizontalLine
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoInsertHorzLine@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoInsertHorzLine@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::DoInsertHorzLine, COMDAT
; _this$ = ecx

; 705  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 	m_rtf.InsertHorizontalLine();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?InsertHorizontalLine@CRichEditBaseCtrl@@QAEHXZ ; CRichEditBaseCtrl::InsertHorizontalLine

; 707  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoInsertHorzLine@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::DoInsertHorzLine
_TEXT	ENDS
PUBLIC	?DoCenterAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoCenterAlign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditCenterAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditCenterAlign@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditCenterAlign, COMDAT
; _this$ = ecx

; 710  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 	DoCenterAlign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCenterAlign@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoCenterAlign

; 712  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditCenterAlign@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditCenterAlign
_TEXT	ENDS
PUBLIC	?DoRightAlign@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoRightAlign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditRightAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditRightAlign@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditRightAlign, COMDAT
; _this$ = ecx

; 715  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 	DoRightAlign();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRightAlign@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoRightAlign

; 717  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditRightAlign@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditRightAlign
_TEXT	ENDS
PUBLIC	?DoIndent@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoIndent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditIndent@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditIndent@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditIndent, COMDAT
; _this$ = ecx

; 720  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 	DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoIndent

; 722  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditIndent@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditIndent
_TEXT	ENDS
PUBLIC	?DoOutdent@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoOutdent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditOutdent@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditOutdent@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditOutdent, COMDAT
; _this$ = ecx

; 725  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 726  : 	DoOutdent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoOutdent@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoOutdent

; 727  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditOutdent@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditOutdent
_TEXT	ENDS
PUBLIC	?DoBulletList@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoBulletList
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditBulletList@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditBulletList@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditBulletList, COMDAT
; _this$ = ecx

; 730  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 	DoBulletList();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoBulletList@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoBulletList

; 732  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditBulletList@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditBulletList
_TEXT	ENDS
PUBLIC	?DoNumberList@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoNumberList
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditNumberList@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditNumberList@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditNumberList, COMDAT
; _this$ = ecx

; 735  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 736  : 	DoNumberList();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoNumberList@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::DoNumberList

; 737  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditNumberList@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditNumberList
_TEXT	ENDS
PUBLIC	?SetCurrentFontName@CRulerRichEditCtrl@@IAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRulerRichEditCtrl::SetCurrentFontName
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z$0
__ehfuncinfo$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
$T177920 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_font$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z PROC	; CRulerRichEditCtrl::OnSetCurrentFontName, COMDAT
; _this$ = ecx

; 740  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 741  : 	SetCurrentFontName((LPCTSTR) font);

	mov	esi, esp
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T177920[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T177920[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontName@CRulerRichEditCtrl@@IAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRulerRichEditCtrl::SetCurrentFontName
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T177920[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 742  : 
; 743  : 	return 0;

	xor	eax, eax

; 744  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T177920[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnSetCurrentFontName@CRulerRichEditCtrl@@IAEJIJ@Z ENDP	; CRulerRichEditCtrl::OnSetCurrentFontName
PUBLIC	?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z	; CRulerRichEditCtrl::SetCurrentFontSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSetCurrentFontSize@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_size$ = 12						; size = 4
?OnSetCurrentFontSize@CRulerRichEditCtrl@@IAEJIJ@Z PROC	; CRulerRichEditCtrl::OnSetCurrentFontSize, COMDAT
; _this$ = ecx

; 747  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 748  : 	SetCurrentFontSize(size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetCurrentFontSize

; 749  : 	return 0;

	xor	eax, eax

; 750  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnSetCurrentFontSize@CRulerRichEditCtrl@@IAEJIJ@Z ENDP	; CRulerRichEditCtrl::OnSetCurrentFontSize
_TEXT	ENDS
EXTRN	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ:PROC	; CWnd::GetSafeHwnd
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnKillFocusToolbar@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnKillFocusToolbar@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CRulerRichEditCtrl::OnKillFocusToolbar, COMDAT
; _this$ = ecx

; 753  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 754  : 	// pretend the richedit lost focus to force an update
; 755  : 	SendMessage(WM_COMMAND, MAKEWPARAM(RTF_CONTROL, EN_KILLFOCUS), (LPARAM)m_rtf.GetSafeHwnd());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	push	eax
	push	33554444				; 0200000cH
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 756  : 	*pResult = 0;

	mov	eax, DWORD PTR _pResult$[ebp]
	mov	DWORD PTR [eax], 0

; 757  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnKillFocusToolbar@CRulerRichEditCtrl@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CRulerRichEditCtrl::OnKillFocusToolbar
_TEXT	ENDS
PUBLIC	?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z ; CRulerRichEditCtrl::SetCurrentFontColor
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnSetCurrentFontColor@CRulerRichEditCtrl@@IAEJIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bForeground$ = 8					; size = 4
_color$ = 12						; size = 4
?OnSetCurrentFontColor@CRulerRichEditCtrl@@IAEJIJ@Z PROC ; CRulerRichEditCtrl::OnSetCurrentFontColor, COMDAT
; _this$ = ecx

; 760  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 761  : 	SetCurrentFontColor((COLORREF) color, bForeground);

	mov	eax, DWORD PTR _bForeground$[ebp]
	push	eax
	mov	ecx, DWORD PTR _color$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z ; CRulerRichEditCtrl::SetCurrentFontColor

; 762  : 
; 763  : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 764  : 	return 0;

	xor	eax, eax

; 765  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnSetCurrentFontColor@CRulerRichEditCtrl@@IAEJIJ@Z ENDP ; CRulerRichEditCtrl::OnSetCurrentFontColor
_TEXT	ENDS
EXTRN	?GetFontColor@CRRECToolBar@@QBEKHH@Z:PROC	; CRRECToolBar::GetFontColor
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditTextColor@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditTextColor@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditTextColor, COMDAT
; _this$ = ecx

; 768  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 769  : 	SetCurrentFontColor(m_toolbar.GetFontColor(TRUE), TRUE);

	push	1
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetFontColor@CRRECToolBar@@QBEKHH@Z	; CRRECToolBar::GetFontColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z ; CRulerRichEditCtrl::SetCurrentFontColor

; 770  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditTextColor@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditTextColor
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnEditBackColor@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditBackColor@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::OnEditBackColor, COMDAT
; _this$ = ecx

; 773  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 774  : 	SetCurrentFontColor(m_toolbar.GetFontColor(FALSE), FALSE);

	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetFontColor@CRRECToolBar@@QBEKHH@Z	; CRRECToolBar::GetFontColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z ; CRulerRichEditCtrl::SetCurrentFontColor

; 775  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditBackColor@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::OnEditBackColor
_TEXT	ENDS
PUBLIC	?SetWordWrap@CRulerRichEditCtrl@@QAEXH@Z	; CRulerRichEditCtrl::SetWordWrap
PUBLIC	?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ		; CRulerRichEditCtrl::HasWordWrap
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnEditWordwrap@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnEditWordwrap@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::OnEditWordwrap, COMDAT
; _this$ = ecx

; 778  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 	SetWordWrap(!HasWordWrap());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ	; CRulerRichEditCtrl::HasWordWrap
	neg	eax
	sbb	eax, eax
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWordWrap@CRulerRichEditCtrl@@QAEXH@Z ; CRulerRichEditCtrl::SetWordWrap

; 780  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnEditWordwrap@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::OnEditWordwrap
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.h
_TEXT	ENDS
;	COMDAT ?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ PROC		; CRulerRichEditCtrl::HasWordWrap, COMDAT
; _this$ = ecx

; 32   : 	BOOL HasWordWrap() const { return m_bWordWrap; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+300]
	mov	esp, ebp
	pop	ebp
	ret	0
?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ ENDP		; CRulerRichEditCtrl::HasWordWrap
_TEXT	ENDS
EXTRN	?OnEnable@CWnd@@IAEXH@Z:PROC			; CWnd::OnEnable
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
;	COMDAT ?OnEnable@CRulerRichEditCtrl@@IAEXH@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
_bEnable$ = 8						; size = 4
?OnEnable@CRulerRichEditCtrl@@IAEXH@Z PROC		; CRulerRichEditCtrl::OnEnable, COMDAT
; _this$ = ecx

; 783  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 784  : 	CWnd::OnEnable(bEnable);

	mov	eax, DWORD PTR _bEnable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnEnable@CWnd@@IAEXH@Z			; CWnd::OnEnable

; 785  : 
; 786  : 	// update children
; 787  : 	// we don't disable the rtf because this causes the scrollbar
; 788  : 	// to remain disabled even after re-enabling
; 789  : 	SetReadOnly(m_readOnly || !bEnable);

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+296], 0
	jne	SHORT $LN3@OnEnable
	cmp	DWORD PTR _bEnable$[ebp], 0
	je	SHORT $LN3@OnEnable
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@OnEnable
$LN3@OnEnable:
	mov	DWORD PTR tv74[ebp], 1
$LN4@OnEnable:
	mov	edx, DWORD PTR tv74[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z ; CRulerRichEditCtrl::SetReadOnly

; 790  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnEnable@CRulerRichEditCtrl@@IAEXH@Z ENDP		; CRulerRichEditCtrl::OnEnable
_TEXT	ENDS
EXTRN	?CanEdit@CRichEditBaseCtrl@@QBEHXZ:PROC		; CRichEditBaseCtrl::CanEdit
EXTRN	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z:PROC ; CRichEditBaseCtrl::SelectionHasEffect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditBold@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditBold@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditBold, COMDAT
; _this$ = ecx

; 793  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 794  : 	pCmdUI->SetCheck(m_rtf.SelectionHasEffect(CFM_BOLD, CFE_BOLD) ? 1 : 0);

	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 795  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 796  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditBold@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditBold
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditBullet@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditBullet@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditBullet, COMDAT
; _this$ = ecx

; 799  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 800  : 	ParaFormat pf(PFM_NUMBERING);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 801  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 802  : 				
; 803  : 	pCmdUI->SetCheck((pf.wNumbering == PFN_BULLET) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+8]
	sub	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 804  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 805  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@OnUpdateEd:
	DD	1
	DD	$LN4@OnUpdateEd
$LN4@OnUpdateEd:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd
$LN3@OnUpdateEd:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditBullet@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditBullet
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditCenterAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditCenterAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditCenterAlign, COMDAT
; _this$ = ecx

; 808  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 809  : 	ParaFormat pf(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 810  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 811  : 				
; 812  : 	pCmdUI->SetCheck((pf.wAlignment == PFA_CENTER) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+24]
	xor	edx, edx
	cmp	ecx, 3
	sete	dl
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 813  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 814  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@OnUpdateEd@2:
	DD	1
	DD	$LN4@OnUpdateEd@2
$LN4@OnUpdateEd@2:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd@2
$LN3@OnUpdateEd@2:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditCenterAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditCenterAlign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditGrowFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditGrowFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditGrowFont, COMDAT
; _this$ = ecx

; 817  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 818  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 819  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditGrowFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditGrowFont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditIndent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditIndent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditIndent, COMDAT
; _this$ = ecx

; 822  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 823  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 824  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditIndent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditIndent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditInsertTable@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditInsertTable@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditInsertTable, COMDAT
; _this$ = ecx

; 827  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 828  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 829  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditInsertTable@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditInsertTable
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditItalic@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditItalic@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditItalic, COMDAT
; _this$ = ecx

; 832  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 833  : 	pCmdUI->SetCheck(m_rtf.SelectionHasEffect(CFM_ITALIC, CFE_ITALIC) ? 1 : 0);

	push	2
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 834  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 835  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditItalic@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditItalic
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditJustify@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditJustify@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditJustify, COMDAT
; _this$ = ecx

; 838  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 	ParaFormat pf(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 840  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 841  : 				
; 842  : 	pCmdUI->SetCheck((pf.wAlignment == PFA_JUSTIFY) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+24]
	xor	edx, edx
	cmp	ecx, 4
	sete	dl
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 843  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 844  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@OnUpdateEd@3:
	DD	1
	DD	$LN4@OnUpdateEd@3
$LN4@OnUpdateEd@3:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd@3
$LN3@OnUpdateEd@3:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditJustify@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditJustify
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditLeftAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditLeftAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditLeftAlign, COMDAT
; _this$ = ecx

; 847  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 848  : 	ParaFormat pf(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 849  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 850  : 				
; 851  : 	pCmdUI->SetCheck((pf.wAlignment == PFA_LEFT) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+24]
	sub	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 852  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 853  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@OnUpdateEd@4:
	DD	1
	DD	$LN4@OnUpdateEd@4
$LN4@OnUpdateEd@4:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd@4
$LN3@OnUpdateEd@4:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditLeftAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditLeftAlign
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditNumberList@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditNumberList@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditNumberList, COMDAT
; _this$ = ecx

; 856  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 857  : 	ParaFormat pf(PFM_NUMBERING);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 858  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 859  : 				
; 860  : 	pCmdUI->SetCheck((pf.wNumbering > PFN_BULLET) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+8]
	xor	edx, edx
	cmp	ecx, 1
	setg	dl
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 861  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 862  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@OnUpdateEd@5:
	DD	1
	DD	$LN4@OnUpdateEd@5
$LN4@OnUpdateEd@5:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd@5
$LN3@OnUpdateEd@5:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditNumberList@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditNumberList
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditOutdent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditOutdent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditOutdent, COMDAT
; _this$ = ecx

; 865  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 866  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 867  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditOutdent@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditOutdent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnUpdateEditRightAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditRightAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditRightAlign, COMDAT
; _this$ = ecx

; 870  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 871  : 	ParaFormat pf(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 872  : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 873  : 				
; 874  : 	pCmdUI->SetCheck((pf.wAlignment == PFA_RIGHT) ? 1 : 0);

	movzx	ecx, WORD PTR _pf$[ebp+24]
	xor	edx, edx
	cmp	ecx, 2
	sete	dl
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 875  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 876  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@OnUpdateEd@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@OnUpdateEd@6:
	DD	1
	DD	$LN4@OnUpdateEd@6
$LN4@OnUpdateEd@6:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@OnUpdateEd@6
$LN3@OnUpdateEd@6:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?OnUpdateEditRightAlign@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditRightAlign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditShrinkFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditShrinkFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditShrinkFont, COMDAT
; _this$ = ecx

; 879  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 880  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 881  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditShrinkFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditShrinkFont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditStrikethru@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditStrikethru@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditStrikethru, COMDAT
; _this$ = ecx

; 884  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 885  : 	pCmdUI->SetCheck(m_rtf.SelectionHasEffect(CFM_STRIKEOUT, CFE_STRIKEOUT) ? 1 : 0);

	push	8
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 886  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 887  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditStrikethru@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditStrikethru
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditUnderline@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditUnderline@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditUnderline, COMDAT
; _this$ = ecx

; 890  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 891  : 	pCmdUI->SetCheck(m_rtf.SelectionHasEffect(CFM_UNDERLINE, CFE_UNDERLINE) ? 1 : 0);

	push	4
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 892  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 893  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditUnderline@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditUnderline
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditWordwrap@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditWordwrap@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditWordwrap, COMDAT
; _this$ = ecx

; 896  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 897  : 	pCmdUI->SetCheck(HasWordWrap() ? 1 : 0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasWordWrap@CRulerRichEditCtrl@@QBEHXZ	; CRulerRichEditCtrl::HasWordWrap
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 898  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditWordwrap@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditWordwrap
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditBackColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditBackColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditBackColor, COMDAT
; _this$ = ecx

; 901  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 902  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 903  : 
; 904  : 	// NOTE: We no longer change the toolbar colors to
; 905  : 	// match the currently selected text to be more
; 906  : 	// consistent with MS Word
; 907  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditBackColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditBackColor
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditFont, COMDAT
; _this$ = ecx

; 910  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 911  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 912  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditFont@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditFont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnUpdateEditTextColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEditTextColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z PROC ; CRulerRichEditCtrl::OnUpdateEditTextColor, COMDAT
; _this$ = ecx

; 915  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 916  : 	pCmdUI->Enable(m_rtf.CanEdit());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?CanEdit@CRichEditBaseCtrl@@QBEHXZ	; CRichEditBaseCtrl::CanEdit
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 917  : 
; 918  : 	// NOTE: We no longer change the toolbar colors to
; 919  : 	// match the currently selected text to be more
; 920  : 	// consistent with MS Word
; 921  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateEditTextColor@CRulerRichEditCtrl@@IAEXPAVCCmdUI@@@Z ENDP ; CRulerRichEditCtrl::OnUpdateEditTextColor
_TEXT	ENDS
EXTRN	?Add@CDWordArray@@QAEHK@Z:PROC			; CDWordArray::Add
EXTRN	?RemoveAll@CDWordArray@@QAEXXZ:PROC		; CDWordArray::RemoveAll
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z
_TEXT	SEGMENT
_tabpos$176251 = -20					; size = 4
_t$176247 = -16						; size = 4
_twip$ = -12						; size = 8
_this$ = -4						; size = 4
_tabs$ = 8						; size = 4
_size$ = 12						; size = 4
?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z PROC	; CRulerRichEditCtrl::SetTabStops, COMDAT
; _this$ = ecx

; 927  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 928  : 	m_tabs.RemoveAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?RemoveAll@CDWordArray@@QAEXXZ		; CDWordArray::RemoveAll

; 929  : 
; 930  : 	double twip = (double)m_physicalInch / 1440;

	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+152]
	fdiv	QWORD PTR __real@4096800000000000
	fstp	QWORD PTR _twip$[ebp]

; 931  : 
; 932  : 	for(int t = 0 ; t < size ; t++)

	mov	DWORD PTR _t$176247[ebp], 0
	jmp	SHORT $LN3@SetTabStop
$LN2@SetTabStop:
	mov	ecx, DWORD PTR _t$176247[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$176247[ebp], ecx
$LN3@SetTabStop:
	mov	edx, DWORD PTR _t$176247[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jge	SHORT $LN1@SetTabStop

; 933  : 	{
; 934  : 		// Convert from twips to pixels
; 935  : 		int tabpos = *(tabs + t);

	mov	eax, DWORD PTR _t$176247[ebp]
	mov	ecx, DWORD PTR _tabs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _tabpos$176251[ebp], edx

; 936  : 		tabpos = (int) ((double) tabpos * twip +.5);

	fild	DWORD PTR _tabpos$176251[ebp]
	fmul	QWORD PTR _twip$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR _tabpos$176251[ebp], eax

; 937  : 		m_tabs.Add(tabpos);

	mov	eax, DWORD PTR _tabpos$176251[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?Add@CDWordArray@@QAEHK@Z		; CDWordArray::Add

; 938  : 	}

	jmp	SHORT $LN2@SetTabStop
$LN1@SetTabStop:

; 939  : 
; 940  : 	m_ruler.SetTabStops(m_tabs);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?SetTabStops@CRRECRuler@@QAEXABVCDWordArray@@@Z ; CRRECRuler::SetTabStops

; 941  : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z ENDP	; CRulerRichEditCtrl::SetTabStops
_TEXT	ENDS
PUBLIC	?FixupTabStops@CRulerRichEditCtrl@@IAEHAAUParaFormat@@@Z ; CRulerRichEditCtrl::FixupTabStops
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateTabStops@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_para$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?UpdateTabStops@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::UpdateTabStops, COMDAT
; _this$ = ecx

; 944  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 	ParaFormat para(PFM_TABSTOPS);

	push	16					; 00000010H
	lea	ecx, DWORD PTR _para$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 946  : 	m_rtf.GetParaFormat(para);

	lea	eax, DWORD PTR _para$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 947  : 
; 948  : 	FixupTabStops(para);

	lea	ecx, DWORD PTR _para$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FixupTabStops@CRulerRichEditCtrl@@IAEHAAUParaFormat@@@Z ; CRulerRichEditCtrl::FixupTabStops

; 949  : 	SetTabStops((LPLONG)(para.rgxTabs), MAX_TAB_STOPS);

	push	32					; 00000020H
	lea	edx, DWORD PTR _para$[ebp+28]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTabStops@CRulerRichEditCtrl@@IAEXPAJH@Z ; CRulerRichEditCtrl::SetTabStops

; 950  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@UpdateTabS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@UpdateTabS:
	DD	1
	DD	$LN4@UpdateTabS
$LN4@UpdateTabS:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@UpdateTabS
$LN3@UpdateTabS:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
?UpdateTabStops@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::UpdateTabStops
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?RefreshButtonStates@CEnToolBar@@QAEXH@Z:PROC	; CEnToolBar::RefreshButtonStates
EXTRN	?GetSelectionCharFormat@CRichEditBaseCtrl@@QBEKAAUCHARFORMAT2W@@@Z:PROC ; CRichEditBaseCtrl::GetSelectionCharFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ$0
__ehfuncinfo$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
tv155 = -164						; size = 4
tv136 = -160						; size = 4
$T178019 = -156						; size = 4
_bConsistentSize$176267 = -152				; size = 4
_bConsistentFont$176264 = -148				; size = 4
_cf$176263 = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::UpdateToolbarButtons, COMDAT
; _this$ = ecx

; 953  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 954  : 	if (m_showToolbar && m_toolbar.GetSafeHwnd())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+288], 0
	je	$LN2@UpdateTool
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	test	eax, eax
	je	$LN2@UpdateTool

; 955  : 	{
; 956  : 		//TRACE(_T("CRulerRichEditCtrl::UpdateToolbarButtons()\n"));
; 957  : 
; 958  : 		CharFormat cf(CFM_FACE | CFM_SIZE);

	push	-1610612736				; a0000000H
	lea	ecx, DWORD PTR _cf$176263[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 959  : 		m_rtf.GetSelectionCharFormat(cf);

	lea	ecx, DWORD PTR _cf$176263[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetSelectionCharFormat@CRichEditBaseCtrl@@QBEKAAUCHARFORMAT2W@@@Z ; CRichEditBaseCtrl::GetSelectionCharFormat

; 960  : 
; 961  : 		BOOL bConsistentFont = (cf.dwMask & CFM_FACE);

	mov	edx, DWORD PTR _cf$176263[ebp+4]
	and	edx, 536870912				; 20000000H
	mov	DWORD PTR _bConsistentFont$176264[ebp], edx

; 962  : 		m_toolbar.SetFontName(bConsistentFont ? cf.szFaceName : _T(""));

	je	SHORT $LN4@UpdateTool
	lea	eax, DWORD PTR _cf$176263[ebp+26]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN5@UpdateTool
$LN4@UpdateTool:
	mov	DWORD PTR tv136[ebp], OFFSET $SG176266
$LN5@UpdateTool:
	mov	esi, esp
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T178019[ebp]
	call	DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T178019[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?SetFontName@CRRECToolBar@@QAEHABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CRRECToolBar::SetFontName
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T178019[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 963  : 
; 964  : 		BOOL bConsistentSize = (cf.dwMask & CFM_SIZE);

	mov	eax, DWORD PTR _cf$176263[ebp+4]
	and	eax, -2147483648			; 80000000H
	mov	DWORD PTR _bConsistentSize$176267[ebp], eax

; 965  : 		m_toolbar.SetFontSize(bConsistentSize ? cf.yHeight / 20 : -1);

	je	SHORT $LN6@UpdateTool
	mov	eax, DWORD PTR _cf$176263[ebp+12]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN7@UpdateTool
$LN6@UpdateTool:
	mov	DWORD PTR tv155[ebp], -1
$LN7@UpdateTool:
	mov	edx, DWORD PTR tv155[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?SetFontSize@CRRECToolBar@@QAEHH@Z	; CRRECToolBar::SetFontSize

; 966  : 
; 967  : 		m_toolbar.RefreshButtonStates(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?RefreshButtonStates@CEnToolBar@@QAEXH@Z ; CEnToolBar::RefreshButtonStates
$LN2@UpdateTool:

; 968  : 	}
; 969  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UpdateTool
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@UpdateTool:
	DD	1
	DD	$LN11@UpdateTool
$LN11@UpdateTool:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN9@UpdateTool
$LN9@UpdateTool:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T178019[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::UpdateToolbarButtons
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z
_TEXT	SEGMENT
_cf$ = -128						; size = 116
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_mask$ = 8						; size = 4
_effect$ = 12						; size = 4
?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z PROC		; CRulerRichEditCtrl::SetEffect, COMDAT
; _this$ = ecx

; 972  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 973  : 	CharFormat cf;

	push	0
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 974  : 	cf.dwMask = mask;

	mov	eax, DWORD PTR _mask$[ebp]
	mov	DWORD PTR _cf$[ebp+4], eax

; 975  : 	cf.dwEffects = effect;

	mov	ecx, DWORD PTR _effect$[ebp]
	mov	DWORD PTR _cf$[ebp+8], ecx

; 976  : 
; 977  : 	m_rtf.SendMessage(EM_SETCHARFORMAT, SCF_SELECTION, (LPARAM) &cf);

	lea	edx, DWORD PTR _cf$[ebp]
	push	edx
	push	1
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 978  : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 979  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetEffect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@SetEffect:
	DD	1
	DD	$LN4@SetEffect
$LN4@SetEffect:
	DD	-128					; ffffff80H
	DD	116					; 00000074H
	DD	$LN3@SetEffect
$LN3@SetEffect:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z ENDP		; CRulerRichEditCtrl::SetEffect
_TEXT	ENDS
EXTRN	?GetFontSize@CRRECToolBar@@QBEHXZ:PROC		; CRRECToolBar::GetFontSize
EXTRN	?IncrementFontSize@CRRECToolBar@@QAEHH@Z:PROC	; CRRECToolBar::IncrementFontSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bIncrement$ = 8					; size = 4
?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z PROC	; CRulerRichEditCtrl::IncrementFontSize, COMDAT
; _this$ = ecx

; 982  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 983  : 	if (m_toolbar.IncrementFontSize(bIncrement ? 1 : -1))

	xor	eax, eax
	cmp	DWORD PTR _bIncrement$[ebp], 0
	setne	al
	lea	eax, DWORD PTR [eax+eax-1]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?IncrementFontSize@CRRECToolBar@@QAEHH@Z ; CRRECToolBar::IncrementFontSize
	test	eax, eax
	je	SHORT $LN2@IncrementF

; 984  : 		SetCurrentFontSize(m_toolbar.GetFontSize());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetFontSize@CRRECToolBar@@QBEHXZ	; CRRECToolBar::GetFontSize
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetCurrentFontSize
$LN2@IncrementF:

; 985  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IncrementFontSize@CRulerRichEditCtrl@@IAEXH@Z ENDP	; CRulerRichEditCtrl::IncrementFontSize
_TEXT	ENDS
PUBLIC	??1CInsertTableDlg@@UAE@XZ			; CInsertTableDlg::~CInsertTableDlg
PUBLIC	?GetNumRows@CInsertTableDlg@@QBEHXZ		; CInsertTableDlg::GetNumRows
PUBLIC	?GetNumColumns@CInsertTableDlg@@QBEHXZ		; CInsertTableDlg::GetNumColumns
PUBLIC	?GetColumnWidth@CInsertTableDlg@@QBEHXZ		; CInsertTableDlg::GetColumnWidth
PUBLIC	__$ArrayPad$
EXTRN	?InsertTable@CRichEditBaseCtrl@@QAEHHHHHK@Z:PROC ; CRichEditBaseCtrl::InsertTable
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	??0CInsertTableDlg@@QAE@PAVCWnd@@@Z:PROC	; CInsertTableDlg::CInsertTableDlg
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ$0
__ehfuncinfo$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_para$176286 = -700					; size = 156
_nColWidth$176285 = -540				; size = 4
_dialog$ = -532						; size = 508
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoInsertTable, COMDAT
; _this$ = ecx

; 988  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 692				; 000002b4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-704]
	mov	ecx, 173				; 000000adH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 989  : 	CInsertTableDlg dialog;

	push	0
	lea	ecx, DWORD PTR _dialog$[ebp]
	call	??0CInsertTableDlg@@QAE@PAVCWnd@@@Z	; CInsertTableDlg::CInsertTableDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 990  : 
; 991  : 	if (dialog.DoModal() == IDOK)

	lea	ecx, DWORD PTR _dialog$[ebp]
	call	?DoModal@CDialog@@UAEHXZ		; CDialog::DoModal
	cmp	eax, 1
	jne	SHORT $LN2@DoInsertTa

; 992  : 	{
; 993  : 		// calculate column width from first tab
; 994  : 		int nColWidth = 1000;

	mov	DWORD PTR _nColWidth$176285[ebp], 1000	; 000003e8H

; 995  : 		ParaFormat para(PFM_TABSTOPS);

	push	16					; 00000010H
	lea	ecx, DWORD PTR _para$176286[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 996  : 		m_rtf.GetParaFormat(para);

	lea	eax, DWORD PTR _para$176286[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 997  : 
; 998  : 		if (para.rgxTabs[0])

	cmp	DWORD PTR _para$176286[ebp+28], 0
	je	SHORT $LN1@DoInsertTa

; 999  : 			nColWidth = (dialog.GetColumnWidth() * para.rgxTabs[0]);

	lea	ecx, DWORD PTR _dialog$[ebp]
	call	?GetColumnWidth@CInsertTableDlg@@QBEHXZ	; CInsertTableDlg::GetColumnWidth
	imul	eax, DWORD PTR _para$176286[ebp+28]
	mov	DWORD PTR _nColWidth$176285[ebp], eax
$LN1@DoInsertTa:

; 1000 : 
; 1001 : 		m_rtf.InsertTable(dialog.GetNumRows(), 
; 1002 : 						dialog.GetNumColumns(),
; 1003 : 						nColWidth);

	push	15					; 0000000fH
	push	50					; 00000032H
	mov	ecx, DWORD PTR _nColWidth$176285[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dialog$[ebp]
	call	?GetNumColumns@CInsertTableDlg@@QBEHXZ	; CInsertTableDlg::GetNumColumns
	push	eax
	lea	ecx, DWORD PTR _dialog$[ebp]
	call	?GetNumRows@CInsertTableDlg@@QBEHXZ	; CInsertTableDlg::GetNumRows
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?InsertTable@CRichEditBaseCtrl@@QAEHHHHHK@Z ; CRichEditBaseCtrl::InsertTable
$LN2@DoInsertTa:

; 1004 : 	}
; 1005 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dialog$[ebp]
	call	??1CInsertTableDlg@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@DoInsertTa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 704				; 000002c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@DoInsertTa:
	DD	2
	DD	$LN9@DoInsertTa
$LN9@DoInsertTa:
	DD	-532					; fffffdecH
	DD	508					; 000001fcH
	DD	$LN6@DoInsertTa
	DD	-700					; fffffd44H
	DD	156					; 0000009cH
	DD	$LN7@DoInsertTa
$LN7@DoInsertTa:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
$LN6@DoInsertTa:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ$0:
	lea	ecx, DWORD PTR _dialog$[ebp]
	jmp	??1CInsertTableDlg@@UAE@XZ
__ehhandler$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-700]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoInsertTable@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoInsertTable
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\inserttabledlg.h
;	COMDAT ?GetNumRows@CInsertTableDlg@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumRows@CInsertTableDlg@@QBEHXZ PROC		; CInsertTableDlg::GetNumRows, COMDAT
; _this$ = ecx

; 19   : 	int GetNumRows() const { return m_nNumRows; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+496]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumRows@CInsertTableDlg@@QBEHXZ ENDP		; CInsertTableDlg::GetNumRows
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetNumColumns@CInsertTableDlg@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumColumns@CInsertTableDlg@@QBEHXZ PROC		; CInsertTableDlg::GetNumColumns, COMDAT
; _this$ = ecx

; 20   : 	int GetNumColumns() const { return m_nNumCols; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+500]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumColumns@CInsertTableDlg@@QBEHXZ ENDP		; CInsertTableDlg::GetNumColumns
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetColumnWidth@CInsertTableDlg@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColumnWidth@CInsertTableDlg@@QBEHXZ PROC		; CInsertTableDlg::GetColumnWidth, COMDAT
; _this$ = ecx

; 21   : 	int GetColumnWidth() const { return m_nColWidth; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+504]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColumnWidth@CInsertTableDlg@@QBEHXZ ENDP		; CInsertTableDlg::GetColumnWidth
_TEXT	ENDS
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	??1CComboBox@@UAE@XZ:PROC			; CComboBox::~CComboBox
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CInsertTableDlg@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$2
__ehfuncinfo$??1CInsertTableDlg@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CInsertTableDlg@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CInsertTableDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CInsertTableDlg@@UAE@XZ PROC				; CInsertTableDlg::~CInsertTableDlg, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CInsertTableDlg@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	??1CComboBox@@UAE@XZ			; CComboBox::~CComboBox
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	??1CComboBox@@UAE@XZ			; CComboBox::~CComboBox
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??1CComboBox@@UAE@XZ			; CComboBox::~CComboBox
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDialog@@UAE@XZ			; CDialog::~CDialog
__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CComboBox@@UAE@XZ			; CComboBox::~CComboBox
__unwindfunclet$??1CInsertTableDlg@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	jmp	??1CComboBox@@UAE@XZ			; CComboBox::~CComboBox
__ehhandler$??1CInsertTableDlg@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CInsertTableDlg@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CInsertTableDlg@@UAE@XZ ENDP				; CInsertTableDlg::~CInsertTableDlg
PUBLIC	??0ParaFormat2@@QAE@K@Z				; ParaFormat2::ParaFormat2
PUBLIC	__$ArrayPad$
PUBLIC	?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z	; CRulerRichEditCtrl::SetParaAlignment
EXTRN	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAUPARAFORMAT2@@@Z:PROC ; CRichEditBaseCtrl::SetParaFormat
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
;	COMDAT ?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z
_TEXT	SEGMENT
_para$ = -200						; size = 188
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_alignment$ = 8						; size = 4
?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z PROC	; CRulerRichEditCtrl::SetParaAlignment, COMDAT
; _this$ = ecx

; 1027 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1028 : 	ParaFormat2	para(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _para$[ebp]
	call	??0ParaFormat2@@QAE@K@Z			; ParaFormat2::ParaFormat2

; 1029 : 	para.wAlignment = (WORD) alignment;

	mov	ax, WORD PTR _alignment$[ebp]
	mov	WORD PTR _para$[ebp+24], ax

; 1030 : 
; 1031 : 	m_rtf.SetParaFormat(para);

	lea	ecx, DWORD PTR _para$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAUPARAFORMAT2@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 1032 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1033 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetParaAli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@SetParaAli:
	DD	1
	DD	$LN4@SetParaAli
$LN4@SetParaAli:
	DD	-200					; ffffff38H
	DD	188					; 000000bcH
	DD	$LN3@SetParaAli
$LN3@SetParaAli:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z ENDP	; CRulerRichEditCtrl::SetParaAlignment
_TEXT	ENDS
PUBLIC	?Reset@ParaFormat2@@QAEXK@Z			; ParaFormat2::Reset
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerrichedit.h
;	COMDAT ??0ParaFormat2@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
??0ParaFormat2@@QAE@K@Z PROC				; ParaFormat2::ParaFormat2, COMDAT
; _this$ = ecx

; 39   : 	ParaFormat2(DWORD mask = 0)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 	{
; 41   : 		Reset(mask);

	mov	eax, DWORD PTR _mask$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@ParaFormat2@@QAEXK@Z		; ParaFormat2::Reset

; 42   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParaFormat2@@QAE@K@Z ENDP				; ParaFormat2::ParaFormat2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Reset@ParaFormat2@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?Reset@ParaFormat2@@QAEXK@Z PROC			; ParaFormat2::Reset, COMDAT
; _this$ = ecx

; 45   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		memset(this, 0, sizeof (ParaFormat2));

	push	188					; 000000bcH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 47   : 		cbSize = sizeof(ParaFormat2);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 188			; 000000bcH

; 48   : 		dwMask = mask;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _mask$[ebp]
	mov	DWORD PTR [edx+4], eax

; 49   : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reset@ParaFormat2@@QAEXK@Z ENDP			; ParaFormat2::Reset
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ	; CRulerRichEditCtrl::GetParaAlignment
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
;	COMDAT ?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ
_TEXT	SEGMENT
_pf$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ PROC	; CRulerRichEditCtrl::GetParaAlignment, COMDAT
; _this$ = ecx

; 1036 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1037 : 	ParaFormat pf(PFM_ALIGNMENT);

	push	8
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 1038 : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 1039 : 				
; 1040 : 	return (int)pf.wAlignment;

	movzx	eax, WORD PTR _pf$[ebp+24]

; 1041 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetParaAli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@GetParaAli:
	DD	1
	DD	$LN4@GetParaAli
$LN4@GetParaAli:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN3@GetParaAli
$LN3@GetParaAli:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ ENDP	; CRulerRichEditCtrl::GetParaAlignment
_TEXT	ENDS
PUBLIC	??1CFontDialog@@UAE@XZ				; CFontDialog::~CFontDialog
PUBLIC	__$ArrayPad$
EXTRN	?IsStrikeOut@CFontDialog@@QBEHXZ:PROC		; CFontDialog::IsStrikeOut
EXTRN	?IsUnderline@CFontDialog@@QBEHXZ:PROC		; CFontDialog::IsUnderline
EXTRN	?IsItalic@CFontDialog@@QBEHXZ:PROC		; CFontDialog::IsItalic
EXTRN	?IsBold@CFontDialog@@QBEHXZ:PROC		; CFontDialog::IsBold
EXTRN	?GetColor@CFontDialog@@QBEKXZ:PROC		; CFontDialog::GetColor
EXTRN	?GetFaceName@CFontDialog@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ:PROC ; CFontDialog::GetFaceName
EXTRN	?GetSize@CFontDialog@@QBEHXZ:PROC		; CFontDialog::GetSize
EXTRN	?DoModal@CFontDialog@@UAEHXZ:PROC		; CFontDialog::DoModal
EXTRN	??0CFontDialog@@QAE@PAUtagLOGFONTW@@KPAVCDC@@PAVCWnd@@@Z:PROC ; CFontDialog::CFontDialog
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoFont@CRulerRichEditCtrl@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFont@CRulerRichEditCtrl@@IAEXXZ$0
__ehfuncinfo$?DoFont@CRulerRichEditCtrl@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoFont@CRulerRichEditCtrl@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?DoFont@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
tv316 = -700						; size = 4
$T178093 = -696						; size = 4
_dlg$ = -688						; size = 428
_twip$176311 = -256					; size = 8
_height$ = -248						; size = 4
_cf$ = -240						; size = 116
_lf$ = -116						; size = 92
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoFont@CRulerRichEditCtrl@@IAEXXZ PROC			; CRulerRichEditCtrl::DoFont, COMDAT
; _this$ = ecx

; 1044 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFont@CRulerRichEditCtrl@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 688				; 000002b0H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-700]
	mov	ecx, 172				; 000000acH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1045 : 	// Get the current font
; 1046 : 	LOGFONT	lf;
; 1047 : 	ZeroMemory(&lf, sizeof(LOGFONT));

	push	92					; 0000005cH
	push	0
	lea	eax, DWORD PTR _lf$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1048 : 	CharFormat	cf;

	push	0
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 1049 : 	m_rtf.SendMessage(EM_GETCHARFORMAT, SCF_SELECTION, (LPARAM) &cf);

	lea	ecx, DWORD PTR _cf$[ebp]
	push	ecx
	push	1
	push	1082					; 0000043aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 1050 : 	int height;
; 1051 : 
; 1052 : 	// Creating a LOGFONT from the current font settings
; 1053 : 
; 1054 : 	// Font
; 1055 : 	if (cf.dwMask & CFM_FACE)

	mov	edx, DWORD PTR _cf$[ebp+4]
	and	edx, 536870912				; 20000000H
	je	SHORT $LN13@DoFont

; 1056 : 		lstrcpy(lf.lfFaceName, cf.szFaceName);

	lea	eax, DWORD PTR _cf$[ebp+26]
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _lf$[ebp+28]
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@DoFont:

; 1057 : 
; 1058 : 	if (cf.dwMask & CFM_SIZE)

	mov	edx, DWORD PTR _cf$[ebp+4]
	and	edx, -2147483648			; 80000000H
	je	SHORT $LN12@DoFont

; 1059 : 	{
; 1060 : 		double twip = (double)m_physicalInch / 1440;

	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+152]
	fdiv	QWORD PTR __real@4096800000000000
	fstp	QWORD PTR _twip$176311[ebp]

; 1061 : 		height = cf.yHeight;

	mov	ecx, DWORD PTR _cf$[ebp+12]
	mov	DWORD PTR _height$[ebp], ecx

; 1062 : 		height = -(int) ((double) height * twip +.5);

	fild	DWORD PTR _height$[ebp]
	fmul	QWORD PTR _twip$176311[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	neg	eax
	mov	DWORD PTR _height$[ebp], eax

; 1063 : 		lf.lfHeight = height;

	mov	edx, DWORD PTR _height$[ebp]
	mov	DWORD PTR _lf$[ebp], edx
$LN12@DoFont:

; 1064 : 
; 1065 : 	}
; 1066 : 
; 1067 : 	// Effects
; 1068 : 	if (cf.dwMask & CFM_BOLD)

	mov	eax, DWORD PTR _cf$[ebp+4]
	and	eax, 1
	je	SHORT $LN9@DoFont

; 1069 : 	{
; 1070 : 		if (cf.dwEffects & CFE_BOLD)

	mov	ecx, DWORD PTR _cf$[ebp+8]
	and	ecx, 1
	je	SHORT $LN10@DoFont

; 1071 : 			lf.lfWeight = FW_BOLD;

	mov	DWORD PTR _lf$[ebp+16], 700		; 000002bcH

; 1072 : 		else

	jmp	SHORT $LN9@DoFont
$LN10@DoFont:

; 1073 : 			lf.lfWeight = FW_NORMAL;

	mov	DWORD PTR _lf$[ebp+16], 400		; 00000190H
$LN9@DoFont:

; 1074 : 	}
; 1075 : 
; 1076 : 	if ((cf.dwMask & CFM_ITALIC) && (cf.dwEffects & CFE_ITALIC))

	mov	edx, DWORD PTR _cf$[ebp+4]
	and	edx, 2
	je	SHORT $LN8@DoFont
	mov	eax, DWORD PTR _cf$[ebp+8]
	and	eax, 2
	je	SHORT $LN8@DoFont

; 1077 : 		lf.lfItalic = TRUE;

	mov	BYTE PTR _lf$[ebp+20], 1
$LN8@DoFont:

; 1078 : 
; 1079 : 	if ((cf.dwMask & CFM_UNDERLINE) && (cf.dwEffects & CFE_UNDERLINE))

	mov	ecx, DWORD PTR _cf$[ebp+4]
	and	ecx, 4
	je	SHORT $LN7@DoFont
	mov	edx, DWORD PTR _cf$[ebp+8]
	and	edx, 4
	je	SHORT $LN7@DoFont

; 1080 : 		lf.lfUnderline = TRUE;

	mov	BYTE PTR _lf$[ebp+21], 1
$LN7@DoFont:

; 1081 : 
; 1082 : 	if ((cf.dwMask & CFM_STRIKEOUT) && (cf.dwEffects & CFE_STRIKEOUT))

	mov	eax, DWORD PTR _cf$[ebp+4]
	and	eax, 8
	je	SHORT $LN6@DoFont
	mov	ecx, DWORD PTR _cf$[ebp+8]
	and	ecx, 8
	je	SHORT $LN6@DoFont

; 1083 : 		lf.lfStrikeOut = TRUE;

	mov	BYTE PTR _lf$[ebp+22], 1
$LN6@DoFont:

; 1084 : 
; 1085 : 	// Show font dialog
; 1086 : 	CFontDialog	dlg(&lf);

	push	0
	push	0
	push	257					; 00000101H
	lea	edx, DWORD PTR _lf$[ebp]
	push	edx
	lea	ecx, DWORD PTR _dlg$[ebp]
	call	??0CFontDialog@@QAE@PAUtagLOGFONTW@@KPAVCDC@@PAVCWnd@@@Z ; CFontDialog::CFontDialog
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1087 : 
; 1088 : 	// color
; 1089 : 	dlg.m_cf.rgbColors = cf.crTextColor;

	mov	eax, DWORD PTR _cf$[ebp+20]
	mov	DWORD PTR _dlg$[ebp+172], eax

; 1090 : 
; 1091 : 	if (dlg.DoModal() == IDOK)

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?DoModal@CFontDialog@@UAEHXZ		; CFontDialog::DoModal
	cmp	eax, 1
	jne	$LN5@DoFont

; 1092 : 	{
; 1093 : 		// Apply new font
; 1094 : 		cf.yHeight = dlg.GetSize() * 2;

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?GetSize@CFontDialog@@QBEHXZ		; CFontDialog::GetSize
	shl	eax, 1
	mov	DWORD PTR _cf$[ebp+12], eax

; 1095 : 		lstrcpy(cf.szFaceName, dlg.GetFaceName());

	lea	ecx, DWORD PTR $T178093[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?GetFaceName@CFontDialog@@QBE?AV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ ; CFontDialog::GetFaceName
	mov	DWORD PTR tv316[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv316[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	edx, DWORD PTR _cf$[ebp+26]
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR $T178093[ebp]
	call	DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1096 : 
; 1097 : 		cf.dwMask = CFM_FACE | CFM_SIZE | CFM_COLOR | CFM_BOLD | 
; 1098 : 					CFM_ITALIC | CFM_UNDERLINE | CFM_STRIKEOUT;

	mov	DWORD PTR _cf$[ebp+4], -536870897	; e000000fH

; 1099 : 		cf.dwEffects = 0;

	mov	DWORD PTR _cf$[ebp+8], 0

; 1100 : 		cf.crTextColor = dlg.GetColor();

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?GetColor@CFontDialog@@QBEKXZ		; CFontDialog::GetColor
	mov	DWORD PTR _cf$[ebp+20], eax

; 1101 : 
; 1102 : 		if (dlg.IsBold())

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?IsBold@CFontDialog@@QBEHXZ		; CFontDialog::IsBold
	test	eax, eax
	je	SHORT $LN4@DoFont

; 1103 : 			cf.dwEffects |= CFE_BOLD;

	mov	eax, DWORD PTR _cf$[ebp+8]
	or	eax, 1
	mov	DWORD PTR _cf$[ebp+8], eax
$LN4@DoFont:

; 1104 : 
; 1105 : 		if (dlg.IsItalic())

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?IsItalic@CFontDialog@@QBEHXZ		; CFontDialog::IsItalic
	test	eax, eax
	je	SHORT $LN3@DoFont

; 1106 : 			cf.dwEffects |= CFE_ITALIC;

	mov	ecx, DWORD PTR _cf$[ebp+8]
	or	ecx, 2
	mov	DWORD PTR _cf$[ebp+8], ecx
$LN3@DoFont:

; 1107 : 
; 1108 : 		if (dlg.IsUnderline())

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?IsUnderline@CFontDialog@@QBEHXZ	; CFontDialog::IsUnderline
	test	eax, eax
	je	SHORT $LN2@DoFont

; 1109 : 			cf.dwEffects |= CFE_UNDERLINE;

	mov	edx, DWORD PTR _cf$[ebp+8]
	or	edx, 4
	mov	DWORD PTR _cf$[ebp+8], edx
$LN2@DoFont:

; 1110 : 
; 1111 : 		if (dlg.IsStrikeOut())

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?IsStrikeOut@CFontDialog@@QBEHXZ	; CFontDialog::IsStrikeOut
	test	eax, eax
	je	SHORT $LN1@DoFont

; 1112 : 			cf.dwEffects |= CFE_STRIKEOUT;

	mov	eax, DWORD PTR _cf$[ebp+8]
	or	eax, 8
	mov	DWORD PTR _cf$[ebp+8], eax
$LN1@DoFont:

; 1113 : 
; 1114 : 		m_rtf.SendMessage(EM_SETCHARFORMAT, SCF_SELECTION, (LPARAM) &cf);

	lea	ecx, DWORD PTR _cf$[ebp]
	push	ecx
	push	1
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW
$LN5@DoFont:

; 1115 : /*
; 1116 : 		m_toolbar.SetFontColor(cf.crTextColor, TRUE);
; 1117 : */
; 1118 : 	}
; 1119 : 
; 1120 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1121 : 
; 1122 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dlg$[ebp]
	call	??1CFontDialog@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@DoFont
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 700				; 000002bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@DoFont:
	DD	3
	DD	$LN22@DoFont
$LN22@DoFont:
	DD	-116					; ffffff8cH
	DD	92					; 0000005cH
	DD	$LN18@DoFont
	DD	-240					; ffffff10H
	DD	116					; 00000074H
	DD	$LN19@DoFont
	DD	-688					; fffffd50H
	DD	428					; 000001acH
	DD	$LN20@DoFont
$LN20@DoFont:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
$LN19@DoFont:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
$LN18@DoFont:
	DB	108					; 0000006cH
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFont@CRulerRichEditCtrl@@IAEXXZ$0:
	lea	ecx, DWORD PTR _dlg$[ebp]
	jmp	??1CFontDialog@@UAE@XZ
__ehhandler$?DoFont@CRulerRichEditCtrl@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-700]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFont@CRulerRichEditCtrl@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFont@CRulerRichEditCtrl@@IAEXXZ ENDP			; CRulerRichEditCtrl::DoFont
PUBLIC	??1CCommonDialog@@UAE@XZ			; CCommonDialog::~CCommonDialog
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFontDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFontDialog@@UAE@XZ PROC				; CFontDialog::~CFontDialog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCommonDialog@@UAE@XZ		; CCommonDialog::~CCommonDialog
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFontDialog@@UAE@XZ ENDP				; CFontDialog::~CFontDialog
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentFontName@CRulerRichEditCtrl@@IAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_cf$ = -128						; size = 116
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_font$ = 8						; size = 4
?SetCurrentFontName@CRulerRichEditCtrl@@IAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; CRulerRichEditCtrl::SetCurrentFontName, COMDAT
; _this$ = ecx

; 1125 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1126 : 	CharFormat	cf(CFM_FACE);

	push	536870912				; 20000000H
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 1127 : 	lstrcpy(cf.szFaceName, font);

	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	call	DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _cf$[ebp+26]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1128 : 
; 1129 : 	m_rtf.SendMessage(EM_SETCHARFORMAT, SCF_SELECTION, (LPARAM) &cf);

	lea	ecx, DWORD PTR _cf$[ebp]
	push	ecx
	push	1
	push	1092					; 00000444H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW

; 1130 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@SetCurrent:
	DD	1
	DD	$LN4@SetCurrent
$LN4@SetCurrent:
	DD	-128					; ffffff80H
	DD	116					; 00000074H
	DD	$LN3@SetCurrent
$LN3@SetCurrent:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
?SetCurrentFontName@CRulerRichEditCtrl@@IAEXABV?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; CRulerRichEditCtrl::SetCurrentFontName
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?SetSelectionCharFormat@CRichEditBaseCtrl@@QAEHAAUCHARFORMAT2W@@@Z:PROC ; CRichEditBaseCtrl::SetSelectionCharFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z
_TEXT	SEGMENT
_cf$ = -128						; size = 116
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_size$ = 8						; size = 4
?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z PROC	; CRulerRichEditCtrl::SetCurrentFontSize, COMDAT
; _this$ = ecx

; 1133 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1134 : 	CharFormat	cf(CFM_SIZE);

	push	-2147483648				; 80000000H
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 1135 : 	cf.yHeight = size * 20;

	mov	eax, DWORD PTR _size$[ebp]
	imul	eax, 20					; 00000014H
	mov	DWORD PTR _cf$[ebp+12], eax

; 1136 : 
; 1137 : 	m_rtf.SetSelectionCharFormat(cf);

	lea	ecx, DWORD PTR _cf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSelectionCharFormat@CRichEditBaseCtrl@@QAEHAAUCHARFORMAT2W@@@Z ; CRichEditBaseCtrl::SetSelectionCharFormat

; 1138 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetCurrent@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@SetCurrent@2:
	DD	1
	DD	$LN4@SetCurrent@2
$LN4@SetCurrent@2:
	DD	-128					; ffffff80H
	DD	116					; 00000074H
	DD	$LN3@SetCurrent@2
$LN3@SetCurrent@2:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
?SetCurrentFontSize@CRulerRichEditCtrl@@IAEXH@Z ENDP	; CRulerRichEditCtrl::SetCurrentFontSize
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z
_TEXT	SEGMENT
_cf$ = -128						; size = 116
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_color$ = 8						; size = 4
_bForeground$ = 12					; size = 4
?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z PROC	; CRulerRichEditCtrl::SetCurrentFontColor, COMDAT
; _this$ = ecx

; 1141 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1142 : 	CharFormat	cf(bForeground ? CFM_COLOR : CFM_BACKCOLOR);

	mov	eax, DWORD PTR _bForeground$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 1006632960				; 3c000000H
	add	eax, 67108864				; 04000000H
	push	eax
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 1143 : 
; 1144 : 	if (bForeground)

	cmp	DWORD PTR _bForeground$[ebp], 0
	je	SHORT $LN6@SetCurrent@3

; 1145 : 	{
; 1146 : 		if (color == CLR_DEFAULT)

	cmp	DWORD PTR _color$[ebp], -16777216	; ff000000H
	jne	SHORT $LN5@SetCurrent@3

; 1147 : 			cf.dwEffects = CFE_AUTOCOLOR;

	mov	DWORD PTR _cf$[ebp+8], 1073741824	; 40000000H

; 1148 : 		else

	jmp	SHORT $LN4@SetCurrent@3
$LN5@SetCurrent@3:

; 1149 : 			cf.crTextColor = color;

	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR _cf$[ebp+20], ecx
$LN4@SetCurrent@3:

; 1150 : 	}
; 1151 : 	else // background

	jmp	SHORT $LN3@SetCurrent@3
$LN6@SetCurrent@3:

; 1152 : 	{
; 1153 : 		if (color == CLR_DEFAULT)

	cmp	DWORD PTR _color$[ebp], -16777216	; ff000000H
	jne	SHORT $LN2@SetCurrent@3

; 1154 : 			cf.dwEffects = CFE_AUTOBACKCOLOR;

	mov	DWORD PTR _cf$[ebp+8], 67108864		; 04000000H

; 1155 : 		else

	jmp	SHORT $LN3@SetCurrent@3
$LN2@SetCurrent@3:

; 1156 : 			cf.crBackColor = color;

	mov	edx, DWORD PTR _color$[ebp]
	mov	DWORD PTR _cf$[ebp+96], edx
$LN3@SetCurrent@3:

; 1157 : 	}
; 1158 : 
; 1159 : 	m_rtf.SetSelectionCharFormat(cf);

	lea	eax, DWORD PTR _cf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSelectionCharFormat@CRichEditBaseCtrl@@QAEHAAUCHARFORMAT2W@@@Z ; CRichEditBaseCtrl::SetSelectionCharFormat

; 1160 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SetCurrent@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN11@SetCurrent@3:
	DD	1
	DD	$LN10@SetCurrent@3
$LN10@SetCurrent@3:
	DD	-128					; ffffff80H
	DD	116					; 00000074H
	DD	$LN9@SetCurrent@3
$LN9@SetCurrent@3:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
?SetCurrentFontColor@CRulerRichEditCtrl@@IAEXKH@Z ENDP	; CRulerRichEditCtrl::SetCurrentFontColor
_TEXT	ENDS
PUBLIC	??1CColorDialog@@UAE@XZ				; CColorDialog::~CColorDialog
PUBLIC	__$ArrayPad$
EXTRN	?GetColor@CColorDialog@@QBEKXZ:PROC		; CColorDialog::GetColor
EXTRN	?DoModal@CColorDialog@@UAEHXZ:PROC		; CColorDialog::DoModal
EXTRN	??0CColorDialog@@QAE@KKPAVCWnd@@@Z:PROC		; CColorDialog::CColorDialog
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoColor@CRulerRichEditCtrl@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoColor@CRulerRichEditCtrl@@IAEXXZ$0
__ehfuncinfo$?DoColor@CRulerRichEditCtrl@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoColor@CRulerRichEditCtrl@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?DoColor@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_dlg$ = -336						; size = 184
_cf$ = -144						; size = 116
_clr$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoColor@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoColor, COMDAT
; _this$ = ecx

; 1163 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoColor@CRulerRichEditCtrl@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1164 : 	// Get the current color
; 1165 : 	COLORREF	clr(RGB(0, 0, 0));

	mov	DWORD PTR _clr$[ebp], 0

; 1166 : 	CharFormat	cf;

	push	0
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0CharFormat@@QAE@K@Z			; CharFormat::CharFormat

; 1167 : 
; 1168 : 	m_rtf.GetSelectionCharFormat(cf);

	lea	eax, DWORD PTR _cf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetSelectionCharFormat@CRichEditBaseCtrl@@QBEKAAUCHARFORMAT2W@@@Z ; CRichEditBaseCtrl::GetSelectionCharFormat

; 1169 : 
; 1170 : 	if (cf.dwMask & CFM_COLOR)

	mov	ecx, DWORD PTR _cf$[ebp+4]
	and	ecx, 1073741824				; 40000000H
	je	SHORT $LN2@DoColor

; 1171 : 		clr = cf.crTextColor;

	mov	edx, DWORD PTR _cf$[ebp+20]
	mov	DWORD PTR _clr$[ebp], edx
$LN2@DoColor:

; 1172 : 
; 1173 : 	// Display color selection dialog
; 1174 : 	CColorDialog dlg(clr);

	push	0
	push	0
	mov	eax, DWORD PTR _clr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dlg$[ebp]
	call	??0CColorDialog@@QAE@KKPAVCWnd@@@Z	; CColorDialog::CColorDialog
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1175 : 
; 1176 : 	if (dlg.DoModal() == IDOK)

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?DoModal@CColorDialog@@UAEHXZ		; CColorDialog::DoModal
	cmp	eax, 1
	jne	SHORT $LN1@DoColor

; 1177 : 	{
; 1178 : 		// Apply new color
; 1179 : 		cf.dwMask = CFM_COLOR;

	mov	DWORD PTR _cf$[ebp+4], 1073741824	; 40000000H

; 1180 : 		cf.dwEffects = 0;

	mov	DWORD PTR _cf$[ebp+8], 0

; 1181 : 		cf.crTextColor = dlg.GetColor();

	lea	ecx, DWORD PTR _dlg$[ebp]
	call	?GetColor@CColorDialog@@QBEKXZ		; CColorDialog::GetColor
	mov	DWORD PTR _cf$[ebp+20], eax

; 1182 : 
; 1183 : 		m_rtf.SetSelectionCharFormat(cf);

	lea	ecx, DWORD PTR _cf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetSelectionCharFormat@CRichEditBaseCtrl@@QAEHAAUCHARFORMAT2W@@@Z ; CRichEditBaseCtrl::SetSelectionCharFormat
$LN1@DoColor:

; 1184 : 	}
; 1185 : 
; 1186 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1187 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dlg$[ebp]
	call	??1CColorDialog@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@DoColor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@DoColor:
	DD	2
	DD	$LN9@DoColor
$LN9@DoColor:
	DD	-144					; ffffff70H
	DD	116					; 00000074H
	DD	$LN6@DoColor
	DD	-336					; fffffeb0H
	DD	184					; 000000b8H
	DD	$LN7@DoColor
$LN7@DoColor:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
$LN6@DoColor:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoColor@CRulerRichEditCtrl@@IAEXXZ$0:
	lea	ecx, DWORD PTR _dlg$[ebp]
	jmp	??1CColorDialog@@UAE@XZ
__ehhandler$?DoColor@CRulerRichEditCtrl@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoColor@CRulerRichEditCtrl@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoColor@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoColor
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CColorDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CColorDialog@@UAE@XZ PROC				; CColorDialog::~CColorDialog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCommonDialog@@UAE@XZ		; CCommonDialog::~CCommonDialog
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CColorDialog@@UAE@XZ ENDP				; CColorDialog::~CColorDialog
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoBold@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoBold@CRulerRichEditCtrl@@IAEXXZ PROC			; CRulerRichEditCtrl::DoBold, COMDAT
; _this$ = ecx

; 1190 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 	// toggle current state
; 1192 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_BOLD, CFE_BOLD);

	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1193 : 	SetEffect(CFM_BOLD, (bNewState ? CFE_BOLD : 0));

	xor	eax, eax
	cmp	DWORD PTR _bNewState$[ebp], 0
	setne	al
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1194 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoBold@CRulerRichEditCtrl@@IAEXXZ ENDP			; CRulerRichEditCtrl::DoBold
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoStrikethrough@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoStrikethrough@CRulerRichEditCtrl@@IAEXXZ PROC	; CRulerRichEditCtrl::DoStrikethrough, COMDAT
; _this$ = ecx

; 1197 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 	// toggle current state
; 1199 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_STRIKEOUT, CFE_STRIKEOUT);

	push	8
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1200 : 	SetEffect(CFM_STRIKEOUT, (bNewState ? CFE_STRIKEOUT : 0));

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 8
	push	eax
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1201 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoStrikethrough@CRulerRichEditCtrl@@IAEXXZ ENDP	; CRulerRichEditCtrl::DoStrikethrough
_TEXT	ENDS
PUBLIC	?DoSuperscript@CRulerRichEditCtrl@@IAEXXZ	; CRulerRichEditCtrl::DoSuperscript
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoSuperscript@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoSuperscript@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoSuperscript, COMDAT
; _this$ = ecx

; 1204 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1205 : 	// toggle current state
; 1206 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_SUPERSCRIPT, CFE_SUPERSCRIPT);

	push	131072					; 00020000H
	push	196608					; 00030000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1207 : 	SetEffect(CFM_SUPERSCRIPT, (bNewState ? CFE_SUPERSCRIPT : 0));

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 131072				; 00020000H
	push	eax
	push	196608					; 00030000H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1208 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoSuperscript@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoSuperscript
_TEXT	ENDS
PUBLIC	?DoSubscript@CRulerRichEditCtrl@@IAEXXZ		; CRulerRichEditCtrl::DoSubscript
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoSubscript@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoSubscript@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoSubscript, COMDAT
; _this$ = ecx

; 1211 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1212 : 	// toggle current state
; 1213 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_SUBSCRIPT, CFE_SUBSCRIPT);

	push	65536					; 00010000H
	push	196608					; 00030000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1214 : 	SetEffect(CFM_SUBSCRIPT, (bNewState ? CFE_SUBSCRIPT : 0));

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 65536				; 00010000H
	push	eax
	push	196608					; 00030000H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1215 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoSubscript@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoSubscript
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoItalic@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoItalic@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoItalic, COMDAT
; _this$ = ecx

; 1218 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1219 : 	// toggle current state
; 1220 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_ITALIC, CFE_ITALIC);

	push	2
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1221 : 	SetEffect(CFM_ITALIC, (bNewState ? CFE_ITALIC : 0));

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 2
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1222 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoItalic@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoItalic
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoUnderline@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -8					; size = 4
_this$ = -4						; size = 4
?DoUnderline@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoUnderline, COMDAT
; _this$ = ecx

; 1225 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1226 : 	// toggle current state
; 1227 : 	BOOL bNewState = !m_rtf.SelectionHasEffect(CFM_UNDERLINE, CFE_UNDERLINE);

	push	4
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SelectionHasEffect@CRichEditBaseCtrl@@QBEHKK@Z ; CRichEditBaseCtrl::SelectionHasEffect
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _bNewState$[ebp], eax

; 1228 : 	SetEffect(CFM_UNDERLINE, (bNewState ? CFE_UNDERLINE : 0));

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 4
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEffect@CRulerRichEditCtrl@@IAEXHH@Z	; CRulerRichEditCtrl::SetEffect

; 1229 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoUnderline@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoUnderline
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoLeftAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoLeftAlign@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoLeftAlign, COMDAT
; _this$ = ecx

; 1232 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1233 : 	if (GetParaAlignment() != PFA_LEFT)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ ; CRulerRichEditCtrl::GetParaAlignment
	cmp	eax, 1
	je	SHORT $LN2@DoLeftAlig

; 1234 : 		SetParaAlignment(PFA_LEFT);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetParaAlignment
$LN2@DoLeftAlig:

; 1235 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoLeftAlign@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoLeftAlign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoCenterAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoCenterAlign@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoCenterAlign, COMDAT
; _this$ = ecx

; 1238 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1239 : 	if (GetParaAlignment() != PFA_CENTER)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ ; CRulerRichEditCtrl::GetParaAlignment
	cmp	eax, 3
	je	SHORT $LN2@DoCenterAl

; 1240 : 		SetParaAlignment(PFA_CENTER);

	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetParaAlignment
$LN2@DoCenterAl:

; 1241 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoCenterAlign@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoCenterAlign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoJustify@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoJustify@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoJustify, COMDAT
; _this$ = ecx

; 1244 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1245 : 	if (GetParaAlignment() != PFA_JUSTIFY)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ ; CRulerRichEditCtrl::GetParaAlignment
	cmp	eax, 4
	je	SHORT $LN3@DoJustify

; 1246 : 	{
; 1247 : 		if (m_rtf.SendMessage(EM_SETTYPOGRAPHYOPTIONS, TO_ADVANCEDTYPOGRAPHY, TO_ADVANCEDTYPOGRAPHY))

	push	1
	push	1
	push	1226					; 000004caH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SendMessageW@CWnd@@QBEJIIJ@Z		; CWnd::SendMessageW
	test	eax, eax
	je	SHORT $LN3@DoJustify

; 1248 : 			SetParaAlignment(PFA_JUSTIFY);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetParaAlignment
$LN3@DoJustify:

; 1249 : 	}
; 1250 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoJustify@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoJustify
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoRightAlign@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoRightAlign@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoRightAlign, COMDAT
; _this$ = ecx

; 1253 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1254 : 	if (GetParaAlignment() != PFA_RIGHT)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParaAlignment@CRulerRichEditCtrl@@IBEHXZ ; CRulerRichEditCtrl::GetParaAlignment
	cmp	eax, 2
	je	SHORT $LN2@DoRightAli

; 1255 : 		SetParaAlignment(PFA_RIGHT);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetParaAlignment@CRulerRichEditCtrl@@IAEXH@Z ; CRulerRichEditCtrl::SetParaAlignment
$LN2@DoRightAli:

; 1256 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoRightAlign@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoRightAlign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?FixupTabStops@CRulerRichEditCtrl@@IAEHAAUParaFormat@@@Z
_TEXT	SEGMENT
tv84 = -20						; size = 4
tv65 = -16						; size = 4
_nTabstop$176421 = -12					; size = 4
_t$ = -8						; size = 4
_this$ = -4						; size = 4
_para$ = 8						; size = 4
?FixupTabStops@CRulerRichEditCtrl@@IAEHAAUParaFormat@@@Z PROC ; CRulerRichEditCtrl::FixupTabStops, COMDAT
; _this$ = ecx

; 1259 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1260 : 	// returns TRUE if any changes were made to the tabstops
; 1261 : 	int t = MAX_TAB_STOPS;

	mov	DWORD PTR _t$[ebp], 32			; 00000020H
$LN7@FixupTabSt:

; 1262 : 	
; 1263 : 	// find the last non-zero tabstop
; 1264 : 	while (t--)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _t$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _t$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN6@FixupTabSt

; 1265 : 	{
; 1266 : 		if (para.rgxTabs[t] != 0)

	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _para$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 0
	je	SHORT $LN5@FixupTabSt

; 1267 : 			break;

	jmp	SHORT $LN6@FixupTabSt
$LN5@FixupTabSt:

; 1268 : 	}

	jmp	SHORT $LN7@FixupTabSt
$LN6@FixupTabSt:

; 1269 : 
; 1270 : 	// rebuild the tabs from the last non-zero element
; 1271 : 	if (t < MAX_TAB_STOPS - 1)

	cmp	DWORD PTR _t$[ebp], 31			; 0000001fH
	jge	SHORT $LN4@FixupTabSt

; 1272 : 	{
; 1273 : 		int nTabstop = (t >= 0) ? para.rgxTabs[t] : 0;

	cmp	DWORD PTR _t$[ebp], 0
	jl	SHORT $LN10@FixupTabSt
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR _para$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN11@FixupTabSt
$LN10@FixupTabSt:
	mov	DWORD PTR tv84[ebp], 0
$LN11@FixupTabSt:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _nTabstop$176421[ebp], ecx

; 1274 : 
; 1275 : 		for (++t; t < MAX_TAB_STOPS; t++)

	mov	edx, DWORD PTR _t$[ebp]
	add	edx, 1
	mov	DWORD PTR _t$[ebp], edx
	jmp	SHORT $LN3@FixupTabSt
$LN2@FixupTabSt:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN3@FixupTabSt:
	cmp	DWORD PTR _t$[ebp], 32			; 00000020H
	jge	SHORT $LN1@FixupTabSt

; 1276 : 		{
; 1277 : 			nTabstop += 320;

	mov	ecx, DWORD PTR _nTabstop$176421[ebp]
	add	ecx, 320				; 00000140H
	mov	DWORD PTR _nTabstop$176421[ebp], ecx

; 1278 : 			para.rgxTabs[t] = nTabstop;

	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _para$[ebp]
	mov	ecx, DWORD PTR _nTabstop$176421[ebp]
	mov	DWORD PTR [eax+edx*4+28], ecx

; 1279 : 		}

	jmp	SHORT $LN2@FixupTabSt
$LN1@FixupTabSt:

; 1280 : 
; 1281 : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN8@FixupTabSt
$LN4@FixupTabSt:

; 1282 : 	}
; 1283 : 
; 1284 : 	// else no change
; 1285 : 	return FALSE;

	xor	eax, eax
$LN8@FixupTabSt:

; 1286 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?FixupTabStops@CRulerRichEditCtrl@@IAEHAAUParaFormat@@@Z ENDP ; CRulerRichEditCtrl::FixupTabStops
_TEXT	ENDS
PUBLIC	?HasTabs@ParaFormat@@QBEHXZ			; ParaFormat::HasTabs
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoIndent@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_t$176432 = -184					; size = 4
_newindent$ = -180					; size = 4
_curindent$ = -176					; size = 4
_para$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DoIndent@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoIndent, COMDAT
; _this$ = ecx

; 1289 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1290 : 	// Get current indent and list style
; 1291 : 	ParaFormat	para(PFM_STARTINDENT | PFM_TABSTOPS);

	push	17					; 00000011H
	lea	ecx, DWORD PTR _para$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 1292 : 	m_rtf.GetParaFormat(para);

	lea	eax, DWORD PTR _para$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 1293 : 
; 1294 : 	if (!para.HasTabs())

	lea	ecx, DWORD PTR _para$[ebp]
	call	?HasTabs@ParaFormat@@QBEHXZ		; ParaFormat::HasTabs
	test	eax, eax
	jne	SHORT $LN6@DoIndent

; 1295 : 		BuildTabStops(para);

	lea	ecx, DWORD PTR _para$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuildTabStops@CRulerRichEditCtrl@@IAEXAAUParaFormat@@@Z ; CRulerRichEditCtrl::BuildTabStops
$LN6@DoIndent:

; 1296 : 
; 1297 : 	int curindent = para.dxStartIndent;

	mov	edx, DWORD PTR _para$[ebp+12]
	mov	DWORD PTR _curindent$[ebp], edx

; 1298 : 	int newindent = curindent;

	mov	eax, DWORD PTR _curindent$[ebp]
	mov	DWORD PTR _newindent$[ebp], eax

; 1299 : 
; 1300 : 	// Find next larger tab
; 1301 : 	for (int t = 0; t < MAX_TAB_STOPS; t++)

	mov	DWORD PTR _t$176432[ebp], 0
	jmp	SHORT $LN5@DoIndent
$LN4@DoIndent:
	mov	ecx, DWORD PTR _t$176432[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$176432[ebp], ecx
$LN5@DoIndent:
	cmp	DWORD PTR _t$176432[ebp], 32		; 00000020H
	jge	SHORT $LN3@DoIndent

; 1302 : 	{
; 1303 : 		if (para.rgxTabs[ t ] > para.dxStartIndent)

	mov	edx, DWORD PTR _t$176432[ebp]
	mov	eax, DWORD PTR _para$[ebp+edx*4+28]
	cmp	eax, DWORD PTR _para$[ebp+12]
	jle	SHORT $LN2@DoIndent

; 1304 : 		{
; 1305 : 			newindent = para.rgxTabs[ t ];

	mov	ecx, DWORD PTR _t$176432[ebp]
	mov	edx, DWORD PTR _para$[ebp+ecx*4+28]
	mov	DWORD PTR _newindent$[ebp], edx

; 1306 : 			break;

	jmp	SHORT $LN3@DoIndent
$LN2@DoIndent:

; 1307 : 		}
; 1308 : 	}

	jmp	SHORT $LN4@DoIndent
$LN3@DoIndent:

; 1309 : 
; 1310 : 	// handle exceeding MAX_TAB_STOPS by incrementing by default amount
; 1311 : 	if (newindent == para.dxStartIndent)

	mov	eax, DWORD PTR _newindent$[ebp]
	cmp	eax, DWORD PTR _para$[ebp+12]
	jne	SHORT $LN1@DoIndent

; 1312 : 		newindent += 320;

	mov	ecx, DWORD PTR _newindent$[ebp]
	add	ecx, 320				; 00000140H
	mov	DWORD PTR _newindent$[ebp], ecx
$LN1@DoIndent:

; 1313 : 
; 1314 : 	// Set indent to this value and update tabs
; 1315 : 	para.dwMask = (PFM_OFFSET | PFM_OFFSETINDENT);

	mov	DWORD PTR _para$[ebp+4], -2147483644	; 80000004H

; 1316 : 	para.dxStartIndent = (newindent - curindent);

	mov	edx, DWORD PTR _newindent$[ebp]
	sub	edx, DWORD PTR _curindent$[ebp]
	mov	DWORD PTR _para$[ebp+12], edx

; 1317 : 
; 1318 : 	m_rtf.SetParaFormat(para);

	lea	eax, DWORD PTR _para$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAU_paraformat@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 1319 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1320 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DoIndent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@DoIndent:
	DD	1
	DD	$LN10@DoIndent
$LN10@DoIndent:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN9@DoIndent
$LN9@DoIndent:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
?DoIndent@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoIndent
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerrichedit.h
_TEXT	ENDS
;	COMDAT ?HasTabs@ParaFormat@@QBEHXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_t$ = -8						; size = 4
_this$ = -4						; size = 4
?HasTabs@ParaFormat@@QBEHXZ PROC			; ParaFormat::HasTabs, COMDAT
; _this$ = ecx

; 82   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 		// find the first non-zero tabstop
; 84   : 		int t = MAX_TAB_STOPS;

	mov	DWORD PTR _t$[ebp], 32			; 00000020H
$LN3@HasTabs:

; 85   : 		
; 86   : 		while (t--)

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _t$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _t$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN2@HasTabs

; 87   : 		{
; 88   : 			if (rgxTabs[t] != 0)

	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 0
	je	SHORT $LN1@HasTabs

; 89   : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN4@HasTabs
$LN1@HasTabs:

; 90   : 		}

	jmp	SHORT $LN3@HasTabs
$LN2@HasTabs:

; 91   : 		
; 92   : 		return FALSE; // all zeroes

	xor	eax, eax
$LN4@HasTabs:

; 93   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?HasTabs@ParaFormat@@QBEHXZ ENDP			; ParaFormat::HasTabs
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
;	COMDAT ?DoOutdent@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_t$176444 = -184					; size = 4
_newindent$ = -180					; size = 4
_curindent$ = -176					; size = 4
_para$ = -168						; size = 156
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DoOutdent@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoOutdent, COMDAT
; _this$ = ecx

; 1323 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1324 : 	// Get the current indent, if any
; 1325 : 	ParaFormat	para(PFM_STARTINDENT | PFM_TABSTOPS);

	push	17					; 00000011H
	lea	ecx, DWORD PTR _para$[ebp]
	call	??0ParaFormat@@QAE@K@Z			; ParaFormat::ParaFormat

; 1326 : 	m_rtf.GetParaFormat(para);

	lea	eax, DWORD PTR _para$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAU_paraformat@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 1327 : 
; 1328 : 	int curindent = para.dxStartIndent;

	mov	ecx, DWORD PTR _para$[ebp+12]
	mov	DWORD PTR _curindent$[ebp], ecx

; 1329 : 	int newindent = curindent;

	mov	edx, DWORD PTR _curindent$[ebp]
	mov	DWORD PTR _newindent$[ebp], edx

; 1330 : 
; 1331 : 	// Find closest smaller tab
; 1332 : 	for(int t = 0 ; t < MAX_TAB_STOPS ; t++)

	mov	DWORD PTR _t$176444[ebp], 0
	jmp	SHORT $LN5@DoOutdent
$LN4@DoOutdent:
	mov	eax, DWORD PTR _t$176444[ebp]
	add	eax, 1
	mov	DWORD PTR _t$176444[ebp], eax
$LN5@DoOutdent:
	cmp	DWORD PTR _t$176444[ebp], 32		; 00000020H
	jge	SHORT $LN3@DoOutdent

; 1333 : 	{
; 1334 : 		if (para.rgxTabs[ t ] < para.dxStartIndent)

	mov	ecx, DWORD PTR _t$176444[ebp]
	mov	edx, DWORD PTR _para$[ebp+ecx*4+28]
	cmp	edx, DWORD PTR _para$[ebp+12]
	jge	SHORT $LN2@DoOutdent

; 1335 : 		{
; 1336 : 			newindent = para.rgxTabs[ t ];

	mov	eax, DWORD PTR _t$176444[ebp]
	mov	ecx, DWORD PTR _para$[ebp+eax*4+28]
	mov	DWORD PTR _newindent$[ebp], ecx
$LN2@DoOutdent:

; 1337 : 		}
; 1338 : 	}

	jmp	SHORT $LN4@DoOutdent
$LN3@DoOutdent:

; 1339 : 
; 1340 : 	if (newindent == curindent)

	mov	edx, DWORD PTR _newindent$[ebp]
	cmp	edx, DWORD PTR _curindent$[ebp]
	jne	SHORT $LN1@DoOutdent

; 1341 : 		newindent = 0;

	mov	DWORD PTR _newindent$[ebp], 0
$LN1@DoOutdent:

; 1342 : 
; 1343 : 	// Set indent to this value or 0 if none
; 1344 : 	para.dwMask = (PFM_OFFSET | PFM_OFFSETINDENT);

	mov	DWORD PTR _para$[ebp+4], -2147483644	; 80000004H

; 1345 : 	para.dxStartIndent = (newindent - curindent);

	mov	eax, DWORD PTR _newindent$[ebp]
	sub	eax, DWORD PTR _curindent$[ebp]
	mov	DWORD PTR _para$[ebp+12], eax

; 1346 : 
; 1347 : 	m_rtf.SetParaFormat(para);

	lea	ecx, DWORD PTR _para$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAU_paraformat@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 1348 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1349 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@DoOutdent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@DoOutdent:
	DD	1
	DD	$LN9@DoOutdent
$LN9@DoOutdent:
	DD	-168					; ffffff58H
	DD	156					; 0000009cH
	DD	$LN8@DoOutdent
$LN8@DoOutdent:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
?DoOutdent@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoOutdent
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAUPARAFORMAT2@@@Z:PROC ; CRichEditBaseCtrl::GetParaFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoBulletList@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -208					; size = 4
_pf$ = -200						; size = 188
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DoBulletList@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoBulletList, COMDAT
; _this$ = ecx

; 1352 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1353 : 	ParaFormat2 pf(PFM_NUMBERING);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat2@@QAE@K@Z			; ParaFormat2::ParaFormat2

; 1354 : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAUPARAFORMAT2@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 1355 : 				
; 1356 : 	BOOL bNewState = !(pf.wNumbering == PFN_BULLET);

	movzx	ecx, WORD PTR _pf$[ebp+8]
	sub	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _bNewState$[ebp], ecx

; 1357 : 	pf.Reset(PFM_NUMBERING | PFM_OFFSET);

	push	36					; 00000024H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	?Reset@ParaFormat2@@QAEXK@Z		; ParaFormat2::Reset

; 1358 : 
; 1359 : 	pf.wNumbering = (WORD)(bNewState ? PFN_BULLET : 0);

	xor	edx, edx
	cmp	DWORD PTR _bNewState$[ebp], 0
	setne	dl
	mov	WORD PTR _pf$[ebp+8], dx

; 1360 : 	pf.dxOffset = (bNewState ? 300 : 0);

	mov	eax, DWORD PTR _bNewState$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 300				; 0000012cH
	mov	DWORD PTR _pf$[ebp+20], eax

; 1361 : 
; 1362 : 	m_rtf.SetParaFormat(pf);

	lea	ecx, DWORD PTR _pf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAUPARAFORMAT2@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 1363 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1364 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DoBulletLi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DoBulletLi:
	DD	1
	DD	$LN4@DoBulletLi
$LN4@DoBulletLi:
	DD	-200					; ffffff38H
	DD	188					; 000000bcH
	DD	$LN3@DoBulletLi
$LN3@DoBulletLi:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?DoBulletList@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoBulletList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DoNumberList@CRulerRichEditCtrl@@IAEXXZ
_TEXT	SEGMENT
_bNewState$ = -208					; size = 4
_pf$ = -200						; size = 188
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DoNumberList@CRulerRichEditCtrl@@IAEXXZ PROC		; CRulerRichEditCtrl::DoNumberList, COMDAT
; _this$ = ecx

; 1367 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1368 : 	ParaFormat2 pf(PFM_NUMBERING);

	push	32					; 00000020H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	??0ParaFormat2@@QAE@K@Z			; ParaFormat2::ParaFormat2

; 1369 : 	m_rtf.GetParaFormat(pf);

	lea	eax, DWORD PTR _pf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?GetParaFormat@CRichEditBaseCtrl@@QBEKAAUPARAFORMAT2@@@Z ; CRichEditBaseCtrl::GetParaFormat

; 1370 : 				
; 1371 : 	BOOL bNewState = (pf.wNumbering <= PFN_BULLET);

	movzx	ecx, WORD PTR _pf$[ebp+8]
	xor	edx, edx
	cmp	ecx, 1
	setle	dl
	mov	DWORD PTR _bNewState$[ebp], edx

; 1372 : 	pf.Reset(PFM_NUMBERING | PFM_NUMBERINGSTYLE | PFM_NUMBERINGSTART | PFM_OFFSET);

	push	40996					; 0000a024H
	lea	ecx, DWORD PTR _pf$[ebp]
	call	?Reset@ParaFormat2@@QAEXK@Z		; ParaFormat2::Reset

; 1373 : 
; 1374 : 	if (bNewState)

	cmp	DWORD PTR _bNewState$[ebp], 0
	je	SHORT $LN2@DoNumberLi

; 1375 : 	{
; 1376 : 		pf.wNumbering = PFN_NUMBERLIST;

	mov	eax, 2
	mov	WORD PTR _pf$[ebp+8], ax

; 1377 : 		pf.wNumberingStart = 1;

	mov	ecx, 1
	mov	WORD PTR _pf$[ebp+176], cx

; 1378 : 		pf.wNumberingStyle = 0x200;

	mov	edx, 512				; 00000200H
	mov	WORD PTR _pf$[ebp+178], dx

; 1379 : 		pf.dxOffset = 300;

	mov	DWORD PTR _pf$[ebp+20], 300		; 0000012cH

; 1380 : 	}
; 1381 : 	else

	jmp	SHORT $LN1@DoNumberLi
$LN2@DoNumberLi:

; 1382 : 	{
; 1383 : 		pf.wNumbering = 0;

	xor	eax, eax
	mov	WORD PTR _pf$[ebp+8], ax

; 1384 : 		pf.dxOffset = 0;

	mov	DWORD PTR _pf$[ebp+20], 0
$LN1@DoNumberLi:

; 1385 : 	}
; 1386 : 
; 1387 : 	m_rtf.SetParaFormat(pf);

	lea	ecx, DWORD PTR _pf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetParaFormat@CRichEditBaseCtrl@@QAEHAAUPARAFORMAT2@@@Z ; CRichEditBaseCtrl::SetParaFormat

; 1388 : 	m_rtf.SetFocus();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetFocus@CWnd@@QAEPAV1@XZ		; CWnd::SetFocus

; 1389 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DoNumberLi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@DoNumberLi:
	DD	1
	DD	$LN6@DoNumberLi
$LN6@DoNumberLi:
	DD	-200					; ffffff38H
	DD	188					; 000000bcH
	DD	$LN5@DoNumberLi
$LN5@DoNumberLi:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
?DoNumberList@CRulerRichEditCtrl@@IAEXXZ ENDP		; CRulerRichEditCtrl::DoNumberList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ:PROC ; CToolBar::GetToolBarCtrl
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShowToolbar@CRulerRichEditCtrl@@QAEXH@Z
_TEXT	SEGMENT
_rect$176470 = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_show$ = 8						; size = 4
?ShowToolbar@CRulerRichEditCtrl@@QAEXH@Z PROC		; CRulerRichEditCtrl::ShowToolbar, COMDAT
; _this$ = ecx

; 1392 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1393 : 	m_showToolbar = show;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _show$[ebp]
	mov	DWORD PTR [eax+288], ecx

; 1394 : 
; 1395 : 	if (m_hWnd)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	SHORT $LN4@ShowToolba

; 1396 : 	{
; 1397 : 		if (show)

	cmp	DWORD PTR _show$[ebp], 0
	je	SHORT $LN2@ShowToolba

; 1398 : 			m_toolbar.GetToolBarCtrl().ShowWindow(SW_SHOW);

	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow

; 1399 : 		else

	jmp	SHORT $LN1@ShowToolba
$LN2@ShowToolba:

; 1400 : 			m_toolbar.GetToolBarCtrl().ShowWindow(SW_HIDE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetToolBarCtrl@CToolBar@@QBEAAVCToolBarCtrl@@XZ ; CToolBar::GetToolBarCtrl
	mov	ecx, eax
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow
$LN1@ShowToolba:

; 1401 : 
; 1402 : 		CRect rect;

	lea	ecx, DWORD PTR _rect$176470[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 1403 : 		GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$176470[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 1404 : 		LayoutControls(rect.Width(), rect.Height());

	lea	ecx, DWORD PTR _rect$176470[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	lea	ecx, DWORD PTR _rect$176470[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ; CRulerRichEditCtrl::LayoutControls
$LN4@ShowToolba:

; 1405 : 	}
; 1406 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ShowToolba
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@ShowToolba:
	DD	1
	DD	$LN7@ShowToolba
$LN7@ShowToolba:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN6@ShowToolba
$LN6@ShowToolba:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?ShowToolbar@CRulerRichEditCtrl@@QAEXH@Z ENDP		; CRulerRichEditCtrl::ShowToolbar
_TEXT	ENDS
EXTRN	?CheckButton@CRRECToolBar@@QAEHHH@Z:PROC	; CRRECToolBar::CheckButton
EXTRN	?SetTargetDevice@CRichEditCtrl@@QAEHPAUHDC__@@J@Z:PROC ; CRichEditCtrl::SetTargetDevice
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWordWrap@CRulerRichEditCtrl@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bWrap$ = 8						; size = 4
?SetWordWrap@CRulerRichEditCtrl@@QAEXH@Z PROC		; CRulerRichEditCtrl::SetWordWrap, COMDAT
; _this$ = ecx

; 1409 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1410 : 	if (bWrap != m_bWordWrap)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bWrap$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	je	SHORT $LN1@SetWordWra

; 1411 : 		m_rtf.SetTargetDevice(NULL, bWrap ? 0 : 1);

	xor	edx, edx
	cmp	DWORD PTR _bWrap$[ebp], 0
	sete	dl
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetTargetDevice@CRichEditCtrl@@QAEHPAUHDC__@@J@Z ; CRichEditCtrl::SetTargetDevice
$LN1@SetWordWra:

; 1412 : 
; 1413 : 	m_bWordWrap = bWrap;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bWrap$[ebp]
	mov	DWORD PTR [eax+300], ecx

; 1414 : 	m_toolbar.CheckButton(ID_EDIT_WORDWRAP, m_bWordWrap ? 1 : 0);

	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+300], 0
	setne	al
	push	eax
	push	32794					; 0000801aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?CheckButton@CRRECToolBar@@QAEHHH@Z	; CRRECToolBar::CheckButton

; 1415 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWordWrap@CRulerRichEditCtrl@@QAEXH@Z ENDP		; CRulerRichEditCtrl::SetWordWrap
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShowRuler@CRulerRichEditCtrl@@QAEXH@Z
_TEXT	SEGMENT
_rect$176483 = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_show$ = 8						; size = 4
?ShowRuler@CRulerRichEditCtrl@@QAEXH@Z PROC		; CRulerRichEditCtrl::ShowRuler, COMDAT
; _this$ = ecx

; 1418 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1419 : 	m_showRuler = show;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _show$[ebp]
	mov	DWORD PTR [eax+292], ecx

; 1420 : 
; 1421 : 	if (m_hWnd)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	SHORT $LN4@ShowRuler

; 1422 : 	{
; 1423 : 		if (show)

	cmp	DWORD PTR _show$[ebp], 0
	je	SHORT $LN2@ShowRuler

; 1424 : 			m_ruler.ShowWindow(SW_SHOW);

	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow

; 1425 : 		else

	jmp	SHORT $LN1@ShowRuler
$LN2@ShowRuler:

; 1426 : 			m_ruler.ShowWindow(SW_HIDE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow
$LN1@ShowRuler:

; 1427 : 
; 1428 : 		CRect rect;

	lea	ecx, DWORD PTR _rect$176483[ebp]
	call	??0CRect@@QAE@XZ			; CRect::CRect

; 1429 : 		GetClientRect(rect);

	lea	ecx, DWORD PTR _rect$176483[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z	; CWnd::GetClientRect

; 1430 : 		LayoutControls(rect.Width(), rect.Height());

	lea	ecx, DWORD PTR _rect$176483[ebp]
	call	?Height@CRect@@QBEHXZ			; CRect::Height
	push	eax
	lea	ecx, DWORD PTR _rect$176483[ebp]
	call	?Width@CRect@@QBEHXZ			; CRect::Width
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ; CRulerRichEditCtrl::LayoutControls
$LN4@ShowRuler:

; 1431 : 	}
; 1432 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ShowRuler
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@ShowRuler:
	DD	1
	DD	$LN7@ShowRuler
$LN7@ShowRuler:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN6@ShowRuler
$LN6@ShowRuler:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?ShowRuler@CRulerRichEditCtrl@@QAEXH@Z ENDP		; CRulerRichEditCtrl::ShowRuler
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z:PROC	; CWnd::MoveWindow
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:PROC		; CWnd::MoveWindow
EXTRN	?Resize@CEnToolBar@@QAEHHVCPoint@@@Z:PROC	; CEnToolBar::Resize
EXTRN	??0CPoint@@QAE@HH@Z:PROC			; CPoint::CPoint
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z
_TEXT	SEGMENT
$T178212 = -48						; size = 8
_rect$ = -36						; size = 16
_rulerHeight$ = -16					; size = 4
_toolbarHeight$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z PROC	; CRulerRichEditCtrl::LayoutControls, COMDAT
; _this$ = ecx

; 1435 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1436 : 	if (!width || !height)

	cmp	DWORD PTR _width$[ebp], 0
	je	SHORT $LN3@LayoutCont
	cmp	DWORD PTR _height$[ebp], 0
	jne	SHORT $LN4@LayoutCont
$LN3@LayoutCont:

; 1437 : 		return;

	jmp	$LN5@LayoutCont
$LN4@LayoutCont:

; 1438 : 
; 1439 : 	int toolbarHeight = 0;

	mov	DWORD PTR _toolbarHeight$[ebp], 0

; 1440 : 
; 1441 : 	if (m_showToolbar)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+288], 0
	je	SHORT $LN2@LayoutCont

; 1442 : 	{
; 1443 : 		toolbarHeight = m_toolbar.Resize(width, CPoint(0, 0));

	push	0
	push	0
	lea	ecx, DWORD PTR $T178212[ebp]
	call	??0CPoint@@QAE@HH@Z			; CPoint::CPoint
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?Resize@CEnToolBar@@QAEHHVCPoint@@@Z	; CEnToolBar::Resize
	mov	DWORD PTR _toolbarHeight$[ebp], eax
$LN2@LayoutCont:

; 1444 : 	}
; 1445 : 
; 1446 : 	int rulerHeight = 0;

	mov	DWORD PTR _rulerHeight$[ebp], 0

; 1447 : 
; 1448 : 	if (m_showRuler)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+292], 0
	je	SHORT $LN1@LayoutCont

; 1449 : 		rulerHeight = RULER_HEIGHT;

	mov	DWORD PTR _rulerHeight$[ebp], 26	; 0000001aH
$LN1@LayoutCont:

; 1450 : 
; 1451 : 	m_ruler.MoveWindow(0, toolbarHeight, width, rulerHeight);

	push	1
	mov	edx, DWORD PTR _rulerHeight$[ebp]
	push	edx
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toolbarHeight$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?MoveWindow@CWnd@@QAEXHHHHH@Z		; CWnd::MoveWindow

; 1452 : 
; 1453 : 	CRect rect(0, toolbarHeight + rulerHeight, width, height);

	mov	edx, DWORD PTR _height$[ebp]
	push	edx
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toolbarHeight$[ebp]
	add	ecx, DWORD PTR _rulerHeight$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _rect$[ebp]
	call	??0CRect@@QAE@HHHH@Z			; CRect::CRect

; 1454 : 	m_rtf.MoveWindow(rect);

	push	1
	lea	ecx, DWORD PTR _rect$[ebp]
	call	??BCRect@@QAEPAUtagRECT@@XZ		; CRect::operator tagRECT *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z	; CWnd::MoveWindow
$LN5@LayoutCont:

; 1455 : 
; 1456 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LayoutCont
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@LayoutCont:
	DD	1
	DD	$LN8@LayoutCont
$LN8@LayoutCont:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN7@LayoutCont
$LN7@LayoutCont:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?LayoutControls@CRulerRichEditCtrl@@IAEXHH@Z ENDP	; CRulerRichEditCtrl::LayoutControls
_TEXT	ENDS
PUBLIC	?IsToolbarVisible@CRulerRichEditCtrl@@QBEHXZ	; CRulerRichEditCtrl::IsToolbarVisible
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsToolbarVisible@CRulerRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsToolbarVisible@CRulerRichEditCtrl@@QBEHXZ PROC	; CRulerRichEditCtrl::IsToolbarVisible, COMDAT
; _this$ = ecx

; 1459 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1460 : 	return m_showToolbar;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+288]

; 1461 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsToolbarVisible@CRulerRichEditCtrl@@QBEHXZ ENDP	; CRulerRichEditCtrl::IsToolbarVisible
_TEXT	ENDS
PUBLIC	?IsRulerVisible@CRulerRichEditCtrl@@QBEHXZ	; CRulerRichEditCtrl::IsRulerVisible
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsRulerVisible@CRulerRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsRulerVisible@CRulerRichEditCtrl@@QBEHXZ PROC		; CRulerRichEditCtrl::IsRulerVisible, COMDAT
; _this$ = ecx

; 1464 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1465 : 	return m_showRuler;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+292]

; 1466 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsRulerVisible@CRulerRichEditCtrl@@QBEHXZ ENDP		; CRulerRichEditCtrl::IsRulerVisible
_TEXT	ENDS
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z:PROC ; CRichEditCtrl::SetBackgroundColor
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	?SetReadOnly@CRichEditCtrl@@QAEHH@Z:PROC	; CRichEditCtrl::SetReadOnly
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_readOnly$ = 8						; size = 4
?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z PROC		; CRulerRichEditCtrl::SetReadOnly, COMDAT
; _this$ = ecx

; 1469 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1470 : 	if (m_rtf.m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN1@SetReadOnl

; 1471 : 	{
; 1472 : 		m_rtf.SetReadOnly(readOnly);

	mov	ecx, DWORD PTR _readOnly$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetReadOnly@CRichEditCtrl@@QAEHH@Z	; CRichEditCtrl::SetReadOnly

; 1473 : 		m_rtf.SetBackgroundColor(!readOnly, GetSysColor(COLOR_3DFACE));

	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	xor	edx, edx
	cmp	DWORD PTR _readOnly$[ebp], 0
	sete	dl
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ; CRichEditCtrl::SetBackgroundColor

; 1474 : 
; 1475 : 		m_toolbar.EnableWindow(!readOnly);

	xor	eax, eax
	cmp	DWORD PTR _readOnly$[ebp], 0
	sete	al
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?EnableWindow@CWnd@@QAEHH@Z		; CWnd::EnableWindow

; 1476 : 		m_ruler.EnableWindow(!readOnly);

	xor	ecx, ecx
	cmp	DWORD PTR _readOnly$[ebp], 0
	sete	cl
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1132				; 0000046cH
	call	?EnableWindow@CWnd@@QAEHH@Z		; CWnd::EnableWindow

; 1477 : 
; 1478 : 		UpdateToolbarButtons();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateToolbarButtons@CRulerRichEditCtrl@@IAEXXZ ; CRulerRichEditCtrl::UpdateToolbarButtons
$LN1@SetReadOnl:

; 1479 : 	}
; 1480 : 
; 1481 : 	m_readOnly = readOnly;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _readOnly$[ebp]
	mov	DWORD PTR [edx+296], eax

; 1482 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReadOnly@CRulerRichEditCtrl@@QAEXH@Z ENDP		; CRulerRichEditCtrl::SetReadOnly
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetReadOnly@CRulerRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReadOnly@CRulerRichEditCtrl@@QBEHXZ PROC		; CRulerRichEditCtrl::GetReadOnly, COMDAT
; _this$ = ecx

; 1485 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1486 : 	return m_readOnly;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+296]

; 1487 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReadOnly@CRulerRichEditCtrl@@QBEHXZ ENDP		; CRulerRichEditCtrl::GetReadOnly
_TEXT	ENDS
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnCommand@CRulerRichEditCtrl@@MAEHIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnCommand@CRulerRichEditCtrl@@MAEHIJ@Z PROC		; CRulerRichEditCtrl::OnCommand, COMDAT
; _this$ = ecx

; 1490 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1491 : 	if (CWnd::OnCommand(wParam, lParam))

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCommand@CWnd@@MAEHIJ@Z		; CWnd::OnCommand
	test	eax, eax
	je	SHORT $LN2@OnCommand

; 1492 : 	{
; 1493 : 		if (m_toolbar.GetSafeHwnd())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	test	eax, eax
	je	SHORT $LN1@OnCommand

; 1494 : 			m_toolbar.RefreshButtonStates(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 616				; 00000268H
	call	?RefreshButtonStates@CEnToolBar@@QAEXH@Z ; CEnToolBar::RefreshButtonStates
$LN1@OnCommand:

; 1495 : 
; 1496 : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@OnCommand
$LN2@OnCommand:

; 1497 : 	}
; 1498 : 
; 1499 : 	// else
; 1500 : 	return FALSE;

	xor	eax, eax
$LN3@OnCommand:

; 1501 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnCommand@CRulerRichEditCtrl@@MAEHIJ@Z ENDP		; CRulerRichEditCtrl::OnCommand
_TEXT	ENDS
PUBLIC	??_7CCommonDialog@@6B@				; CCommonDialog::`vftable'
PUBLIC	??_R4CCommonDialog@@6B@				; CCommonDialog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCommonDialog@@@8			; CCommonDialog `RTTI Type Descriptor'
PUBLIC	??_R3CCommonDialog@@8				; CCommonDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCommonDialog@@8				; CCommonDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCommonDialog@@8			; CCommonDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
EXTRN	?GetRuntimeClass@CCommonDialog@@UBEPAUCRuntimeClass@@XZ:PROC ; CCommonDialog::GetRuntimeClass
EXTRN	??_ECCommonDialog@@UAEPAXI@Z:PROC		; CCommonDialog::`vector deleting destructor'
EXTRN	?AssertValid@CDialog@@UBEXXZ:PROC		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:PROC	; CDialog::Dump
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?GetMessageMap@CCommonDialog@@MBEPBUAFX_MSGMAP@@XZ:PROC ; CCommonDialog::GetMessageMap
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:PROC ; CDialog::PreTranslateMessage
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:PROC		; CDialog::Create
EXTRN	?Create@CDialog@@UAEHPB_WPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	?OnOK@CCommonDialog@@MAEXXZ:PROC		; CCommonDialog::OnOK
EXTRN	?OnCancel@CCommonDialog@@MAEXXZ:PROC		; CCommonDialog::OnCancel
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
;	COMDAT ??_R2CDialog@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxdlgs.h
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
_DATA	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCommonDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCommonDialog@@8 DD FLAT:??_R0?AVCCommonDialog@@@8 ; CCommonDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CCommonDialog@@8
rdata$r	SEGMENT
??_R2CCommonDialog@@8 DD FLAT:??_R1A@?0A@EA@CCommonDialog@@8 ; CCommonDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCommonDialog@@8
rdata$r	SEGMENT
??_R3CCommonDialog@@8 DD 00H				; CCommonDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCommonDialog@@@8
_DATA	SEGMENT
??_R0?AVCCommonDialog@@@8 DD FLAT:??_7type_info@@6B@	; CCommonDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCommonDialog@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCommonDialog@@6B@
rdata$r	SEGMENT
??_R4CCommonDialog@@6B@ DD 00H				; CCommonDialog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCommonDialog@@@8
	DD	FLAT:??_R3CCommonDialog@@8
rdata$r	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT
??_7CCommonDialog@@6B@ DD FLAT:??_R4CCommonDialog@@6B@	; CCommonDialog::`vftable'
	DD	FLAT:?GetRuntimeClass@CCommonDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECCommonDialog@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CCommonDialog@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTW@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcW@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPB_WPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CCommonDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CCommonDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCommonDialog@@UAE@XZ PROC				; CCommonDialog::~CCommonDialog, COMDAT
; _this$ = ecx

; 116  :     virtual ~CCommonDialog() {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCommonDialog@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCommonDialog@@UAE@XZ ENDP				; CCommonDialog::~CCommonDialog
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCommonDialog@@UAEPAXI@Z PROC			; CCommonDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCommonDialog@@UAE@XZ		; CCommonDialog::~CCommonDialog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCommonDialog@@UAEPAXI@Z ENDP			; CCommonDialog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp__RegisterWindowMessageW@4:PROC
; Function compile flags: /Odtp /RTCsu
; File d:\_code\shared\urlricheditctrl.h
;	COMDAT ??__EWM_UREN_CUSTOMURL@@YAXXZ
text$yc	SEGMENT
??__EWM_UREN_CUSTOMURL@@YAXXZ PROC			; `dynamic initializer for 'WM_UREN_CUSTOMURL'', COMDAT

; 16   : const UINT WM_UREN_CUSTOMURL = ::RegisterWindowMessage(_T("WM_UREN_CUSTOMURL")); // lParam == full url

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG171746
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _WM_UREN_CUSTOMURL, eax
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EWM_UREN_CUSTOMURL@@YAXXZ ENDP			; `dynamic initializer for 'WM_UREN_CUSTOMURL''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__EWM_UREN_FAILEDURL@@YAXXZ
text$yc	SEGMENT
??__EWM_UREN_FAILEDURL@@YAXXZ PROC			; `dynamic initializer for 'WM_UREN_FAILEDURL'', COMDAT

; 17   : const UINT WM_UREN_FAILEDURL = ::RegisterWindowMessage(_T("WM_UREN_FAILEDURL")); // lParam == full url

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG171751
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _WM_UREN_FAILEDURL, eax
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EWM_UREN_FAILEDURL@@YAXXZ ENDP			; `dynamic initializer for 'WM_UREN_FAILEDURL''
; Function compile flags: /Odtp /RTCsu
; File d:\_code\rtfcontentctrl\rulerricheditctrl.cpp
text$yc	ENDS
;	COMDAT ??__Eurm_RULERACTION@@YAXXZ
text$yc	SEGMENT
??__Eurm_RULERACTION@@YAXXZ PROC			; `dynamic initializer for 'urm_RULERACTION'', COMDAT

; 82   : UINT urm_RULERACTION = ::RegisterWindowMessage(_T("_RULERRICHEDITCTRL_RULER_TRACK_"));

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG175525
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?urm_RULERACTION@@3IA, eax	; urm_RULERACTION
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eurm_RULERACTION@@YAXXZ ENDP			; `dynamic initializer for 'urm_RULERACTION''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__Eurm_GETSCROLLPOS@@YAXXZ
text$yc	SEGMENT
??__Eurm_GETSCROLLPOS@@YAXXZ PROC			; `dynamic initializer for 'urm_GETSCROLLPOS'', COMDAT

; 83   : UINT urm_GETSCROLLPOS = ::RegisterWindowMessage(_T("_RULERRICHEDITCTRL_GET_SCROLL_POS_"));

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG175529
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?urm_GETSCROLLPOS@@3IA, eax	; urm_GETSCROLLPOS
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eurm_GETSCROLLPOS@@YAXXZ ENDP			; `dynamic initializer for 'urm_GETSCROLLPOS''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__Eurm_SETCURRENTFONTNAME@@YAXXZ
text$yc	SEGMENT
??__Eurm_SETCURRENTFONTNAME@@YAXXZ PROC			; `dynamic initializer for 'urm_SETCURRENTFONTNAME'', COMDAT

; 84   : UINT urm_SETCURRENTFONTNAME = ::RegisterWindowMessage(_T("_RULERRICHEDITCTRL_SET_CURRENT_FONT_NAME"));

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG175534
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?urm_SETCURRENTFONTNAME@@3IA, eax ; urm_SETCURRENTFONTNAME
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eurm_SETCURRENTFONTNAME@@YAXXZ ENDP			; `dynamic initializer for 'urm_SETCURRENTFONTNAME''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__Eurm_SETCURRENTFONTSIZE@@YAXXZ
text$yc	SEGMENT
??__Eurm_SETCURRENTFONTSIZE@@YAXXZ PROC			; `dynamic initializer for 'urm_SETCURRENTFONTSIZE'', COMDAT

; 85   : UINT urm_SETCURRENTFONTSIZE = ::RegisterWindowMessage(_T("_RULERRICHEDITCTRL_SET_CURRENT_FONT_SIZE"));

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG175539
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?urm_SETCURRENTFONTSIZE@@3IA, eax ; urm_SETCURRENTFONTSIZE
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eurm_SETCURRENTFONTSIZE@@YAXXZ ENDP			; `dynamic initializer for 'urm_SETCURRENTFONTSIZE''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__Eurm_SETCURRENTFONTCOLOR@@YAXXZ
text$yc	SEGMENT
??__Eurm_SETCURRENTFONTCOLOR@@YAXXZ PROC		; `dynamic initializer for 'urm_SETCURRENTFONTCOLOR'', COMDAT

; 86   : UINT urm_SETCURRENTFONTCOLOR = ::RegisterWindowMessage(_T("_RULERRICHEDITCTRL_SET_CURRENT_FONT_COLOR"));

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	OFFSET $SG175544
	call	DWORD PTR __imp__RegisterWindowMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?urm_SETCURRENTFONTCOLOR@@3IA, eax ; urm_SETCURRENTFONTCOLOR
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eurm_SETCURRENTFONTCOLOR@@YAXXZ ENDP		; `dynamic initializer for 'urm_SETCURRENTFONTCOLOR''
text$yc	ENDS
PUBLIC	?urm_SETCURRENTFONTCOLOR@@3IA			; urm_SETCURRENTFONTCOLOR
PUBLIC	?urm_SETCURRENTFONTSIZE@@3IA			; urm_SETCURRENTFONTSIZE
PUBLIC	?urm_SETCURRENTFONTNAME@@3IA			; urm_SETCURRENTFONTNAME
PUBLIC	?urm_GETSCROLLPOS@@3IA				; urm_GETSCROLLPOS
PUBLIC	?urm_RULERACTION@@3IA				; urm_RULERACTION
_BSS	SEGMENT
?urm_SETCURRENTFONTCOLOR@@3IA DD 01H DUP (?)		; urm_SETCURRENTFONTCOLOR
?urm_SETCURRENTFONTSIZE@@3IA DD 01H DUP (?)		; urm_SETCURRENTFONTSIZE
?urm_SETCURRENTFONTNAME@@3IA DD 01H DUP (?)		; urm_SETCURRENTFONTNAME
?urm_GETSCROLLPOS@@3IA DD 01H DUP (?)			; urm_GETSCROLLPOS
?urm_RULERACTION@@3IA DD 01H DUP (?)			; urm_RULERACTION
_WM_UREN_FAILEDURL DD 01H DUP (?)
_WM_UREN_CUSTOMURL DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_WM_UREN_CUSTOMURL$initializer$ DD FLAT:??__EWM_UREN_CUSTOMURL@@YAXXZ
_WM_UREN_FAILEDURL$initializer$ DD FLAT:??__EWM_UREN_FAILEDURL@@YAXXZ
_urm_RULERACTION$initializer$ DD FLAT:??__Eurm_RULERACTION@@YAXXZ
_urm_GETSCROLLPOS$initializer$ DD FLAT:??__Eurm_GETSCROLLPOS@@YAXXZ
_urm_SETCURRENTFONTNAME$initializer$ DD FLAT:??__Eurm_SETCURRENTFONTNAME@@YAXXZ
_urm_SETCURRENTFONTSIZE$initializer$ DD FLAT:??__Eurm_SETCURRENTFONTSIZE@@YAXXZ
_urm_SETCURRENTFONTCOLOR$initializer$ DD FLAT:??__Eurm_SETCURRENTFONTCOLOR@@YAXXZ
CRT$XCU	ENDS
END
